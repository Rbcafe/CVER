<!--


   File generated by translating loops into recursive template calls.
   XSLT Loop Compiler, Version 1.0
   GPL (c) O. Becker

   
-->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:j="http://xml.apache.org/xalan/java" xmlns:bufferedreader="xalan://java.io.BufferedReader" xmlns:inputstreamreader="xalan://java.io.InputStreamReader" xmlns:process="xalan://java.lang.Process" xmlns:runtime="xalan://java.lang.Runtime" xmlns:loop="http://informatik.hu-berlin.de/loop" exclude-result-prefixes="j" version="1.0">
 <!--  Configure the output  -->
<xsl:output method="text"/>
<xsl:strip-space elements="*"/>
 <!--  Some variables  -->
<xsl:variable name="rt" select="runtime:getRuntime()"/>
<xsl:variable name="os" select="j:java.lang.System.getProperty('os.name')"/>
<xsl:variable name="unix_shell" select="'/bin/bash'"/>
<xsl:variable name="unix_option" select="'-c'"/>
<xsl:variable name="win_shell" select="'cmd.exe'"/>
<xsl:variable name="win_option" select="'/C'"/>
<xsl:variable name="delim" select="' -=DELIM=- '"/>
 <!--  The main template  -->
<xsl:template match="//command">
 <!--  Fetch from the XML file  -->
<xsl:variable name="command" select="text()"/>
 <!--  Check the underlying OS  -->
<xsl:variable name="tmp">
<xsl:choose>
<xsl:when test="contains($os, 'indows')">
<xsl:value-of select="concat($win_shell, $delim, $win_option, $delim, $command)"/>
</xsl:when>
<xsl:otherwise>
<xsl:value-of select="concat($unix_shell, $delim, $unix_option, $delim, $command)"/>
</xsl:otherwise>
</xsl:choose>
</xsl:variable>
<xsl:variable name="cmd" select="j:java.lang.String.new($tmp)"/>
 <!--  Create the process and its streams  -->
<xsl:variable name="array" select="j:split($cmd, $delim)"/>
<xsl:variable name="proc" select="runtime:exec($rt, $array)"/>
<xsl:variable name="inputstream" select="process:getInputStream($proc)"/>
<xsl:variable name="inputstreamreader" select="inputstreamreader:new($inputstream)"/>
<xsl:variable name="bufferedreader" select="bufferedreader:new($inputstreamreader)"/>
 <!--  Print the detected OS  -->
<xsl:text>OS [</xsl:text>
<xsl:value-of select="$os"/>
<xsl:text>] ... </xsl:text>
 <!--  Print the executed command  -->
<xsl:text>Executing [</xsl:text>
<xsl:value-of select="$command"/>
<xsl:text>] ... </xsl:text>
 <!--  Prepare the loop  -->
<xsl:variable name="cond" select="1"/>
<xsl:variable name="result" select="N/A"/>
<axslt:call-template xmlns:axslt="http://www.w3.org/1999/XSL/Transform" name="while-loop-id2496582">
<axslt:with-param name="command" select="$command"/>
<axslt:with-param name="tmp" select="$tmp"/>
<axslt:with-param name="cmd" select="$cmd"/>
<axslt:with-param name="array" select="$array"/>
<axslt:with-param name="proc" select="$proc"/>
<axslt:with-param name="inputstream" select="$inputstream"/>
<axslt:with-param name="inputstreamreader" select="$inputstreamreader"/>
<axslt:with-param name="bufferedreader" select="$bufferedreader"/>
<axslt:with-param name="cond" select="$cond"/>
<axslt:with-param name="result" select="$result"/>
</axslt:call-template>
</xsl:template>
<axslt:template xmlns:axslt="http://www.w3.org/1999/XSL/Transform" name="while-loop-id2496582">
<axslt:param name="command"/>
<axslt:param name="tmp"/>
<axslt:param name="cmd"/>
<axslt:param name="array"/>
<axslt:param name="proc"/>
<axslt:param name="inputstream"/>
<axslt:param name="inputstreamreader"/>
<axslt:param name="bufferedreader"/>
<axslt:param name="cond"/>
<axslt:param name="result"/>
<axslt:choose>
<axslt:when test="$cond">
<xsl:variable name="line" select="bufferedreader:readLine($bufferedreader)"/>
<xsl:variable name="class" select="j:toString(j:getClass($line))"/>
<xsl:variable name="continue" select="j:equals($class, 'class java.lang.String')"/>
 <!--
 Debug code
             <xsl:text>Line: </xsl:text><xsl:value-of select="$line"/> <xsl:text>&#xA;</xsl:text>
             <xsl:text>Loop : </xsl:text><xsl:value-of select="$continue"/> <xsl:text>&#xA;</xsl:text>
             
-->
<axslt:call-template name="while-loop-id2496582">
<axslt:with-param name="command" select="$command"/>
<axslt:with-param name="tmp" select="$tmp"/>
<axslt:with-param name="cmd" select="$cmd"/>
<axslt:with-param name="array" select="$array"/>
<axslt:with-param name="proc" select="$proc"/>
<axslt:with-param name="inputstream" select="$inputstream"/>
<axslt:with-param name="inputstreamreader" select="$inputstreamreader"/>
<axslt:with-param name="bufferedreader" select="$bufferedreader"/>
<axslt:with-param name="cond" select="$continue"/>
<axslt:with-param name="result" select="concat($result, $line, ' ')"/>
</axslt:call-template>
</axslt:when>
<axslt:otherwise>
 <!--
 Debug code
             <xsl:text>Result:</xsl:text>
             <xsl:text>&#xA;</xsl:text>
             
-->
<xsl:value-of select="$result"/>
</axslt:otherwise>
</axslt:choose>
</axslt:template>