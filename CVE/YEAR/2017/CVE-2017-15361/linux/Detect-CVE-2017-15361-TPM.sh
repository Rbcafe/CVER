#!/bin/bash
#=================================================================================
#=
#=     FILE: Detect-CVE-2017-15361-TPM.sh
#=
#
####
# Below is the description in markdown. It is used as input to generate roff section that is at the end of this file
# I use
# awk '/# BEGIN INPUT DOCUMENTATION/{flag=1;next} /# END INPUT DOCUMENTATION/{flag=0} flag {print}' Detect-CVE-2017-15361-TPM.sh | cut -b 3- | ronn -r
# BEGIN INPUT DOCUMENTATION
#
#=Detect-CVE-2017-15361-TPM.sh -- A tester for CVE-2017-15361
#========================================
#=
#=SYNOPSIS
#=--------
#=`Detect-CVE-2017-15361-TPM.sh`
#=   --help|-h|help
#=
#=DESCRIPTION
#=-----------
#=
#=`Detect-CVE-2017-15361-TPM.sh` is a utility to test whether the current system
#= is vulnerable to CVE-2017-15361. Only TPM 1.2 devices are supported.
#= To use the utility, run without the help options.
#=
#=OPTIONS
#=-------
#=* `--help`, `-h`:
#=   Prints this help message
#=
#=REFERENCES
#=----------
#=*https://cve-mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-15361
# END INPUT DOCUMENTATION


if [ "$1" == '-h' ] || [ "$1" == "--help" ]; then
    ME="$(which $0)"	                                      # Find me
    NUM=$(grep -n '^ #BEGIN DOCUMENTATION' $ME | awk -F: '{print $1}')
    NUM=$(expr $NUM + 1)
    tail --lines=+$NUM $ME | man -l -
    exit 0;
fi


if [ ! -r ${1:-/sys/class/tpm/tpm0/device/caps} ]; then
    echo "Could not find the TPM information file."
    echo "The TPM driver is probably not installed."
    exit 1;
fi

MSG=$(
    (
    # Put the results of tpm_version (which seem like key/value pair)
    # into bash associative array.
    declare -A infomap=()
    while read line; do
	# Get tag
	tag=${line%%:*}
	# Remove all spaces
	tag=${tag//[[:blank:]]}
	infomap[${tag}]=$(echo ${line#*:})
    done

    if [ "${infomap[Manufacturer]}" == "" ]; then
	echo UNKNOWN
	exit 0;
    fi
    if [ "${infomap[Manufacturer]}" != "0x49465800" ]; then
	echo NOTINFIN
	exit 0;
    fi
    # Split on dot(.) and put values in array
    IFS='.' read -ra chipVer <<< ${infomap[Firmwareversion]}

    case ${chipVer[0]} in
	4)
	    if [ ${chipVer[1]} -le 33 ]    ||
		   [ ${chipVer[1]} == 40 ] ||
		   [ ${chipVer[1]} == 41 ] ||
		   [ ${chipVer[1]} == 42 ] ; then
		echo VULN
		exit 0
	    fi
	;;

	5)
	    if [ ${chipVer[1]} -le 61 ]; then
		echo VULN
		exit 0
	    fi
	;;

	6)
	    if [ ${chipVer[1]} -le 42 ]; then
		echo VULN
		exit 0
	    fi
	;;

	7)
	    if [ ${chipVer[1]} -le 61 ]; then
		echo VULN
		exit 0

	    fi
	;;
	133)
	    if [ ${chipVer[1]} -le 32 ]; then
		echo VULN
		exit 0
	    fi
	;;

	149)
	    if [ ${chipVer[1]} -le 32 ]; then
		echo VULN
		exit 0
	    fi
	;;

	default)
	;;
    esac
    echo GOOD
    exit 0
    ) < ${1:-/sys/class/tpm/tpm0/device/caps}
   )


if [ "$MSG" == VULN ]; then
    echo "This firmware *IS* vulnerable. Please upgrade as soon as possible."
elif [ "$MSG" == NOTINFIN ]; then
    echo "This firmware is not Infineon and therefore not vulnerable to CVE-2017-15361."
elif [ "$MSG" == GOOD ]; then
    echo "This firmware is not vulnerable to CVE-2017-15361"
    exit 0
elif [ "$MSG" == UNKNOWN ]; then
    echo "Could not determine the firmware type. Please ensure 'tcsd' is running."
else
    echo "Unexpected error."
fi

exit 1


 #############################################################
 #BEGIN DOCUMENTATION
.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "DETECT\-CVE\-2017\-15361\-TPM\.SH" "" "October 2017" "" ""
.
.SH "NAME"
\fBDetect\-CVE\-2017\-15361\-TPM\.sh\fR \- A tester for CVE\-2017\-15361
.
.SH "SYNOPSIS"
\fBDetect\-CVE\-2017\-15361\-TPM\.sh\fR \-\-help|\-h|help
.
.SH "DESCRIPTION"
\fBDetect\-CVE\-2017\-15361\-TPM\.sh\fR is a utility to test whether the current system is vulnerable to CVE\-2017\-15361\. Only TPM 1\.2 devices are supported\. To use the utility, run without the help options\.
.
.SH "OPTIONS"
.
.TP
\fB\-\-help\fR, \fB\-h\fR
Prints this help message
.
.SH "REFERENCES"
*https://cve\-mitre\.org/cgi\-bin/cvename\.cgi?name=CVE\-2017\-15361
