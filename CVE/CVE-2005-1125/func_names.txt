##<ctype.h>
#int isalnum(int c);
#int isalpha(int c);
#int isblank(int c);
#int iscntrl(int c);
#int isdigit(int c);
#int isgraph(int c);
#int islower(int c);
#int isprint(int c);
#int ispunct(int c);
#int isspace(int c);
#int isupper(int c);
#int isxdigit(int c);
#int tolower(int c);
#int toupper(int c);
##<fenv.h>
#int feclearexcept(int excepts);
#int feraiseexcept(int excepts);
#int fetestexcept(int excepts);
#int fegetround(void);
#int fesetround(int round);
##<locale.h>
char *setlocale(int category, const char *locale);
##<match.h>
#double acos(double x);
#float acosf(float x);
#long double acosl(long double x);
#double asin(double x);
#float asinf(float x);
#long double asinl(long double x);
#double atan(double x);
#float atanf(float x);
#long double atanl(long double x);
#double atan2(double y, double x);
#float atan2f(float y, float x);
#long double atan2l(long double y, long double x);
#double cos(double x);
#float cosf(float x);
#long double cosl(long double x);
#double sin(double x);
#float sinf(float x);
#long double sinl(long double x);
#double tan(double x);
#float tanf(float x);
#long double tanl(long double x);
#double acosh(double x);
#float acoshf(float x);
#long double acoshl(long double x);
#double asinh(double x);
#float asinhf(float x);
#long double asinhl(long double x);
#double atanh(double x);
#float atanhf(float x);
#long double atanhl(long double x);
#double cosh(double x);
#float coshf(float x);
#long double coshl(long double x);
#double sinh(double x);
#float sinhf(float x);
#long double sinhl(long double x);
#double tanh(double x);
#float tanhf(float x);
#long double tanhl(long double x);
#double exp(double x);
#float expf(float x);
#long double expl(long double x);
#double exp2(double x);
#float exp2f(float x);
#long double exp2l(long double x);
#double expm1(double x);
#float expm1f(float x);
#long double expm1l(long double x);
#double frexp(double value, int *exp);
#float frexpf(float value, int *exp);
#long double frexpl(long double value, int *exp);
#int ilogb(double x);
#int ilogbf(float x);
#int ilogbl(long double x);
#double ldexp(double x, int exp);
#float ldexpf(float x, int exp);
#long double ldexpl(long double x, int exp);
#double log(double x);
#float logf(float x);
#long double logl(long double x);
#double log10(double x);
#float log10f(float x);
#long double log10l(long double x);
#double log1p(double x);
#float log1pf(float x);
#long double log1pl(long double x);
#double log2(double x);
#float log2f(float x);
#long double log2l(long double x);
#double logb(double x);
#float logbf(float x);
#long double logbl(long double x);
#double modf(double value, double *iptr);
#float modff(float value, float *iptr);
#long double modfl(long double value, long double *iptr);
#double scalbn(double x, int n);
#float scalbnf(float x, int n);
#long double scalbnl(long double x, int n);
#double scalbln(double x, long int n);
#float scalblnf(float x, long int n);
#long double scalblnl(long double x, long int n);
#double cbrt(double x);
#float cbrtf(float x);
#long double cbrtl(long double x);
#double fabs(double x);
#float fabsf(float x);
#long double fabsl(long double x);
#double hypot(double x, double y);
#float hypotf(float x, float y);
#long double hypotl(long double x, long double y);
#double pow(double x, double y);
#float powf(float x, float y);
#long double powl(long double x, long double y);
#double sqrt(double x);
#float sqrtf(float x);
#long double sqrtl(long double x);
#double erf(double x);
#float erff(float x);
#long double erfl(long double x);
#double erfc(double x);
#float erfcf(float x);
#long double erfcl(long double x);
#double lgamma(double x);
#float lgammaf(float x);
#long double lgammal(long double x);
#double tgamma(double x);
#float tgammaf(float x);
#long double tgammal(long double x);
#double ceil(double x);
#float ceilf(float x);
#long double ceill(long double x);
#double floor(double x);
#float floorf(float x);
#long double floorl(long double x);
#double nearbyint(double x);
#float nearbyintf(float x);
#long double nearbyintl(long double x);
#double rint(double x);
#float rintf(float x);
#long double rintl(long double x);
#long int lrint(double x);
#long int lrintf(float x);
#long int lrintl(long double x);
#long long int llrint(double x);
#long long int llrintf(float x);
#long long int llrintl(long double x);
#double round(double x);
#float roundf(float x);
#long double roundl(long double x);
#long int lround(double x);
#long int lroundf(float x);
#long int lroundl(long double x);
#long long int llround(double x);
#long long int llroundf(float x);
#long long int llroundl(long double x);
#double trunc(double x);
#float truncf(float x);
#long double truncl(long double x);
#double fmod(double x, double y);
#float fmodf(float x, float y);
#long double fmodl(long double x, long double y);
#double remainder(double x, double y);
#float remainderf(float x, float y);
#long double remainderl(long double x, long double y);
#double remquo(double x, double y, int *quo);
#float remquof(float x, float y, int *quo);
#long double remquol(long double x, long double y,int *quo);
#double copysign(double x, double y);
#float copysignf(float x, float y);
#long double copysignl(long double x, long double y);
#double nan(const char *tagp);
#float nanf(const char *tagp);
#long double nanl(const char *tagp);
#double nextafter(double x, double y);
#float nextafterf(float x, float y);
#long double nextafterl(long double x, long double y);
#double nexttoward(double x, long double y);
#float nexttowardf(float x, long double y);
#long double nexttowardl(long double x, long double y);
#double fdim(double x, double y);
#float fdimf(float x, float y);
#long double fdiml(long double x, long double y);
#double fmax(double x, double y);
#float fmaxf(float x, float y);
#long double fmaxl(long double x, long double y);
#double fmin(double x, double y);
#float fminf(float x, float y);
#long double fminl(long double x, long double y);
#double fma(double x, double y, double z);
#float fmaf(float x, float y, float z);
#long double fmal(long double x, long double y,long double z);
##<signal.h>
#int raise(int sig);
##<stdio.h>
#int remove(const char *filename);
#int rename(const char *old, const char *new);
#FILE *tmpfile(void);
#char *tmpnam(char *s);
#int fclose(FILE *stream);
int fflush(FILE *stream);
#FILE *fopen(const char * restrict filename,const char * restrict mode);
#FILE *freopen(const char * restrict filename,const char * restrict mode,FILE * restrict stream);
#void setbuf(FILE * restrict stream,char * restrict buf);
int setvbuf(FILE * restrict stream,char * restrict buf,int mode, size_t size);
#int fprintf(FILE * restrict stream,const char * restrict format, ...);
#int fscanf(FILE * restrict stream,const char * restrict format, ...);
#int printf(const char * restrict format, ...);
#int scanf(const char * restrict format, ...);
#int snprintf(char * restrict s, size_t n,const char * restrict format, ...);
#int sprintf(char * restrict s,const char * restrict format, ...);
#int sscanf(const char * restrict s,const char * restrict format, ...);
#int fgetc(FILE *stream);
#char *fgets(char * restrict s, int n,FILE * restrict stream);
int fputc(int c, FILE *stream);
int fputs(const char * restrict s,FILE * restrict stream);
#int getc(FILE *stream);
#int getchar(void);
#int putc(int c, FILE *stream);
#int putchar(int c);
#int puts(const char *s);
#int ungetc(int c, FILE *stream);
#size_t fread(void * restrict ptr,size_t size, size_t nmemb,FILE * restrict stream);
#size_t fwrite(const void * restrict ptr,size_t size, size_t nmemb,FILE * restrict stream);
#int fgetpos(FILE * restrict stream,fpos_t * restrict pos);
#int fseek(FILE *stream, long int offset, int whence);
#int fsetpos(FILE *stream, const fpos_t *pos);
#long int ftell(FILE *stream);
#void rewind(FILE *stream);
#void clearerr(FILE *stream);
#int feof(FILE *stream);
int ferror(FILE *stream);
#void perror(const char *s);
#int fprintf_s(FILE * restrict stream,const char * restrict format, ...);
#int fscanf_s(FILE * restrict stream,const char * restrict format, ...);
#int printf_s(const char * restrict format, ...);
#int scanf_s(const char * restrict format, ...);
#int snprintf_s(char * restrict s, rsize_t n,const char * restrict format, ...);
#int sprintf_s(char * restrict s, rsize_t n,const char * restrict format, ...);
#int sscanf_s(const char * restrict s,const char * restrict format, ...);
##<stdlib.h>
#double atof(const char *nptr);
#int atoi(const char *nptr);
#long int atol(const char *nptr);
#long long int atoll(const char *nptr);
#double strtod(const char * restrict nptr,char ** restrict endptr);
#float strtof(const char * restrict nptr,char ** restrict endptr);
#long double strtold(const char * restrict nptr,char ** restrict endptr);
#long int strtol(const char * restrict nptr,char ** restrict endptr, int base);
#long long int strtoll(const char * restrict nptr,char ** restrict endptr, int base);
#unsigned long int strtoul(const char * restrict nptr,char ** restrict endptr, int base);
#unsigned long long int strtoull(const char * restrict nptr,char ** restrict endptr, int base);
#int rand(void);
#void srand(unsigned int seed);
#void *aligned_alloc(size_t alignment, size_t size);
##void *calloc(size_t nmemb, size_t size);
#void free(void *ptr);
#void *malloc(size_t size);
#void *realloc(void *ptr, size_t size);
#void abort(void);
##int atexit(void (*func)(void));
##int at_quick_exit(void (*func)(void));
void exit(int status);
#void _Exit(int status);
#char *getenv(const char *name);
#void quick_exit(int status);
#int system(const char *string);
##void *bsearch(const void *key, const void *base, size_t nmemb, size_t size,int (*compar)(const void *, const void *));
##void qsort(void *base, size_t nmemb, size_t size,int (*compar)(const void *, const void *));
#int abs(int j);
#long int labs(long int j);
#long long int llabs(long long int j);
##div_t div(int numer, int denom);
##ldiv_t ldiv(long int numer, long int denom);
##lldiv_t lldiv(long long int numer,long long int denom);
int mblen(const char *s, size_t n);
#int mbtowc(wchar_t * restrict pwc,const char * restrict s, size_t n);
#int wctomb(char *s, wchar_t wchar);
#size_t mbstowcs(wchar_t * restrict pwcs,const char * restrict s, size_t n);
#size_t wcstombs(char * restrict s,const wchar_t * restrict pwcs, size_t n);
##<string.h>
void *memcpy(void * restrict s1,const void * restrict s2, size_t n);
#void *memmove(void *s1, const void *s2, size_t n);
char *strcpy(char * restrict s1,const char * restrict s2);
char *strncpy(char * restrict s1,const char * restrict s2, size_t n);
#char *strcat(char * restrict s1,const char * restrict s2);
#char *strncat(char * restrict s1,const char * restrict s2, size_t n);
#int memcmp(const void *s1, const void *s2, size_t n);
int strcmp(const char *s1, const char *s2);
#int strcoll(const char *s1, const char *s2);
int strncmp(const char *s1, const char *s2, size_t n);
#size_t strxfrm(char * restrict s1,const char * restrict s2, size_t n);
#void *memchr(const void *s, int c, size_t n);
char *strchr(const char *s, int c);
#size_t strcspn(const char *s1, const char *s2);
#char *strpbrk(const char *s1, const char *s2);
char *strrchr(const char *s, int c);
#size_t strspn(const char *s1, const char *s2);
#char *strstr(const char *s1, const char *s2);
#char *strtok(char * restrict s1,const char * restrict s2);
void *memset(void *s, int c, size_t n);
#char *strerror(int errnum);
size_t strlen(const char *s);
##size_t strerrorlen_s(errno_t errnum);
size_t strnlen(const char *s, size_t maxsize);
#size_t strnlen_s(const char *s, size_t maxsize);
##<wchar.h>
#int fwprintf(FILE * restrict stream,const wchar_t * restrict format, ...);
#int fwscanf(FILE * restrict stream,const wchar_t * restrict format, ...);
#int swprintf(wchar_t * restrict s, size_t n,const wchar_t * restrict format, ...);
#int swscanf(const wchar_t * restrict s,const wchar_t * restrict format, ...);
#int vfwprintf(FILE * restrict stream,const wchar_t * restrict format, va_list arg);
#int wprintf(const wchar_t * restrict format, ...);
#int wscanf(const wchar_t * restrict format, ...);
#wint_t fgetwc(FILE *stream);
#wchar_t *fgetws(wchar_t * restrict s, int n,FILE * restrict stream);
#wint_t fputwc(wchar_t c, FILE *stream);
#int fputws(const wchar_t * restrict s,FILE * restrict stream);
#int fwide(FILE *stream, int mode);
#wint_t getwc(FILE *stream);
#wint_t getwchar(void);
#wint_t putwc(wchar_t c, FILE *stream);
#wint_t putwchar(wchar_t c);
#wint_t ungetwc(wint_t c, FILE *stream);
#double wcstod(const wchar_t * restrict nptr,wchar_t ** restrict endptr);
#float wcstof(const wchar_t * restrict nptr,wchar_t ** restrict endptr);
#long double wcstold(const wchar_t * restrict nptr,wchar_t ** restrict endptr);
#long int wcstol(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
#long long int wcstoll(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
#unsigned long int wcstoul(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
#unsigned long long int wcstoull(const wchar_t * restrict nptr,wchar_t ** restrict endptr, int base);
#wchar_t *wcscpy(wchar_t * restrict s1,const wchar_t * restrict s2);
#wchar_t *wcsncpy(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
#wchar_t *wmemcpy(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
#wchar_t *wmemmove(wchar_t *s1, const wchar_t *s2,size_t n);
#wchar_t *wcscat(wchar_t * restrict s1,const wchar_t * restrict s2);
#wchar_t *wcsncat(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
#int wcscmp(const wchar_t *s1, const wchar_t *s2);
#int wcscoll(const wchar_t *s1, const wchar_t *s2);
#int wcsncmp(const wchar_t *s1, const wchar_t *s2,size_t n);
#size_t wcsxfrm(wchar_t * restrict s1,const wchar_t * restrict s2, size_t n);
#int wmemcmp(const wchar_t *s1, const wchar_t *s2,size_t n);
#wchar_t *wcschr(const wchar_t *s, wchar_t c);
#size_t wcscspn(const wchar_t *s1, const wchar_t *s2);
#wchar_t *wcspbrk(const wchar_t *s1, const wchar_t *s2);
#wchar_t *wcsrchr(const wchar_t *s, wchar_t c);
#size_t wcsspn(const wchar_t *s1, const wchar_t *s2);
#wchar_t *wcsstr(const wchar_t *s1, const wchar_t *s2);
#wchar_t *wcstok(wchar_t * restrict s1,const wchar_t * restrict s2,wchar_t ** restrict ptr);
#wchar_t *wmemchr(const wchar_t *s, wchar_t c, size_t n);
#size_t wcslen(const wchar_t *s);
#wchar_t *wmemset(wchar_t *s, wchar_t c, size_t n);
#size_t wcsftime(wchar_t * restrict s, size_t maxsize,const wchar_t * restrict format,const struct tm * restrict timeptr);
#wint_t btowc(int c);
#int wctob(wint_t c);
#int mbsinit(const mbstate_t *ps);
#size_t mbrlen(const char * restrict s, size_t n,mbstate_t * restrict ps);
size_t mbrtowc(wchar_t * restrict pwc,const char * restrict s, size_t n,mbstate_t * restrict ps);
#size_t wcrtomb(char * restrict s, wchar_t wc,mbstate_t * restrict ps);
#size_t mbsrtowcs(wchar_t * restrict dst,const char ** restrict src, size_t len, mbstate_t * restrict ps);
#size_t wcsrtombs(char * restrict dst,const wchar_t ** restrict src, size_t len, mbstate_t * restrict ps);
##errno_t wcscpy_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2);
##errno_t wcsncpy_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2,rsize_t n);
##errno_t wmemcpy_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2,rsize_t n);
##errno_t wmemmove_s(wchar_t *s1, rsize_t s1max,const wchar_t *s2, rsize_t n);
##errno_t wcscat_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2);
##errno_t wcsncat_s(wchar_t * restrict s1,rsize_t s1max,const wchar_t * restrict s2,rsize_t n);
##wchar_t *wcstok_s(wchar_t * restrict s1,rsize_t * restrict s1max,const wchar_t * restrict s2,wchar_t ** restrict ptr);
#size_t wcsnlen_s(const wchar_t *s, size_t maxsize);
##errno_t wcrtomb_s(size_t * restrict retval,char * restrict s, rsize_t smax,wchar_t wc, mbstate_t * restrict ps);
##errno_t mbsrtowcs_s(size_t * restrict retval,wchar_t * restrict dst, rsize_t dstmax,const char ** restrict src, rsize_t len,mbstate_t * restrict ps);
##errno_t wcsrtombs_s(size_t * restrict retval,char * restrict dst, rsize_t dstmax,const wchar_t ** restrict src, rsize_t len,mbstate_t * restrict ps);
pid_t fork(void);
long sysconf(int name);
int close(int fildes);
int sigemptyset(sigset_t *set);
char *bindtextdomain(const char * domainname, const char * dirname);
gid_t getgid(void);
uid_t getuid(void);
uid_t geteuid(void);
pid_t getpid(void);
pid_t getppid(void);
gid_t getegid(void);
pid_t getpgrp(void);
int gethostname(char *name, size_t len);
int sigprocmask(int how, const sigset_t *set, sigset_t *oldset);
char *dcgettext(const char * domainname, const char * msgid, int category);
char *strsignal(int sig);
#int dup(int fildes);
int dup2(int fildes, int fildes2);
off64_t lseek64(int fd, off64_t offset, int whence);
int eaccess(const char *pathname, int mode);
#pid_t wait(int *stat_loc);
pid_t waitpid(pid_t pid, int *stat_loc, int options);
##NOTE: fcntl might use variable length args
##int fcntl(int fd, int cmd, ...);
#int fcntl(int fd, int cmd);
int sigaction(int sig, const struct sigaction *restrict act,struct sigaction *restrict oact);
int sigaddset(sigset_t *set, int signum);
int getpagesize(void);
int isatty(int fd);
int fileno(FILE *stream);
##int open64(const char *pathname, int oflag,...);
int gettimeofday(struct timeval *tv, struct timezone *tz);
time_t time(time_t *t);
int getdtablesize(void);
void *sbrk(intptr_t increment);
#int sigismember(const sigset_t *set, int signum);
#int sigfillset(sigset_t *set); 
int sigdelset(sigset_t *set, int signum);
ssize_t read(int fd, void *buf, size_t count);
int pipe(int fildes[2]);
char *textdomain (const char * domainname);
char * __strcpy_chk(char *dest, const char *src, size_t destlen);
int __snprintf_chk(char *str, size_t maxlen, int flag, size_t strlen, const char *format);
int __fprintf_chk(FILE *stream, int flag, const char *format);
##int __sigsetjmp(jmp_buf env, int savemask);
int * __errno_location(void);
void  __fpurge(FILE *stream);
int __xstat64(int var, const char *path, struct stat64 *stat_buf);
size_t __ctype_get_mb_cur_max(void);
const unsigned short * * __ctype_b_loc(void);
long long __strtoll_internal(const char *__nptr, char * *__endptr, int __base, int __group);
int __fxstat64(int ver, int fildes, struct stat64 * stat_buf);
