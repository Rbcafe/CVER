#include "Util.h"

NTQUERYSYSTEMINFORMATION NtQuerySystemInformation;

BOOL InitGlobalFunc() {
	HMODULE hNtdllMod = GetModuleHandle(TEXT("ntdll"));
	NtQuerySystemInformation = (NTQUERYSYSTEMINFORMATION)GetProcAddress(hNtdllMod, "NtQuerySystemInformation");
	if (NtQuerySystemInformation == NULL)
		return FALSE;

	return TRUE;
}

PVOID GetTargetHandleObject(ULONG_PTR TargetPID, ULONG_PTR TargetHandle)
{
	ULONG ulIndex = 0;
	ULONG ulLen = 0x10;
	NTSTATUS status = STATUS_UNSUCCESSFUL;
	PSYSTEM_HANDLE_INFORMATION_EX pHandleInfo = NULL;
	do {
		ulLen *= 2;
		pHandleInfo = (PSYSTEM_HANDLE_INFORMATION_EX)GlobalAlloc(GMEM_ZEROINIT, ulLen);

		status = NtQuerySystemInformation(SystemExtendedHandleInformation, pHandleInfo, ulLen, &ulLen);

	} while (status == STATUS_INFO_LENGTH_MISMATCH);

	if (!NT_SUCCESS(status)) {
		printf("NtQuerySystemInformation failed with error code 0x%X\n", status);
		return NULL;
	}
	for (; ulIndex < pHandleInfo->HandleCount; ulIndex++) {
		PVOID pObj = pHandleInfo->Handles[ulIndex].Object;
		ULONG_PTR ulHandle = (ULONG_PTR)pHandleInfo->Handles[ulIndex].HandleValue;
		ULONG_PTR ulPID = (ULONG_PTR)pHandleInfo->Handles[ulIndex].UniqueProcessId;
		if (ulHandle == TargetHandle && ulPID == TargetPID)
			return pObj;
	}

	return NULL;
}
