{
  "id": 1064149,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDY0MTQ5",
  "url": "https://hackerone.com/reports/1064149",
  "title": "Improper Input Validation on User's Location on PUT /WhoService/putLocation Could Affect Availability/Falsify Users",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-12-22T07:03:10.112Z",
  "submitted_at": "2020-12-22T07:03:10.150Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "humayunalikhan",
    "url": "/humayunalikhan",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/exXu1JdA5RyiwPJzZiY9vZKs/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 51543,
    "url": "https://hackerone.com/who-covid-19-mobile-app",
    "handle": "who-covid-19-mobile-app",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5A3QBGAF%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T140138Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDOmRjyw5I%2FTlNnXkSaQt0HWBvcx4KUqlbsBDywYvgMjAIgc1T3omLkZfSHGnxG7u3M%2BDm3ZU5hXXACm6d42GSb7EAqsQUIdhADGgwwMTM2MTkyNzQ4NDkiDI1cp4QslnXVHIUCaCqOBecH%2BJNC0KwQ%2BfCYMGM86f%2FOS1Dm%2BIA%2BHjSlOORnFjZmELOvSSorEYFhUaPaxwQcFsTE7OMurOw%2BQnTNbwJzmGH%2FjDpGT%2FxwOi1Yf0v9t5xHdyje9QeqWvWnPlxRuLTKdeHLfuYjPaGYHjDPk%2ByYZLTVi%2F6fLFk1LMc7Dx726KzEvXPKCa4bME8qI31URj4F9nDQiBGwytvr7Hm1EMgKGmVAK6%2Fbzd%2BJiZVqxHd3sYJSTbmtS%2BAl2zqAc8BSfBosM0X88oi3lBTlSqMNhfG3CaAXBePpXwzrVOqz74NfDYXdsP4VQdYegntsv6fFEZFiKkjhlglh0X4pAXPbvFNkY8C7BzpUD2tNRzacCXSlRaco9RM5vUg086o63M3dgo9tb8DkSAwOHamrNu%2F2KO2aggnlYsi1aZ7EJQTnQ4h%2BcjkM2D28%2Bxcxlpa3Ec2gB5yd%2BQcUjU%2BzbbmFbStd4UJXYiE38Skp99somT%2BpCEikiE7WFVYA5Pgb9J6BqOzjaorE7DzLysbe4e0jMnv06eVq4H%2Bz42eH%2FkluYPtzip94lWrairjO%2BPy%2BVDKDVJai6d1iVpfcEFmbncPaNpU53sKrhSNhpvIUbUDu5YaFK6X%2FbL%2BeFksXVgGaf0JwUeSzAh%2FGbxLEuo6xDzuhAOmMHndLW%2FF8uphSoqM7NkjvQNWF4znkPMyfsDxu0sKfOHhED1nQ5geErhYuMeCPDWNlWvJKC2X93i%2B8i8WntV0NtA21WXhLXSnrHVz2HCPlDghBMIvH7mgPpfyFhSMGQDeGjpSbj3uInocAFuDTAgJeZIwRGGMYeOXoRMIVrM6FWdeiP%2FaI3a0LUECdOBOPVvRMLQuf7VJvF0078t1crT4PlcQMPTC%2Fwq2uBjqxAVnkBdxFUTWQ4ZupRlHVu9PZr1k7xqw4QHDS7pllKyJWE05aIrKtcQLI8f74A6IlC2qLL0KpjvsW622557lHAqxIiBIxR28dhgaLkoywMH6F6KWd%2BowMbbVNahcgFgF8sWKuHHJPaj4kiHcEz7czNhJgm88FkmgTRhhw7HW2Z01FS2x%2BrnGRx5%2BvOZPEvDu%2BIRvDNGu%2FVrwK5wtu%2BRwxD8V7oEVMXOuAFSFlduj5GO6kbQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d874c3a76235355ced7423506b054612399579e7d0e59348699bbd0829996628",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5A3QBGAF%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T140138Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDOmRjyw5I%2FTlNnXkSaQt0HWBvcx4KUqlbsBDywYvgMjAIgc1T3omLkZfSHGnxG7u3M%2BDm3ZU5hXXACm6d42GSb7EAqsQUIdhADGgwwMTM2MTkyNzQ4NDkiDI1cp4QslnXVHIUCaCqOBecH%2BJNC0KwQ%2BfCYMGM86f%2FOS1Dm%2BIA%2BHjSlOORnFjZmELOvSSorEYFhUaPaxwQcFsTE7OMurOw%2BQnTNbwJzmGH%2FjDpGT%2FxwOi1Yf0v9t5xHdyje9QeqWvWnPlxRuLTKdeHLfuYjPaGYHjDPk%2ByYZLTVi%2F6fLFk1LMc7Dx726KzEvXPKCa4bME8qI31URj4F9nDQiBGwytvr7Hm1EMgKGmVAK6%2Fbzd%2BJiZVqxHd3sYJSTbmtS%2BAl2zqAc8BSfBosM0X88oi3lBTlSqMNhfG3CaAXBePpXwzrVOqz74NfDYXdsP4VQdYegntsv6fFEZFiKkjhlglh0X4pAXPbvFNkY8C7BzpUD2tNRzacCXSlRaco9RM5vUg086o63M3dgo9tb8DkSAwOHamrNu%2F2KO2aggnlYsi1aZ7EJQTnQ4h%2BcjkM2D28%2Bxcxlpa3Ec2gB5yd%2BQcUjU%2BzbbmFbStd4UJXYiE38Skp99somT%2BpCEikiE7WFVYA5Pgb9J6BqOzjaorE7DzLysbe4e0jMnv06eVq4H%2Bz42eH%2FkluYPtzip94lWrairjO%2BPy%2BVDKDVJai6d1iVpfcEFmbncPaNpU53sKrhSNhpvIUbUDu5YaFK6X%2FbL%2BeFksXVgGaf0JwUeSzAh%2FGbxLEuo6xDzuhAOmMHndLW%2FF8uphSoqM7NkjvQNWF4znkPMyfsDxu0sKfOHhED1nQ5geErhYuMeCPDWNlWvJKC2X93i%2B8i8WntV0NtA21WXhLXSnrHVz2HCPlDghBMIvH7mgPpfyFhSMGQDeGjpSbj3uInocAFuDTAgJeZIwRGGMYeOXoRMIVrM6FWdeiP%2FaI3a0LUECdOBOPVvRMLQuf7VJvF0078t1crT4PlcQMPTC%2Fwq2uBjqxAVnkBdxFUTWQ4ZupRlHVu9PZr1k7xqw4QHDS7pllKyJWE05aIrKtcQLI8f74A6IlC2qLL0KpjvsW622557lHAqxIiBIxR28dhgaLkoywMH6F6KWd%2BowMbbVNahcgFgF8sWKuHHJPaj4kiHcEz7czNhJgm88FkmgTRhhw7HW2Z01FS2x%2BrnGRx5%2BvOZPEvDu%2BIRvDNGu%2FVrwK5wtu%2BRwxD8V7oEVMXOuAFSFlduj5GO6kbQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=74856246eee5341f0fc2b681f79233e7960301afce7e6bb53b1353de85e596dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "WHO COVID-19 Mobile App",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-01-12T05:55:52.416Z",
  "bug_reporter_agreed_on_going_public_at": "2021-01-12T05:55:52.329Z",
  "team_member_agreed_on_going_public_at": "2020-12-23T04:53:21.319Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Summary:\nNote: I noticed that that the team has fixed issues like an XSS that's caused only from a header value (typically OOS since it's not directly exploitable) https://github.com/WorldHealthOrganization/app/pull/855, so in the spirit of this I'm also reporting another \"good-to-fix\" issue.\n\nOn the WHO app, users send approximate location data to the WhoService API:\n\n/app/client/flutter/lib/pages/onboarding/location_sharing_page.dart:\n\n  Future<void> _allowLocationSharing() async {\n    try {\n      await Location().requestPermission();\n      if (await Location().hasPermission() == PermissionStatus.granted) {\n        if (await Location().requestService()) {\n          LocationData location = await Location().getLocation();\n          Map jitteredLocationData = JitterLocation().jitter(\n              location.latitude, location.longitude,\n              5 /*kms refers to kilometers*/);\n\n          await WhoService.putLocation(\n              latitude: jitteredLocationData['lat'],\n              longitude: jitteredLocationData['lng']);\n        }\n      }\n    } catch(_) {\n      // ignore for now.\n    } finally {\n      _complete();\n    }\n  }\nWhich in turn translates to a call to https://staging.whocoronavirus.org/WhoService/putDeviceToken:\n\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ██████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n    \"latitude\": 22222222,\n    \"longitude\": \"9999999\"\n}'\nThis returns a 200 OK response. On the server side, we see that it uses the following logic:\n\n  [@Override](/override) public Void putLocation(PutLocationRequest request) throws IOException {\n    Client client = Client.current();\n    client.latitude = request.latitude;\n    client.longitude = request.longitude;\n    S2LatLng coordinates = S2LatLng.fromDegrees(request.latitude, request.longitude);\n    client.location = S2CellId.fromLatLng(coordinates).id();\n    ofy().save().entities(client);\n    return new Void();\n  }\nThere is no validation on request.latitude, request.longitude before it is stored into the Google App Engine datastore. This is because the S2LatLng.fromDegrees (which transforms the values into a S2LatLng object) from the s2-geometry-library-java library specifically does not validate these values because, according to their comments at https://github.com/google/s2-geometry-library-java/blob/master/src/com/google/common/geometry/S2LatLng.java:\n\nLike the rest of the \"geometry\" package, the\nintent is to represent spherical geometry as a mathematical abstraction, so\nfunctions that are specifically related to the Earth's geometry (e.g.\neasting/northing conversions) should be put elsewhere.\nThus, even these values:\n\n    \"latitude\": 22222222,\n    \"longitude\": \"9999999\"\nAre accepted and stored in the database even though they are technically non-existent coordinates on earth.\n\nTo reproduce, just run this request with different who-client-id UUID you generated yourself and impossible latitude and longitude.\n\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n    \"latitude\": 22222222,\n    \"longitude\": \"9999999\"\n}'\n\n## Impact\n\nAn attacker can exploit this to affect the Availability or Integrity of the analytics data by injecting false location values and falsifying user data. A fix for this would be to implement a quick lat lng validator that is specifically meant to validate Earth geometry, instead of the S2LatLng class.",
  "weakness": {
    "id": 107,
    "name": "Improper Input Validation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 8,
  "voters": [
    "ayoub0x1",
    "0nlymohammed",
    "h4x0r_dz",
    "humayunalikhan",
    "echago",
    "t30c",
    "eusec",
    "bug_hunter_pak"
  ],
  "severity": {
    "rating": "medium",
    "score": 4.6,
    "author_type": "User",
    "metrics": {
      "attack_vector": "adjacent",
      "attack_complexity": "high",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 59510,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/WorldHealthOrganization/app",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 25981,
      "category": "team",
      "content": "This refers to sanitization of an API that is already scheduled to be deleted. It doesn't appear to be exploitable.\nhttps://github.com/WorldHealthOrganization/app/pull/1826",
      "user": {
        "id": 17,
        "username": "bruno-bowden",
        "name": "Bruno Bowden",
        "bio": "Investor in HackerOne",
        "cleared": false,
        "verified": false,
        "website": "http://www.linkedin.com/in/brunobowden",
        "location": "San Francisco, CA",
        "created_at": "2013-03-24T18:01:21.535Z",
        "url": "https://hackerone.com/bruno-bowden",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/017/43c43a51fe988519ab02ac5467279b2d32a5fd0f_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/017/43c43a51fe988519ab02ac5467279b2d32a5fd0f_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/000/017/43c43a51fe988519ab02ac5467279b2d32a5fd0f_original.jpg/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
