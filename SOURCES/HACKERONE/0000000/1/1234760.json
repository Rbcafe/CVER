{
  "id": 1234760,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjM0NzYw",
  "url": "https://hackerone.com/reports/1234760",
  "title": "CVE-2021-22926: CURLOPT_SSLCERT mixup with Secure Transport",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2021-06-15T15:39:06.658Z",
  "submitted_at": "2021-06-15T15:39:06.742Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "nyymi",
    "url": "/nyymi",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2021-22926"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2021-07-21T16:29:24.835Z",
  "bug_reporter_agreed_on_going_public_at": "2021-07-21T16:29:24.752Z",
  "team_member_agreed_on_going_public_at": "2021-07-21T16:24:37.872Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nlibcurl Secure Transport SSL backend fails to secure the `CURLOPT_SSLCERT` against current directory file overriding the keychain nickname specified.\n\nThis leads to the possibility of locally created file overriding the `CURLOPT_SSLCERT` specified certificate and thus causing denial of service.\n\n## Steps To Reproduce:\n  1. Configure and build curl against Secure Transport: `configure --with-secure-transport && make`\n  2. Have keychain with client certificate called \"testcert\"\n  3. Use testcert from keychain to authenticate: `./src/curl -E testcert https://testsite`\n  4. In current directory execute `touch testcert`\n  5. Try authenticating again `./src/curl -E testcert https://testsite`\n\n`curl: (58) SSL: Can't load the certificate \"testcert\" and its private key: OSStatus -50`\n\nThe issue stems from the fact that Secure Transport backend code doesn't seem to prefer the keychain over the local file. The documentation says that local file should be prefixed with \"./\" when used, but the code doesn't have any such checks. Interestingly NSS SSL backend does have the check: https://github.com/curl/curl/blob/master/lib/vtls/nss.c#L432\n\nThe impact of this vulnerability is rather limited: In practice it seems to be only usable in causing denial of service against applications using  keychain client certificates.  It could happen in practice for example if executing command in /tmp directory structure or home directory of another user. The user would be able to prevent the app from creating an authenticated connection by creating a file with matching name used for  the keychain nickname used by the app.\n\n## Impact\n\nDenial of service",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2021-08-20T16:24:37.976Z",
  "allow_singular_disclosure_after": -78356923.66644885,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "neeythann",
    "ekgaribadmi"
  ],
  "severity": {
    "rating": "medium",
    "score": 4.0,
    "author_type": "User",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
