{
  "id": 1564922,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTY0OTIy",
  "url": "https://hackerone.com/reports/1564922",
  "title": "Integer overflows in unescape_word()",
  "state": "Closed",
  "substate": "not-applicable",
  "severity_rating": "low",
  "readable_substate": "N/A",
  "created_at": "2022-05-10T16:10:48.863Z",
  "submitted_at": "2022-05-10T16:10:48.939Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ddme",
    "url": "/ddme",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2019-5435"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-06-09T07:10:02.710Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2022-05-13T07:21:35.205Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nA similiar issue to [CVE-2019-5435](https://hackerone.com/reports/547630)\n\n## Steps To Reproduce:\n### analysis\nDICT protocol can use one url like \"dict://localhost:3306\", and  function unescape_word() is used to deal with the character in url like this comment\n```c\n    /* According to RFC2229 section 2.2, these letters need to be escaped with\n       \\[letter] */\n      if((ch <= 32) || (ch == 127) ||\n          (ch == '\\'') || (ch == '\\\"') || (ch == '\\\\')) {\n        dictp[olen++] = '\\\\';\n      }\n```\n\nand the bug case here /curl/lib/dict.c\n\n```c\nstatic char *unescape_word(const char *inputbuff)\n{\n  char *newp = NULL;\n  char *dictp;\n  size_t len;\n\n  CURLcode result = Curl_urldecode(inputbuff, 0, &newp, &len,          <------------- get len\n                                   REJECT_NADA);\n  if(!newp || result)\n    return NULL;\n\n  dictp = malloc(len*2 + 1);    <------------ overflow here\n//.....\n}\n```\n\nIn my analysis(maybe wrong), the `inputbuff` in DICT url is \"dict:[inputbuff]\", for example \"//localhost:3306\" in  \"dict://localhost:3306\", and `len` is the length of `inputbuff`.\n\nAnd the length of `inputbuff` multiplied by 2 and then passed to malloc. This may lead to a integer overflow on a 32bit OS when the inputbuff is longer than 2GB\n\n`unescape_word` was called by dict_do(), If someone use libcurl to code, and call dict_do() with a extreme long url, it might be triggered.\n\n## Impact\n\nIt might leads to a crash or some other impact.",
  "weakness": {
    "id": 15,
    "name": "Integer Overflow"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 0,
  "voters": [],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
