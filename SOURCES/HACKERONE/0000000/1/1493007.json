{
  "id": 1493007,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDkzMDA3",
  "url": "https://hackerone.com/reports/1493007",
  "title": "Broken access control, can lead to legitimate user data loss",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-02-27T10:19:35.520Z",
  "submitted_at": "2022-02-27T10:19:35.571Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "lubak",
    "url": "/lubak",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/228kipjhw32j6dmidi5z67iptc6l/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-04-07T20:03:26.165Z",
  "bug_reporter_agreed_on_going_public_at": "2022-03-29T06:54:20.532Z",
  "team_member_agreed_on_going_public_at": "2022-04-07T20:03:26.030Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi team,\nDuring testing the security of ██████████ I found another possible attack vector:\n(There are two reports preceding this one -  https://hackerone.com/reports/1489470 and  https://hackerone.com/reports/1489744)\n\nI will try to explain:\nWhen an user need access to that information system he fills a request form at:\nhttps://█████████/████████\nor\nhttps://█████████/██████\nAfter submitting the form the server response contains a █████████ which identifies this user request.\nThen  the request is reviewed by an administrator, and he decides if user access will be granted or rejected.\nThe vulnerability I found is that unauthorized person can access the end point responsible for deleting user requests - █████████ and by providing just the ███ parameter he can delete any request.\n\n## References\n\n## Impact\n\nAn attacker can delete  legitimate user requests, disturbing the normal operation  of the system and causing data loss.\nThe user request ids are sequential numbers - my requests were given ids - ████████, so the attacker can delete all requests in the system by accessing the ████ end point with each ██████ from ██████████.\n\n## System Host(s)\n███████\n\n## Affected Product(s) and Version(s)\n██████████\n\n## CVE Numbers\n\n\n## Steps to Reproduce\n1.  Activate Burp proxy, go to https://███/██████████, fill and submit the form (screenshot1)\n2. Inspect server response in Burp and take a note of the returned █████ (screenshot2) which is number, referencing this user access request\n3. (optional) we can confirm our request is in the system by performing the attack described in the other report I made (https://hackerone.com/reports/1489470) - resulting in our request being exfiltrated from the database:\nexecute following command, and replace the █████ parameter with the one you noted on step 2 (screenshot)\ncurl https://██████/██████████ -X POST -data=\"url=%2F████&██████████=████████\" -k\n\n4. Deleting the request - CAUTION - execute this step only by referencing ██████████ for requests, you made otherwise you will delete legitimate user request!(sceenshot4)\nthe command abusing the delete request endpoint is:\ncurl https://██████/███████████████ -X POST -data=\"url=%2F███████&███████=██████\" -k\n\n5. (optional) to confirm request is deleted you can execute again Step 3, which now responds with empty body - the request is no longer present in the database.\n\n## Suggested Mitigation/Remediation Actions\nThe ██████████ endpoint should perform check if the user is logged in and authorized to use it.\n\n",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 4,
  "voters": [
    "datsuraku147",
    "khizer47",
    "shivammusic",
    "c4llmeco4ch"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
