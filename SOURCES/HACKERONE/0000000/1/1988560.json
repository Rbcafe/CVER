{
  "id": 1988560,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTg4NTYw",
  "url": "https://hackerone.com/reports/1988560",
  "title": "Reflected xss on https://█████████",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2023-05-15T22:10:49.286Z",
  "submitted_at": "2023-05-15T22:10:49.364Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "rektile404",
    "url": "/rektile404",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/b86uin4lh0iydhctgiqarvrb3lox/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2023-06-02T18:23:11.578Z",
  "bug_reporter_agreed_on_going_public_at": "2023-06-01T17:18:57.297Z",
  "team_member_agreed_on_going_public_at": "2023-06-02T18:23:11.473Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Description:**\nThe domain ███ is vulnerable to reflective xss.\nBy clicking the following link you will get an alert message: https://█████/sec.html?redirect=javascript:alert(document.cookie);//://██████/\nThe error occurs due to a flaw in the check that verifies the validity of the redirect URL. \nThe function takes the value of the redirect parameter and checks if the portion after the first `://` begins with any of the values in the array. \nThis check does not include protocol checking, allowing us to prepend the value with `javascript:`. \nThen we can append a commented-out section at the end to ensure that the `isSafeHost` function returns True.\nThis is the function that checks if it is valid:\n```js\nfunction isSafeHost(uri) {\n      var safeHosts = ['█████/', '███/', '████/', '██████████'];\n      // Only consider localhost for local testing\n      if (window.location.host.includes('localhost')) {\n        safeHosts.push('localhost');\n      }\n      return safeHosts.find((host) => uri.slice(uri.indexOf('://') + 3).startsWith(host));\n    }\n```\nAt the end of the check the redirect parameter is used as follows:\n\n```js\nwindow.location.href = rawRedirect;\n```\n\n## References\n\n## Impact\n\n- Take over a user's account\n- Phish users\n- Show malicious content \n- Redirect users\n\n## System Host(s)\n██████████\n\n## Affected Product(s) and Version(s)\n\n\n## CVE Numbers\n\n\n## Steps to Reproduce\nClick on the following link: https://█████████/sec.html?redirect=javascript:alert(1);//://████/\nYou can change the `alert(1)` for your own payload\n\n## Suggested Mitigation/Remediation Actions\nDo a check for protocol and make sure the host comes directly after this protocol.\n\n",
  "weakness": {
    "id": 61,
    "name": "Cross-site Scripting (XSS) - Reflected"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 26,
  "voters": [
    "qu1nten",
    "rektile404",
    "shreyaschavhan",
    "zy9ard3",
    "shubham_srt",
    "secopsmaestro",
    "usagib4",
    "kerolesmagdy",
    "shivammusic",
    "chenb0x",
    "and 16 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
