{
  "id": 1081145,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDgxMTQ1",
  "url": "https://hackerone.com/reports/1081145",
  "title": "SQL Injection through /include/findusers.php",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2021-01-19T02:42:45.551Z",
  "submitted_at": "2021-01-19T02:42:46.716Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "egix",
    "url": "/egix",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/431/9435ac0bb25492f164582fbbc7e3f6f8f016b1d1_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 38302,
    "url": "https://hackerone.com/impresscms",
    "handle": "impresscms",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/038/302/c9f69b5546e2b4211c0a26681a398b1685cc5ebb_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/038/302/c9f69b5546e2b4211c0a26681a398b1685cc5ebb_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "ImpressCMS",
      "twitter_handle": "impresscms",
      "website": "https://www.impresscms.org",
      "about": "PHP and MySQL content management system"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-10-06T18:51:25.975Z",
  "bug_reporter_agreed_on_going_public_at": "2022-09-06T18:51:24.150Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nThe vulnerability is located in the `/include/findusers.php` script:\n\n```\n281.\t\t\t$total = $user_handler->getUserCountByGroupLink(@$_POST[\"groups\"], $criteria);\n282.\t\n283.\t\t\t$validsort = array(\"uname\", \"email\", \"last_login\", \"user_regdate\", \"posts\");\n284.\t\t\t$sort = (!in_array($_POST['user_sort'], $validsort)) ? \"uname\" : $_POST['user_sort'];\n285.\t\t\t$order = \"ASC\";\n286.\t\t\tif (isset($_POST['user_order']) && $_POST['user_order'] == \"DESC\") {\n287.\t\t\t\t$order = \"DESC\";\n288.\t\t\t}\n289.\t\n290.\t\t\t$criteria->setSort($sort);\n291.\t\t\t$criteria->setOrder($order);\n292.\t\t\t$criteria->setLimit($limit);\n293.\t\t\t$criteria->setStart($start);\n294.\t\t\t$foundusers = $user_handler->getUsersByGroupLink(@$_POST[\"groups\"], $criteria, TRUE);\n```\n\nUser input passed through the \"groups\" POST parameter is not properly sanitized before being passed to the `icms_member_Handler::getUserCountByGroupLink()` and `icms_member_Handler::getUsersByGroupLink()` methods at lines 281 and 294. These methods use the first argument to construct a SQL query without proper validation:\n\n```\n461.\t\tpublic function getUsersByGroupLink($groups, $criteria = null, $asobject = false, $id_as_key = false) {\n462.\t\t\t$ret = array();\n463.\t\n464.\t\t\t$select = $asobject ? \"u.*\" : \"u.uid\";\n465.\t\t\t$sql[] = \"\tSELECT DISTINCT {$select} \"\n466.\t\t\t\t\t. \"\tFROM \" . icms::$xoopsDB->prefix(\"users\") . \" AS u\"\n467.\t\t\t\t\t. \" LEFT JOIN \" . icms::$xoopsDB->prefix(\"groups_users_link\") . \" AS m ON m.uid = u.uid\"\n468.\t\t\t\t\t. \"\tWHERE 1 = '1'\";\n469.\t\t\tif (! empty($groups)) {\n470.\t\t\t\t$sql[] = \"m.groupid IN (\" . implode(\", \", $groups) . \")\";\n471.\t\t\t}\n```\n\nThis can be exploited by remote attackers to e.g. read sensitive data from the \"users\" database table through boolean-based SQL Injection attacks.\n\n## ImpressCMS branch :\nThe vulnerability has been tested and confirmed on ImpressCMS version 1.4.2 (the latest at the time of writing).\n\n## Steps To Reproduce:\nUse the attached Proof of Concept (PoC) script to reproduce this vulnerability. It's a PHP script supposed to be used from the command-line (CLI). You should see an output like the following:\n\n```\n$ php sqli.php http://localhost/impresscms/\n[-] Retrieving security token...\n[-] Starting SQL Injection attack...\n[-] Admin's email: admin@test.com\n```\n\nThe PoC leverages both this vulnerability and the one reported at #1081137 to achieve unauthenticated exploitation.\n\n## Impact\n\nThis vulnerability might allow **unauthenticated attackers** to disclose any field of the \"users\" database table, including the users' email addresses and password hashes, potentially leading to full account takeovers.\n\n**NOTE**: normally, successful exploitation of this vulnerability should require an admin user session. However, due to the vulnerability described in report #1081137, this could be exploited by unauthenticated attackers as well.",
  "weakness": {
    "id": 67,
    "name": "SQL Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1163169,
      "file_name": "sqli.php",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/q82wmnbbpgc70ty3o7c6ktf8gfb0?response-content-disposition=attachment%3B%20filename%3D%22sqli.php%22%3B%20filename%2A%3DUTF-8%27%27sqli.php&response-content-type=application%2Fx-php&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3I276FVZ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T140348Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBR%2Fcj4He1YNoxuqlCR8y8rqIukyINMyDPuGH4bBYx6SAiEA9rxAEFgc%2FY9ADMxq89WI%2F4YUHMXyjEPxPzJLolchOMcqsgUIdhADGgwwMTM2MTkyNzQ4NDkiDFBjNDAnQ2OT9fFEUCqPBdD%2BXXWBgaRxNEUUo6cEeoytD1eXvhIsF8BkIAolofhhkKHa%2FJ9rh00ejh6T8IepmFmzqyDA1to2vDIum2KthQ0U6K%2Fq21GMCUMZo7xXkyphPeZxTlJE8cbrBa9V7531H4caFbz7tu71hUjruj7poNeDwa5J2XkqEShNg6VTkYFYqW2p508BdQAm0fm%2BJSHq3faBYzcdc%2BIdgG0f6PUjEYh8ysP11Ro09SiXv3N3T6DptjJHKSv7KUv%2FZb54m8zxj0ho7JBJGg0PnntZNlzuUrPyB5o8m6NghY%2FGYTA8AM56YwOqBpjHb6CnraAhdaDe1bVoMVPvNpaoYIcwcd4aA5uVq%2F%2BMEFbgRAsaOaZwmVbJkgiy2He0wZ1y%2Bi038Z1fvfDUbGHaWHIvakM7EmAYLWhUjnVli%2B3NqZponfkOVtoUKkcIkHv%2FMcMGpAcK0LuL5c2PBD0kic3yPmgcNitophPyXa55qvUBwb0m1aYQTwhCX70%2B1MuBBNqQvAsVUygdhbSZflPVFLVYXYCw10pZBosqrbt33MeOhLAD8A8FNaf8XnRxoIDh3nC1b6UKs2zWAsQPsE7gNEmhUsXIocoqXYlZh%2FQZSSdnGUabitNEws3%2FzTErmpCZuC2pr4nC5OCy4AoCpAKYzhiaBnVjXyi1NhUFfB7kXutS3csu0Lk3ScNHi9nlMRK%2FSHZ%2BmmfQUxKvkUG6N76Rrx09p1D%2Brasm6BwCfo%2FSw7hRWxvXSZbCwxc3do9Mpm9IRFA7fgftyitVAMxs%2B8%2FYuoPx7yvUxg0bClyQ192xRI2lA%2B2Re%2FTICR8V2PH0zUKh00J8XQvEL4nx0dQPY1eX5ebqa0OrnmqUj5MM0BpBxhDPhte4fVZA92wwkMCtrgY6sQESsP34nDSGQ6%2FMJpkkUSZiwSB%2F4jJvcrOQGDnz8fYink0yrV9jUVthg%2F0T80d3eDYEK8OVRR2nDjVCUQg3IxtCiugMaPpFUdgVHqXf%2FGpaDapO5M8KW58NB4nk4LoOYgrk9ZTwWMl3jVREWlQWgRKb1D2x8jgp12%2B72xMOnvcfsjT5bTR2OBDEBsh2BamCCdP1z2L0lwJwCGwomgMutcDqcL1aIj%2F%2Fac5TUFnKnI3315E%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d11894fe2ade948786b3ae8c4534c3e8793b007d4aee492b130276f9ddfe4569",
      "file_size": 1677,
      "type": "application/x-php",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2022-10-06T18:51:24.243Z",
  "allow_singular_disclosure_after": -42750744.49582893,
  "singular_disclosure_allowed": true,
  "vote_count": 22,
  "voters": [
    "shreyaschavhan",
    "amadeuss",
    "zy9ard3",
    "f_m",
    "isira_adithya",
    "khizer47",
    "mohit1247",
    "eminf",
    "shivammusic",
    "beksem35",
    "and 12 more..."
  ],
  "severity": {
    "rating": "critical",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 28943,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/impresscms/impresscms",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 189778,
      "category": "researcher",
      "content": "Here you can find a full technical write-up for this vulnerability and its exploitation:\nhttps://karmainsecurity.com/impresscms-from-unauthenticated-sqli-to-rce",
      "user": {
        "id": 1431,
        "username": "egix",
        "name": "Egidio Romano",
        "bio": "",
        "cleared": false,
        "verified": true,
        "website": "https://karmainsecurity.com",
        "location": "Italy",
        "created_at": "2013-11-11T20:38:45.487Z",
        "url": "https://hackerone.com/egix",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/431/9435ac0bb25492f164582fbbc7e3f6f8f016b1d1_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/001/431/9435ac0bb25492f164582fbbc7e3f6f8f016b1d1_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/001/431/9435ac0bb25492f164582fbbc7e3f6f8f016b1d1_original.jpg/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    }
  ]
}
