{
  "id": 1751258,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzUxMjU4",
  "url": "https://hackerone.com/reports/1751258",
  "title": "Attacker is able to create,Edit & delete notes and leak the title of a victim's private personal snippet",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-10-25T23:29:24.473Z",
  "submitted_at": "2022-10-25T23:29:24.725Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "cryptopone",
    "url": "/cryptopone",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/uk6jjk1a2i1dp04zz14k6a4wp4o4/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2023-06-02T01:57:09.182Z",
  "bug_reporter_agreed_on_going_public_at": "2023-04-21T15:04:31.568Z",
  "team_member_agreed_on_going_public_at": "2023-06-02T01:57:09.054Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nAn attacker is able to create new notes for a victim's private personal snippet. This attack leaks the title of the snippet on the attacker's activity page. The attacker is also able to edit/delete the note using the \"id\" value that is returned from the server after creating the comment, as they are the owner for the note.\n\nI believe this attack is achieved by utilizing https://gitlab.com/gitlab-org/gitlab/-/blob/master/app/finders/notes_finder.rb when posting a comment within a project they control.\n\n```ruby\n  def noteables_for_type(noteable_type)\n    case noteable_type\n    when \"issue\"\n      IssuesFinder.new(@current_user, project_id: @project.id).execute # rubocop: disable CodeReuse/Finder\n    when \"merge_request\"\n      MergeRequestsFinder.new(@current_user, project_id: @project.id).execute # rubocop: disable CodeReuse/Finder\n    when \"snippet\", \"project_snippet\"\n      SnippetsFinder.new(@current_user, project: @project).execute # rubocop: disable CodeReuse/Finder\n    when \"personal_snippet\"\n      PersonalSnippet.all\n    else\n      raise \"invalid target_type '#{noteable_type}'\"\n    end\n  end\n```\nBy changing the POST parameter noteable_type from \"issue\" to \"personal_snippet\" the server doesn't perform the project check when attempting to create the note and as a result the comment is posted to the victim's personal snippet.\n\n### Steps to reproduce\n\nReproduction steps require two accounts representing an attacker and a victim\n\n#### Victim Setup:\n1. Log in and navigate to https://gitlab-instance.example.com/dashboard/snippets then click the \"New snippet\" button.\n1. Set the title of the Personal Snippet to \"Private Victim Snippet\", and supply a filename (ex. \"test-victim-file.txt\") with file contents \"test file contents\".\n1. Ensure the visibility level is set to \"Private\" and click \"Create Snippet\".\n1. Make a note of the ID for the snippet in the URL bar. We will refer to this value as VICTIM_SNIPPETID. The attacker will need it in their steps.\n\n#### Attacker Setup and Create New Note on Personal Snippet:\n1. Log in to GitLab and navigate to https://gitlab-instance.example.com/dashboard/projects and create a new private project for the attack (I named mine \"PrivateAttackerProject\").\n1. Create a new issue (I created an issue with title \"Attacker Issue\").\n1. Open up the issue that was just created (ie. https://gitlab-instance.example.com/attacker/privateattackerproject/-/issues/1).\n1. Scroll down to \"Activity\" and create a new note. I used the text `@attacker was here`.\n1. Prepare BurpSuite to intercept the request and then click \"Comment\". We want the request that looks like `/attacker/privateattackerproject/notes?target_id=6&target_type=issue` with post body looking like `{\"note\":{\"noteable_type\":\"Issue\",\"noteable_id\":6,\"internal\":false,\"note\":\"@attacker was here\"}}`.\n1. Send the intercepted POST request to Burp Repeater for easier testing.\n1. Update target_type in the target resource from `target_type=issue` to `target_type=personal_snippet`.\n1. Set the target_id in the target resource from `target_id=6` to `target_id=VICTIM_SNIPPETID` (Replacing VICTIM_SNIPPETID with the id that was generated for the victim).\n1. The POST request should now look similar to `POST /attacker/privateattackerproject/notes?target_id=VICTIM_SNIPPETID&target_type=personal_snippet HTTP/2`\n1. Send the request and review the response. A new note will be created under the private snippet.\n\n#### Attacker editing a note they created previously\nNote: When the attacker creates the note in the previous steps, an id value is returned in the response. This can also be obtained by the victim by copying the link to the note and making a note of the id (ex. https://gitlab-pentest2.example.com/-/snippets/3#note_7)\n1. Have the attacker create a new note within the issue they created. We can then edit/delete this note and intercept the request in BurpSuite.\n1. To edit the note on the personal snippet:\nTake the original edit request:\n```\nPUT /attacker/privateattackerproject/notes/8 HTTP/2\nHost: gitlab-pentest2.example.com\n<Rest of headers>\n\n{\"target_type\":\"issue\",\"target_id\":7,\"note\":{\"note\":\"test2\"}}\n```\n\nModify the body of the post so '\"target_type\"=\"personal_snippet\"' and '\"target_id\"=VICTIM_SNIPPETID'\n\n```\nPUT /attacker/privateattackerproject/notes/8 HTTP/2\nHost: gitlab-pentest2.example.com\n<Rest of headers>\n\n{\"target_type\":\"personal_snippet\",\"target_id\":3,\"note\":{\"note\":\"test2\"}}\n```\n\n#### Attacker deleting a note they created previously\n1. To delete the note on the personal snippet:\nTake the original delete note request:\n```\nDELETE /attacker/privateattackerproject/notes/8 HTTP/2\nHost: gitlab-pentest2.example.com\n<Rest of headers>\n```\nUpdate the id in the request to point to the note id in the personal snippet (Attacker must be the owner of the note).\n\n```\nDELETE /attacker/privateattackerproject/notes/7 HTTP/2\nHost: gitlab-pentest2.example.com\n<Rest of headers>\n```\n\n### Impact\n\nIf the victim refreshes the snippet they will see a comment from the attacker. If the attacker visits their profile page (ie. https://gitlab-pentest2.example.com/attacker) and views activity, they will confirm if they reached the comment and can obtain the title of the private snippet.\n\nSince snippet ids are sequential, an attacker could in theory create a snippet, then iterate from 1 to the snippet number of their own snippet and obtain the titles of all personal snippets.\n\nThe attacker is also able to update a note they have created and modify text and/or delete the note itself by intercepting the \"Edit comment\" and \"Delete comment\" requests within the issue and repeating the steps above. The attacker could delete their notes after collecting the titles for example to cover their tracks.\n\nIf the attacker makes their project public or internal and uses a label or references the issue in the comment, the victim will be able to see the label from the attacker's project. This helps provide further proof of a successful attack and may be used for social engineering.\n\n### Examples\n\nThis bug is also reproducible on GitLab.com\nVictim Snippet: https://gitlab.com/-/snippets/2436054\nAttacker Issue: https://gitlab.com/Cryptopone/MyPrivateProject/-/issues/1\n\n### What is the current *bug* behavior?\n\nWhen the attacker posts a note to the victim's private snippet, the attacker will be able to obtain the title of the snippet. \n\n### What is the expected *correct* behavior?\n\nThe server should return an error message when attempting to create a note for a personal snippet the attacker does not own.\n\n### Relevant logs and/or screenshots\n\nAttacker viewing their activity page to obtain the title of the victim's private personal snippet.\n{F2003894}\n\nVictim seeing notes that have been posted by an attacker. Note the linked issue links back to the attacker's project where they conducted the attack.\n{F2003895}\n\n### Output of checks\n\nThis bug happens on GitLab.com)\n\n#### Results of GitLab environment info\n\n```\nSystem information\nSystem:         Ubuntu 20.04\nProxy:          no\nCurrent User:   git\nUsing RVM:      no\nRuby Version:   2.7.5p203\nGem Version:    3.1.6\nBundler Version:2.3.15\nRake Version:   13.0.6\nRedis Version:  6.2.7\nSidekiq Version:6.4.2\nGo Version:     unknown\n\nGitLab information\nVersion:        15.5.1-ee\nRevision:       7344dd2631a\nDirectory:      /opt/gitlab/embedded/service/gitlab-rails\nDB Adapter:     PostgreSQL\nDB Version:     12.10\nURL:            https://gitlab-pentest2.example.com\nHTTP Clone URL: https://gitlab-pentest2.example.com/some-group/some-project.git\nSSH Clone URL:  git@gitlab-pentest2.example.com:some-group/some-project.git\nElasticsearch:  no\nGeo:            no\nUsing LDAP:     no\nUsing Omniauth: yes\nOmniauth Providers:\n\nGitLab Shell\nVersion:        14.12.0\nRepository storage paths:\n- default:      /var/opt/gitlab/git-data/repositories\nGitLab Shell path:              /opt/gitlab/embedded/service/gitlab-shell\n```\n\n## Impact\n\nWhen the attacker posts a note to the victim's private snippet, the attacker will be able to obtain the title of the snippet. \n\nIf the attacker makes their project public or internal and creates a note with a label or references to an issue in the comment, the victim will be able to see the label from the attacker's project. This could be used as a social engineering vector to obtain the file contents of a snippet (or simply scare the victim into thinking the snippet is public).",
  "bounty_amount": "1730.0",
  "formatted_bounty": "$1,730",
  "weakness": {
    "id": 55,
    "name": "Insecure Direct Object Reference (IDOR)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 2003894,
      "file_name": "AttackerActivityProof.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/udye8cem2bxk3fb4kw25npktb04y?response-content-disposition=attachment%3B%20filename%3D%22AttackerActivityProof.png%22%3B%20filename%2A%3DUTF-8%27%27AttackerActivityProof.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5AHHFMEJ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T143200Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD8dwfn1Kj%2BfeaL5gzEI8UQeliCkaZPwm78CLk3lspT%2FQIgHL1wmZsf1VsJQ5sjD8MiZyL7UnzjLYAzSBx0sKO8WyEqsAUIdxADGgwwMTM2MTkyNzQ4NDkiDAV4ajzpcbbLNFGYRyqNBcaHBbQY8d9HZRhiuXEHGn%2F1OtAJRNK7XpMdTbWfnCZm4bOyE574qr0jtdBxDfuWieLaPcttPkVgpHgYbxyi87pZrfg%2BQ28zxq66lNCthWBZ2doW15zNpMM%2F9nOztWVMVhIbzsixTF%2BT7l7uyl33YzXYlkb07JY2VDB58KJ7C4fAx937EkE7Yi9Pdhm7sRqy%2FCi3G1zuegmzxG8hOMgCGrhgAXLcbelYp4PpLzqYACjoDFemWIs1Q6tX0ejLyuxtFc3YFnVgK5QrjUzdl92ATZWhLfAS0EvZm4JYv3M3w7D5dc5LSUB5SRsFVo%2FJ4VuyME0SBUx%2BkQNLMkZAT2r%2Fo5RE%2F4L6KDEjmACW83f4hlQGBtlTVEwvFbuPgIyYlWxdoq0t3LUZpBDXc%2BPS2VTArbZSE%2BaT7zo8RV6LxmYMduxDABnoe%2Fsarws6IbvoTxkgtlnVD%2BKVzGhV2Kpx4Ou1kHRYFSgmTbsNYO4Y8Wb1e5%2B%2BS6s2646wAxYYg23swOTxxvzz5lNFtKoYv9SzGSHR%2Bt7jF7nMZ94klARn08fNYEITa5xCtmQPQxXYnNUGDhJwaY16V4RWgGBRnNKAVaFFvkJ1ynsUW8yhzdYRzHg2MUk3ilpDNhoDmhJcwEI%2F%2B58pkGgjaSaLJIPme8RKxLJ1GMN0iH%2BEwXdhWILcVuHYd6wa%2B%2FKXE5FDbUD7eG56743XVMOhkYP3rcFw7FVZW0UwPdqxEP%2Fn9xdX6i5mE6bavN9IwWu3oBvV2zuBIQBTADK4q1P8GuigCBpi%2BuTiNwMJNbiVlInmuPTfz1wEP2GyXJhPc6XnrMesge8t7TG7F0S%2BbNKCbtKOPQ6GDuIiaDXeKHghoIp%2F9iOV4wbqsY50MIvgra4GOrEBPkHem%2B9jI8gbVbdcOAUQ%2FDUjU7MDdxE7HFwAfLOdf%2BVcHlA15r9Z97uuaTM8oQAR5uy%2F9X3GVCa2aFmB79Ly6LQ%2BAVH5ZN78UlWslzLKbf%2BtG1X3N4Q9HzPHsMo8p%2FSdABywT4KHH4PFNjhgQtGZbJNTlDMH3n%2Fd9jZEyLjEldEDxA9aGvJgxd7k%2Bi%2F2cncXEy8E%2F8tLGOyvNAQKIwl5%2Bf%2B8GENUcLUW1FeBb7fFdSG3&X-Amz-SignedHeaders=host&X-Amz-Signature=0fd378d4f6a23de085f93c391360aa851ca2a33e5a8589a8c0f7a6e075a7d045",
      "file_size": 82744,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 2003895,
      "file_name": "VictimProof.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/4s8xlfkzf72rkp8hjf10da3anw9c?response-content-disposition=attachment%3B%20filename%3D%22VictimProof.png%22%3B%20filename%2A%3DUTF-8%27%27VictimProof.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5AHHFMEJ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T143200Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQD8dwfn1Kj%2BfeaL5gzEI8UQeliCkaZPwm78CLk3lspT%2FQIgHL1wmZsf1VsJQ5sjD8MiZyL7UnzjLYAzSBx0sKO8WyEqsAUIdxADGgwwMTM2MTkyNzQ4NDkiDAV4ajzpcbbLNFGYRyqNBcaHBbQY8d9HZRhiuXEHGn%2F1OtAJRNK7XpMdTbWfnCZm4bOyE574qr0jtdBxDfuWieLaPcttPkVgpHgYbxyi87pZrfg%2BQ28zxq66lNCthWBZ2doW15zNpMM%2F9nOztWVMVhIbzsixTF%2BT7l7uyl33YzXYlkb07JY2VDB58KJ7C4fAx937EkE7Yi9Pdhm7sRqy%2FCi3G1zuegmzxG8hOMgCGrhgAXLcbelYp4PpLzqYACjoDFemWIs1Q6tX0ejLyuxtFc3YFnVgK5QrjUzdl92ATZWhLfAS0EvZm4JYv3M3w7D5dc5LSUB5SRsFVo%2FJ4VuyME0SBUx%2BkQNLMkZAT2r%2Fo5RE%2F4L6KDEjmACW83f4hlQGBtlTVEwvFbuPgIyYlWxdoq0t3LUZpBDXc%2BPS2VTArbZSE%2BaT7zo8RV6LxmYMduxDABnoe%2Fsarws6IbvoTxkgtlnVD%2BKVzGhV2Kpx4Ou1kHRYFSgmTbsNYO4Y8Wb1e5%2B%2BS6s2646wAxYYg23swOTxxvzz5lNFtKoYv9SzGSHR%2Bt7jF7nMZ94klARn08fNYEITa5xCtmQPQxXYnNUGDhJwaY16V4RWgGBRnNKAVaFFvkJ1ynsUW8yhzdYRzHg2MUk3ilpDNhoDmhJcwEI%2F%2B58pkGgjaSaLJIPme8RKxLJ1GMN0iH%2BEwXdhWILcVuHYd6wa%2B%2FKXE5FDbUD7eG56743XVMOhkYP3rcFw7FVZW0UwPdqxEP%2Fn9xdX6i5mE6bavN9IwWu3oBvV2zuBIQBTADK4q1P8GuigCBpi%2BuTiNwMJNbiVlInmuPTfz1wEP2GyXJhPc6XnrMesge8t7TG7F0S%2BbNKCbtKOPQ6GDuIiaDXeKHghoIp%2F9iOV4wbqsY50MIvgra4GOrEBPkHem%2B9jI8gbVbdcOAUQ%2FDUjU7MDdxE7HFwAfLOdf%2BVcHlA15r9Z97uuaTM8oQAR5uy%2F9X3GVCa2aFmB79Ly6LQ%2BAVH5ZN78UlWslzLKbf%2BtG1X3N4Q9HzPHsMo8p%2FSdABywT4KHH4PFNjhgQtGZbJNTlDMH3n%2Fd9jZEyLjEldEDxA9aGvJgxd7k%2Bi%2F2cncXEy8E%2F8tLGOyvNAQKIwl5%2Bf%2B8GENUcLUW1FeBb7fFdSG3&X-Amz-SignedHeaders=host&X-Amz-Signature=5619bef3fb5930eb42b4fa9a1e291b206724d4f12dba759ffd654a64f6d495b8",
      "file_size": 68260,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 11,
  "voters": [
    "shreyaschavhan",
    "n1m0",
    "zy9ard3",
    "neil-tsakatsa",
    "isira_adithya",
    "kerolesmagdy",
    "vimyumy",
    "abdulsomed-sadat",
    "barner001",
    "schnapps6150",
    "and 1 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 5.4,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
