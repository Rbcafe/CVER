{
  "id": 1478633,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDc4NjMz",
  "url": "https://hackerone.com/reports/1478633",
  "title": "HTTP Request Smuggling in Transform Rules using hexadecimal escape sequences in the concat() function",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2022-02-11T14:50:58.401Z",
  "submitted_at": "2022-02-11T14:50:58.504Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "albertspedersen",
    "url": "/albertspedersen",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/57i177382uzbptw7rg8wpc509mll/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 41,
    "url": "https://hackerone.com/cloudflare",
    "handle": "cloudflare",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/041/a819f0d518a4854df667be26210167805f38a6a4_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/041/a819f0d518a4854df667be26210167805f38a6a4_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Cloudflare Public Bug Bounty",
      "twitter_handle": "cloudflare",
      "website": "https://www.cloudflare.com/disclosure",
      "about": "Help us build a better Internet"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-05-16T08:57:07.047Z",
  "bug_reporter_agreed_on_going_public_at": "2022-02-15T13:52:41.515Z",
  "team_member_agreed_on_going_public_at": "2022-05-16T08:57:06.900Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "bounty_amount": "6000.0",
  "formatted_bounty": "$6,000",
  "weakness": {
    "id": 86,
    "name": "HTTP Request Smuggling"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 107,
  "voters": [
    "njmulsqb",
    "learn_more",
    "barbod",
    "acedone",
    "jumpydata",
    "anjal_giri",
    "n1m0",
    "jensec",
    "delisyd",
    "bendtheory",
    "and 97 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 10.0,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 141959,
      "category": "team",
      "content": "The Edge Rules engine used by Cloudflare Transform Rules features string modifying functions like lower() and concat(), which accepted hexadecimal-encoded characters such as ”\\x0a\\x0d“. This allowed for manipulation of request headers (e.g. injecting an additional header) and, as a consequence, made HTTP smuggling attack (TE.CL) possible. This vulnerability enabled an attacker to bypass security products such as Cloudflare Access and view the content of internal origin servers. \nThis bug in hexadecimal parsing was fixed by the relevant engineering team. We rewarded this finding as critical as well as a bonus for a high quality, detailed report. \nInternal investigation confirmed that no other CF customer was affected by this attack. As a recommendation, we advise Cloudflare Access customers  to always verify the Authorization JWT token before processing requests from the Cloudflare edge. ",
      "user": {
        "id": 1982826,
        "username": "m0nia",
        "name": "Monika S",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2021-09-24T07:21:49.521Z",
        "url": "https://hackerone.com/m0nia",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "xtralarge": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "id": 142005,
      "category": "researcher",
      "content": "Cloudflare's Ruleset Engine allows the use of hexadecimal escape sequences in string manipulation functions such as `concat()`. Due to a lack of output sanitation, this enabled an attacker to inject newlines into the header value. By creating a dynamic header rewrite rule with the value `concat(\"-\", \"\\x0d\\x0aTransfer-Encoding: chunked\")`, it was possible to change the transfer encoding of the request. When combined with a POST body such as `0\\r\\n\\r\\nGET / HTTP/1.1\\r\\nHost: internal.example.com\\r\\n\\r\\n` it made HTTP request smuggling extremely trivial. Additionally, the position of Transform Rules in the request flow meant it was possible to use internal headers to control many aspects of the request. A fix was rolled out within hours of the report being submitted. I would like to thank the teams at Cloudflare for their efforts.",
      "user": {
        "id": 1710630,
        "username": "albertspedersen",
        "name": "Albert Pedersen",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2021-05-09T10:51:07.244Z",
        "url": "https://hackerone.com/albertspedersen",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/57i177382uzbptw7rg8wpc509mll/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/57i177382uzbptw7rg8wpc509mll/fd3465a1d18de709ef6a7a4daaffea9f69b778e9708be2cc15159c7bef911a89",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/57i177382uzbptw7rg8wpc509mll/d7b0d969b6320751e1c58b9e3efff1e228054ee3d8eade5c51c4c79b25513a9c"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    }
  ]
}
