{
  "id": 1223882,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjIzODgy",
  "url": "https://hackerone.com/reports/1223882",
  "title": "CVE-2021-22925: TELNET stack contents disclosure again",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2021-06-11T12:15:31.808Z",
  "submitted_at": "2021-06-11T12:15:31.869Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "thoger",
    "url": "/thoger",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2021-22925",
    "CVE-2021-22898"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2021-07-21T20:41:01.887Z",
  "bug_reporter_agreed_on_going_public_at": "2021-07-21T20:41:01.848Z",
  "team_member_agreed_on_going_public_at": "2021-07-21T16:25:14.438Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n\nCVE-2021-22898: TELNET stack contents disclosure (#1176461) issue was recently reported for curl and it was addressed in curl 7.77.0:\n\nhttps://curl.se/docs/CVE-2021-22898.html\nhttps://github.com/curl/curl/commit/39ce47f219b09c380b81f89fe54ac586c8db6bde\nhttps://hackerone.com/reports/1176461\n\nHowever, the fix applied is not correct and does not completely address the issue.  It helps in cases when long environment variable name is used (`'a'*256 + ',b'`), but not when the name is short and only the value is long (`'a,' + 'b'*256`, which is the example mentioned in the curl project advisory).\n\n## Steps To Reproduce:\n\nFollow the steps form #1176461, only use NEW_ENV option with short name and long value, such as:\n\n```\n$ curl telnet://127.0.0.1:23 -t NEW_ENV=`python -c \"print('a,' + 'b'*256)\"`\n```\n\n## Supporting Material/References:\n\nWhen parsing NEW_ENV option value with short name and long value, sscanf() returns 2, as it writes to both `varname` and `varval`, even though the data in `varval` is truncated.  Hence such variable is not skipped and is added to the `temp[]` buffer.  However, the `len` counter which tracks the amount of data that was already written to `temp[]` is not updated based on the data written to the buffer in the `msnprintf()`call, but rather based on the length of the original unparsed data that is stored in `tmplen`.  The relevant code is here:\n\nhttps://github.com/curl/curl/blob/curl-7_77_0/lib/telnet.c#L926-L929\n\nWhen value stored in `varval` is truncated, `len` is increased too much and a chunk of uninitialized memory is created in `temp[]`.  The `len` should only be incremented by `strlen(varname) + strlen(varval) + 2`.\n\nI wonder if the original fix should be preserved or re-worked.  In addition to not fixing the info leak problem properly, it also causes certain valid option values to be ignored and not sent to a server any more.  Rejected values are of the forms `NEW_ENV=a` or `NEW_ENV=a,`.  At least the second one seems like an obviously valid way to set variable `a` to an empty string.  RFC 1572 defines that environment variable can be sent with empty value and hence `NEW_ENV=a,` should remain supported.  It also defines that variable can be sent with no value, making `NEW_ENV=a` a valid option as well.  Note that curl prior to 7.77.0 actually did handle `NEW_ENV=a` that way, but it looks more like an unintended side effect of how `len` was incremented by `tmplen`, as the empty value part was written to `temp[]` and only subsequently overwritten.  As the telnet protocol support in curl is not likely to be used widely these days, possibly only to interact with some legacy systems, it seems reasonable to prefer a fix that changes behaviour as little as possible.\n\n## Impact\n\nLeak of an uninitialized stack memory.\n\nReport #1176461 and the matching curl advisory provide some estimates on how much data can be leaked.  I believe the amount of leaked data is smaller and is less than a half of the `temp[]` size.  The reason for that is in the `check_telnet_options()` where option arguments are truncated to 255 characters, and at least half of that must part of the defined variable name or value.\n\nhttps://github.com/curl/curl/blob/curl-7_77_0/lib/telnet.c#L799-L800",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2021-08-20T16:25:14.512Z",
  "allow_singular_disclosure_after": -78356879.42930461,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "0nlymohammed",
    "ekgaribadmi",
    "aospiderman"
  ],
  "severity": {
    "rating": "low",
    "score": 3.1,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
