{
  "id": 1067276,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDY3Mjc2",
  "url": "https://hackerone.com/reports/1067276",
  "title": "Sending trusted ████ and ██████████ emails through public API endpoint in ███████ site",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-12-28T05:24:49.277Z",
  "submitted_at": "2020-12-28T05:24:49.291Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "skarsom",
    "url": "/skarsom",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/AJF5UwM9J4LCZWYcZzShLMAG/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-04-08T18:54:26.525Z",
  "bug_reporter_agreed_on_going_public_at": "2021-04-07T04:44:23.615Z",
  "team_member_agreed_on_going_public_at": "2021-04-08T18:54:26.399Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\nA publicly accessible endpoint at PUT https://████████does not validate any of its four parameters: to, from, subject, text. This enables sending email to any address, with any content, with any from address, on a server that is in ██████whitelist. Such services include, but are not limited to, all ██████ email (██████.\n\n**Description:**\nThe ███'s (████████) ███████ (███) public portal, including login to the private portal, exists at https://███████████/welcome/ with a staging environment at https://███/welcome/. This vulnerability affects both staging and production.\n\nWhenever a request for a new account or a password reset is created, the AngularJS frontend formats this request with a client-side email template (relevant code in https://██████/█████) and sends a JSON-encoded PUT request to `/███████`.\n\nThere are four parameters:\n1) `to` -- this should always be `█████` per https://████████/████████\n1) `from` -- this should always be `█████` per https://████████/█████\n3) `subject` -- the email subject\n4) `text` -- the email body\n\nBecause the client-side AngularJS code is trusted to generate legitimate emails, an unauthorized attacker can use this API to mass-send legitimate ███████ or ██████ emails with arbitrary content. These emails go through the ███ system, so they explicitly pass DKIM and SPF.\n\n## Step-by-step Reproduction Instructions\n\n1. Execute the following cURL request, changing the text `YOUREMAIL` in the JSON-encoded `to` parameter to an email address of your choosing:\n\n    ```\ncurl -X PUT --data '{\"from\":\"Email POC <skarsomh1vdp@████>\",\"to\":\"YOUREMAIL\",\"subject\":\"Test under DC3 VDP at HackerOne\",\"text\":\"This is a test. For more info see hackerone.com/deptofdefense.\"}' -k https://████████-H 'Content-type: application/json'\n    ```\n2. Success. Check the email address specified in the `to` parameter. Notice that this email passes all spam checks such as DKIM and SPF.\n\n## Suggested Mitigation/Remediation Actions\n- Completely remove the `/████` endpoint.\n- Add a new endpoint for requesting a new account that composes the proper email on the *backend*.\n- Add a new endpoint for requesting help with logging in that composes the proper email on the *backend*.\n- Evaluate whether the ██████████ needs to continue including ████████SPF records, as it increases attack surface.\n\n## Impact\n\nAn unauthorized attacker can send arbitrary email from ██████-controlled email servers.\n\nAn adversary could create a spear phishing attack against high-value targets by forging ████ or IC correspondence. For example, sending an email from `██████████` requesting personnel to click on a link to verify their CAC info.",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 6,
  "voters": [
    "skarsom",
    "ayoub0x1",
    "dastan_9408",
    "mateo-smith",
    "ekgaribadmi",
    "meispi"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
