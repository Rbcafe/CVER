{
  "id": 1102064,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTAyMDY0",
  "url": "https://hackerone.com/reports/1102064",
  "title": "kubectl creating secrets from stringData leaves secret in plain text",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "low",
  "readable_substate": "Informative",
  "created_at": "2021-02-12T10:30:45.677Z",
  "submitted_at": "2021-02-12T10:30:45.749Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "max_lan",
    "url": "/max_lan",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 39386,
    "url": "https://hackerone.com/kubernetes",
    "handle": "kubernetes",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/039/386/486f4380e09776d05a912ca9f46be23f72fe8197_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Kubernetes",
      "twitter_handle": "kubernetesio",
      "website": "https://kubernetes.io/",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-08-21T07:32:11.123Z",
  "bug_reporter_agreed_on_going_public_at": "2021-08-21T07:32:11.033Z",
  "team_member_agreed_on_going_public_at": "2021-08-06T23:30:43.656Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Report Submission Form\n\n## Summary:\nkubectl creating secrets from stringData leaves secret in plain text\n\n## Kubernetes Version:\n\n    $ kubectl version\n    Client Version: version.Info{Major:\"1\", Minor:\"19\", GitVersion:\"v1.19.3\", GitCommit:\"1e11e4a2108024935ecfcb2912226cedeafd99df\",GitTreeState:\"clean\", BuildDate:\"2020-10-14T12:50:19Z\", GoVersion:\"go1.15.2\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\n    Server Version: version.Info{Major:\"1\", Minor:\"19\", GitVersion:\"v1.19.3\", GitCommit:\"1e11e4a2108024935ecfcb2912226cedeafd99df\", GitTreeState:\"clean\", BuildDate:\"2020-10-14T12:41:49Z\", GoVersion:\"go1.15.2\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n\n## Component Version:\nn/a\n\n## Steps To Reproduce:\n\nCreate a secret using stringData and query it.\n\n\t\t$ cat sec.yaml \n\t\tkind: Secret\n\t\tapiVersion: v1\n\t\tmetadata:\n\t\t name: stupid\n\t\tstringData:\n\t\t user: clear\n\t\t password: revealed\n\n\t\t$ kubectl get secret stupid -o yaml\n\t\tapiVersion: v1\n\t\tdata:\n\t\t  password: cmV2ZWFsZWQ=\n\t\t  user: Y2xlYXI=\n\t\tkind: Secret\n\t\tmetadata:\n\t\t  annotations:\n\t\t    kubectl.kubernetes.io/last-applied-configuration: |\n\t\t      {\"apiVersion\":\"v1\",\"kind\":\"Secret\",\"metadata\":{\"annotations\":{},\"name\":\"stupid\",\"namespace\":\"default\"},\"stringData\":{\"password\":\"revealed\",\"user\":\"clear\"}}\n\t\t  creationTimestamp: \"2021-02-12T10:11:02Z\"\n\n\nEven if you update the secret, the new value is then shown in the last-applied-configuration.\nMeaning the base64 \"protection\" against inadvertent disclosure is pointless.\nkubectl should probably either obscure or base64 the values in last-applied for secrets.\n\n## Supporting Material/References:\n[list any additional material (e.g. screenshots, logs, etc.)]\n\n  * [attachment / reference]\n\n## Impact\n\nAn attacker could oversee a non-obfuscated secret. \n\n(It seems fairly unlikely/minor but you've gone to the trouble of base64 encoding it for a reason. Why would that reason apply for the actual value but 2 lines further down no longer apply?)",
  "weakness": {
    "id": 33,
    "name": "Cleartext Storage of Sensitive Information"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 1,
  "voters": [
    "h4x0r_dz"
  ],
  "severity": {
    "rating": "low",
    "score": 3.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 32539,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/kubernetes/kubectl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
