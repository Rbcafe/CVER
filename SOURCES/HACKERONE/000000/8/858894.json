{
  "id": 858894,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NTg4OTQ=",
  "url": "https://hackerone.com/reports/858894",
  "title": "Potential stored Cross-Site Scripting vulnerability in Support Backend",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-04-24T21:58:57.544Z",
  "submitted_at": "2020-04-24T21:58:57.544Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "jobert",
    "url": "/jobert",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-05-04T20:58:49.541Z",
  "bug_reporter_agreed_on_going_public_at": "2020-05-04T20:56:49.354Z",
  "team_member_agreed_on_going_public_at": "2020-05-04T20:58:49.386Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "HackerOne maintains an internal Support Backend system for employees. On the internal user profiles for hackers, a small overview is shown that lists the skills the user tagged their penetration tester profile with. Although the skills are currently managed by HackerOne and a user can only pick skills from a list, an XSS payload can be injected in the skill name to execute JavaScript in the backend system. In case we would allow penetration testers to enter their own skills in a free-form text format, it could lead to a stored Cross-Site Scripting vulnerability that is exploited by people outside of HackerOne.\n\n# Proof of concept\nTo reproduce, make sure your local environment is set up correctly by running the following code:\n\n```ruby\nSkill.create! name: '<script>alert(/XSS/);</script>'\nUser.find_by!(username: 'hacker').update! h1_pentester: true\n```\n\nNext, authenticate as the `hacker` user and enable the `pentester-profile` feature. Go to http://localhost:8080/settings/pentests and create a penetration tester profile with the skill that was created earlier. When the profile is created successfully, sign in to the Support Backend at http://localhost:8080/support and navigate to http://localhost:8080/support/users/hacker. The XSS payload injected in the skill name will be executed.\n\n████\n\n# Root cause\nThe following code leads to two Cross-Site Scripting vulnerabilities:\n\n**lib/support/app/controllers/support/tables/columns/pentester_profile_skills.rb**\n```ruby\ndef render(record)\n  return unless record.pentester_profile.present?\n\n  skill_names = record.pentester_profile.skills.map(&:name)\n  content = \"<span\n    data-toggle='tooltip'\n    data-placement='top'\n    style='cursor: pointer; font-weight: bold'\n    title='#{skill_names.join(\"\\n\")}'>\n      #{skill_names.join(', ')}\n    </span>\"\n  content.html_safe\nend\n```\n\nDue to the lack of sanitization of the skill name, an attacker can append additional HTML attributes and elements, including elements and attributes that execute JavaScript. The code `title='#{skill_names.join(\"\\n\")}'>` can be exploited using skill name `'onclick='alert(/XSS/);`. The code `#{skill_names.join(', ')}` can be exploited using `<script>alert(/XSS/);</script>`.\n\n## Impact\n\nAn attacker could use this in the future to execute arbitrary JavaScript in the Support Backend. Please note that in the production environment, inline execution of JavaScript is **not** allowed, significantly reducing the exploitability of these vulnerabilities.",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-06-03T20:56:49.447Z",
  "allow_singular_disclosure_after": -116613967.17250913,
  "singular_disclosure_allowed": true,
  "vote_count": 70,
  "voters": [
    "omarelfarsaoui",
    "taha",
    "holyfield",
    "base_64",
    "rook1337",
    "sameerphad72",
    "newbipath12",
    "ali",
    "0xd0m7",
    "mmdz",
    "and 60 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 5.9,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "high",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
