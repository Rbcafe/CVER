{
  "id": 838647,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84Mzg2NDc=",
  "url": "https://hackerone.com/reports/838647",
  "title": "Improper Input Validation on User's Location on PUT /WhoService/putLocation Could Affect Availability/Falsify Users",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2020-04-04T05:48:28.091Z",
  "submitted_at": "2020-04-04T05:48:28.091Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "spaceraccoon",
    "url": "/spaceraccoon",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/c5zYRQsvGPQP6MxHYYN4r5Jp/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 51543,
    "url": "https://hackerone.com/who-covid-19-mobile-app",
    "handle": "who-covid-19-mobile-app",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVWHFSNNE%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T134132Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCZLzSSHKxWIGhQtGT81DYUaazxK%2BA4b%2BeBse1XlfNIBwIgfPS8dRNp%2FxmFBCNrWLDxkracRrBYrm5cEg%2BjJDXIvNsqsgUIdRADGgwwMTM2MTkyNzQ4NDkiDNaBwIyE1dVL1zGF0iqPBeiofcLE831cuz%2Fg3%2FBj%2BOAUaL0qSPB0iFluwPLKGuVB6sGEff4eb%2BhiIZV7BGnszG7nUhp9GzIuA1YXeX1txWBdpF9oemEmi5NywysgHkWri0j4Huf8Kqc0veGGY9SjOhiXwycQ8YsHi0vPSebpPPXh0TfZnOU4brttYbmYDQt11ba4sYpdhFcGj2JT98cBsee%2Fc5T7bN4P2XDVhPiRuRw9aGFMqvz1hVd7umv69rNFED1JWINyJdd5C%2F6agSSB8sgbH71ksUBWB6gZbJY81x4rscmVfXXofwqa8PBk5Og2PopEsHO5gC2m6ONQs7oHx%2FwcPVQk3JG%2BUI5vzVw25Vs4%2BdZdhcmlVKrn%2B%2FAnPLwb1UVjUdIZ1Bh2A7dxoauy7mugTmVoaADIScHYKRRYQ6ymOT%2B5HZKcppxrXZOnvSp0bLZxAWUdNfX%2BptG8LPBB0HFsGwGHJM3e67F2eH8OPbwOv4CEGzSDxBRn5jAtojFIeM0zYT71ER7JqwYdvVMhHEmS6yzxVkocSBRdqjcwtHkc%2F3o0qHipZYK%2FYAM9qv8hFeWan6Sa185DBwXF3TgIsvbA%2Fcjp8pWqNUeqtz6soCDoRJUku0qJamW5nH6N7sH%2BtO5tJv6FlKTWPWglmSjgtpptDiSnxBFAQX9CJ8spiVo69mOdSoiBjJLiBs9VWBWsOKdxglim0NnAzaWeTydCoRC1TZO3P1tZhKm4UqA86wCtToWZwff54BVenmfxX29vKT622UzSbI49YSFrYIcmrAYj0mP7dMKGXpl0tZCD4BdH226Uje%2FjlE7N5BpXxeyGKIWjtnsKMm2g%2BMxP7x2yGOeguUUjYzkWYTTS1FwwtYRKn3lLwjDgiYO0bzSZF0Ew1bitrgY6sQHIue94FUiYiMOMkDJ9Ayf9fPYms2aIIAO2H9bXmuaR5lH9obA9b%2FPrvjiRxAZ6lxqcr%2B9QPKlzkknLInDxqbq5txCl1Rij1JaLqv%2B4UxnGRb8ZIpj0ICFXmBBF2kEefQwHF5kj7QtGSa2JcGxgdtN3u7o%2BaXyb07mhLfzaH6hd1QUtvhvVRlbD%2FIk%2F25jmafq1vwS1a1GzXy59j%2BKSs8AfLJwUQzk9Ye%2BpIrlwwlAnAww%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=0548d3c17b46b85b25a45f963b3fb8e3ebfa196cb4d26cb489f7607a23c71493",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wz2z6d5e6ox7n48beetcuc5kewkx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22covidAssassinBadge_web_smaller.png%22%3B%20filename%2A%3DUTF-8%27%27covidAssassinBadge_web_smaller.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVWHFSNNE%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T134132Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQCZLzSSHKxWIGhQtGT81DYUaazxK%2BA4b%2BeBse1XlfNIBwIgfPS8dRNp%2FxmFBCNrWLDxkracRrBYrm5cEg%2BjJDXIvNsqsgUIdRADGgwwMTM2MTkyNzQ4NDkiDNaBwIyE1dVL1zGF0iqPBeiofcLE831cuz%2Fg3%2FBj%2BOAUaL0qSPB0iFluwPLKGuVB6sGEff4eb%2BhiIZV7BGnszG7nUhp9GzIuA1YXeX1txWBdpF9oemEmi5NywysgHkWri0j4Huf8Kqc0veGGY9SjOhiXwycQ8YsHi0vPSebpPPXh0TfZnOU4brttYbmYDQt11ba4sYpdhFcGj2JT98cBsee%2Fc5T7bN4P2XDVhPiRuRw9aGFMqvz1hVd7umv69rNFED1JWINyJdd5C%2F6agSSB8sgbH71ksUBWB6gZbJY81x4rscmVfXXofwqa8PBk5Og2PopEsHO5gC2m6ONQs7oHx%2FwcPVQk3JG%2BUI5vzVw25Vs4%2BdZdhcmlVKrn%2B%2FAnPLwb1UVjUdIZ1Bh2A7dxoauy7mugTmVoaADIScHYKRRYQ6ymOT%2B5HZKcppxrXZOnvSp0bLZxAWUdNfX%2BptG8LPBB0HFsGwGHJM3e67F2eH8OPbwOv4CEGzSDxBRn5jAtojFIeM0zYT71ER7JqwYdvVMhHEmS6yzxVkocSBRdqjcwtHkc%2F3o0qHipZYK%2FYAM9qv8hFeWan6Sa185DBwXF3TgIsvbA%2Fcjp8pWqNUeqtz6soCDoRJUku0qJamW5nH6N7sH%2BtO5tJv6FlKTWPWglmSjgtpptDiSnxBFAQX9CJ8spiVo69mOdSoiBjJLiBs9VWBWsOKdxglim0NnAzaWeTydCoRC1TZO3P1tZhKm4UqA86wCtToWZwff54BVenmfxX29vKT622UzSbI49YSFrYIcmrAYj0mP7dMKGXpl0tZCD4BdH226Uje%2FjlE7N5BpXxeyGKIWjtnsKMm2g%2BMxP7x2yGOeguUUjYzkWYTTS1FwwtYRKn3lLwjDgiYO0bzSZF0Ew1bitrgY6sQHIue94FUiYiMOMkDJ9Ayf9fPYms2aIIAO2H9bXmuaR5lH9obA9b%2FPrvjiRxAZ6lxqcr%2B9QPKlzkknLInDxqbq5txCl1Rij1JaLqv%2B4UxnGRb8ZIpj0ICFXmBBF2kEefQwHF5kj7QtGSa2JcGxgdtN3u7o%2BaXyb07mhLfzaH6hd1QUtvhvVRlbD%2FIk%2F25jmafq1vwS1a1GzXy59j%2BKSs8AfLJwUQzk9Ye%2BpIrlwwlAnAww%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=34aa796d46fffc3f9d3966cef2ddd8489cad12f5db373611c37bcc747723d909"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "WHO COVID-19 Mobile App",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-12-22T04:26:13.630Z",
  "bug_reporter_agreed_on_going_public_at": "2020-12-22T04:26:13.495Z",
  "team_member_agreed_on_going_public_at": "2020-12-22T04:24:03.359Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nNote: I noticed that that the team has fixed issues like an XSS that's caused only from a header value (typically OOS since it's not directly exploitable) https://github.com/WorldHealthOrganization/app/pull/855, so in the spirit of this I'm also reporting another \"good-to-fix\" issue.\n\nOn the WHO app, users send approximate location data to the `WhoService` API:\n\n`/app/client/flutter/lib/pages/onboarding/location_sharing_page.dart`:\n\n```\n  Future<void> _allowLocationSharing() async {\n    try {\n      await Location().requestPermission();\n      if (await Location().hasPermission() == PermissionStatus.granted) {\n        if (await Location().requestService()) {\n          LocationData location = await Location().getLocation();\n          Map jitteredLocationData = JitterLocation().jitter(\n              location.latitude, location.longitude,\n              5 /*kms refers to kilometers*/);\n\n          await WhoService.putLocation(\n              latitude: jitteredLocationData['lat'],\n              longitude: jitteredLocationData['lng']);\n        }\n      }\n    } catch(_) {\n      // ignore for now.\n    } finally {\n      _complete();\n    }\n  }\n```\n\nWhich in turn translates to a call to `https://staging.whocoronavirus.org/WhoService/putDeviceToken`:\n\n```\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ██████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n\t\"latitude\": 22222222,\n\t\"longitude\": \"9999999\"\n}'\n```\n\nThis returns a `200 OK` response. On the server side, we see that it uses the following logic:\n\n```\n  @Override public Void putLocation(PutLocationRequest request) throws IOException {\n    Client client = Client.current();\n    client.latitude = request.latitude;\n    client.longitude = request.longitude;\n    S2LatLng coordinates = S2LatLng.fromDegrees(request.latitude, request.longitude);\n    client.location = S2CellId.fromLatLng(coordinates).id();\n    ofy().save().entities(client);\n    return new Void();\n  }\n```\n\nThere is no validation on `request.latitude, request.longitude` before it is stored into the Google App Engine datastore. This is because the `S2LatLng.fromDegrees` (which transforms the values into a `S2LatLng` object) from the `s2-geometry-library-java` library specifically does not validate these values because, according to their comments at https://github.com/google/s2-geometry-library-java/blob/master/src/com/google/common/geometry/S2LatLng.java:\n\n```\nLike the rest of the \"geometry\" package, the\nintent is to represent spherical geometry as a mathematical abstraction, so\nfunctions that are specifically related to the Earth's geometry (e.g.\neasting/northing conversions) should be put elsewhere.\n```\n\nThus, even these values:\n\n```\n\t\"latitude\": 22222222,\n\t\"longitude\": \"9999999\"\n```\n\nAre accepted and stored in the database even though they are technically non-existent coordinates on earth.\n\nTo reproduce, just run this request with different `who-client-id` UUID you generated yourself and impossible `latitude` and `longitude`.\n\n```\ncurl --request POST \\\n  --url 'https://hackerone.whocoronavirus.org/WhoService/putLocation' \\\n  --header 'content-type: application/json' \\\n  --header 'who-client-id: ████████' \\\n  --header 'who-platform: ios' \\\n  --data '{\n\t\"latitude\": 22222222,\n\t\"longitude\": \"9999999\"\n}'\n```\n\n## Impact\n\nAn attacker can exploit this to affect the Availability or Integrity of the analytics data by injecting false location values and falsifying user data. A fix for this would be to implement a quick lat lng validator that is specifically meant to validate Earth geometry, instead of the `S2LatLng` class.",
  "weakness": {
    "id": 107,
    "name": "Improper Input Validation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 15,
  "voters": [
    "emanuelharijanto",
    "mirhat",
    "bhl",
    "bibekshah",
    "bl4de",
    "ali",
    "ayoub0x1",
    "iamrjarpan",
    "0nlymohammed",
    "newfunction",
    "and 5 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
