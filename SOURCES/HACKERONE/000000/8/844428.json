{
  "id": 844428,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84NDQ0Mjg=",
  "url": "https://hackerone.com/reports/844428",
  "title": "[www.zomato.com] Abusing LocalParams (city) to Inject SOLR query",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2020-04-09T18:33:10.236Z",
  "submitted_at": "2020-04-09T18:33:10.236Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "zzzhacker13",
    "url": "/zzzhacker13",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/EDKodYArUp4pWfyihgQX3RCw/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 2943,
    "url": "https://hackerone.com/zomato",
    "handle": "zomato",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Zomato",
      "twitter_handle": "Zomato",
      "website": "https://www.zomato.com",
      "about": "The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-08-10T13:23:11.806Z",
  "bug_reporter_agreed_on_going_public_at": "2020-08-10T13:15:14.719Z",
  "team_member_agreed_on_going_public_at": "2020-08-10T13:23:11.649Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Hi Team! ;)\n\nI Found an **limited** ``SOLR Injection`` by Abusing LocalParams (``city``) in ``/webapi/searchapi.php``, **Therefore Please respect my decision to mark this report as** ``Medium`` **instead of** ``High`` **(Based on the fact the code is Vulnerable even if it's hard to exploit).**\n\n- Request (adding single Backslash):\n\n```http\nGET /webapi/searchapi.php?city=51\\ HTTP/1.1\nHost: www.zomato.com\nConnection: close\nAccept: application/json\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)\nChrome/80.0.3987.149 Safari/537.36\nAccept-Encoding: gzip, deflate\nAccept-Language: en\n```\n\n- Response:\n\n```http\nHTTP/1.1 500 Internal Server Error\n```\n- Request (adding double Backslashes):\n\n```http\nGET /webapi/searchapi.php?city=51\\\\ HTTP/1.1\nHost: www.zomato.com\nConnection: close\nAccept: application/json\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)\nChrome/80.0.3987.149 Safari/537.36\nAccept-Encoding: gzip, deflate\nAccept-Language: en\n```\n\n- Response:\n\n```http\nHTTP/1.1 200 OK\n```\n\n**As you can see - adding single Backslash** ``\\`` **will break the SOLR query but by adding double Backslashes** ``\\\\`` **(closing it) will execute the SOLR query properly, Therefore this isn't an \"Exception\" - it's a valid SOLR Injection!!**\n\n- Source: **https://portswigger.net/research/backslash-powered-scanning-hunting-unknown-vulnerability-classes**\n\n## Impact\n\n**\"By exploiting 'Solr (local) Parameters Injection,' it is possible to at least modify or view all the data within the Solr cluster, or even exploit known vulnerabilities to achieve remote code execution.\"**\n\n- Source: **\"https://www.veracode.com/blog/security-news/new-research-apache-solr-parameter-injection\"**",
  "bounty_amount": "100.0",
  "formatted_bounty": "$100",
  "weakness": {
    "id": 67,
    "name": "SQL Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 9,
  "voters": [
    "rahulkadavil_",
    "xsstestov",
    "dastan_9408",
    "sa1tama0",
    "zzzhacker13",
    "ahak",
    "v13rsba",
    "null_type",
    "vallikkv"
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 383,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.zomato.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
