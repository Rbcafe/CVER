{
  "id": 686823,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82ODY4MjM=",
  "url": "https://hackerone.com/reports/686823",
  "title": "CVE-2019-5481: krb5: double-free in read_data() after realloc() fail",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-09-03T11:51:58.974Z",
  "submitted_at": "2019-09-03T11:51:58.974Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "thomas_v",
    "url": "/thomas_v",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2019-5481"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-11-14T15:16:57.952Z",
  "bug_reporter_agreed_on_going_public_at": "2020-11-14T15:16:57.883Z",
  "team_member_agreed_on_going_public_at": "2020-11-05T08:34:35.746Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nIn 'lib/security.c', there is a double-free of the reference 'buf->data' on the teardown path if 'Curl_saferealloc()' fails.\n\nAlso, since we read 'len' from the 'fd', the sender might be able to remotely trigger a realloc() failure, and then the double-free, by sending the value 0x7fffffff.\n\nIntroduced by\n0649433da realloc: use Curl_saferealloc to avoid common mistakes\n\n## Steps To Reproduce:\nActual double-free was not reproduced.\nThe realloc failure with particular 'len' value can be reproduced on my 32bits linux machine with following code:\n```C\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void)\n{\n    void *ptr = malloc(10);\n    if (!ptr)\n        return -1;\n    int len = 0x7fffffff;\n    void *ptr2 = realloc(ptr, len);\n    if (!ptr2) {\n        printf(\"Triggered realloc failure\\n\");\n        return 0;\n    }\n    return -1;\n}\n```\n\n## Comment:\nAlso checked other occurences of 'Curl_saferealloc()' calls which all seem fine otherwise.\n\n## Impact\n\nDouble-free after a 'realloc()' failure, which could be triggered remotely, depending on the use context of the 'read_data()' function.",
  "weakness": {
    "id": 49,
    "name": "Double Free"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-12-05T08:34:35.928Z",
  "allow_singular_disclosure_after": -100673586.30324481,
  "singular_disclosure_allowed": true,
  "vote_count": 6,
  "voters": [
    "sameerphad72",
    "demonia",
    "cryptographer",
    "joe_glueck",
    "darksider0509",
    "abowalid"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.3,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
