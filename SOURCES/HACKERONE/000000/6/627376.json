{
  "id": 627376,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82MjczNzY=",
  "url": "https://hackerone.com/reports/627376",
  "title": "Application level denial of service due to shutting down the server ",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2019-06-24T17:18:38.926Z",
  "submitted_at": "2019-06-24T17:18:38.926Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "3la2kb",
    "url": "/3la2kb",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/bdLkr1SSuBWHtafUSQMphjGB/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-09-27T09:21:52.359Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-09-03T08:22:12.240Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Module\n**module name:** http-live-simulator\n**version:** 1.0.7\n**npm page:** https://www.npmjs.com/package/http-live-simulator\n\n## Description\nI've found a way to crash the server due to the way it parses URL \n\n## Steps To Reproduce:\n1- Install the module : `npm install -g http-live-simulator`\n2- Run the server : `http-live`\n3- Attempt to crash the server by this command `curl --path-as-is http://localhost:8080/../?a`\n\n## Explanation :\nthe reason for this issue is the fix for my previous [report](https://hackerone.com/reports/411405)\nwhich is :\n```javascript\n\tvar pathname = url.parse(req.url, true).pathname;\n\twhile(pathname.indexOf(\"/../\") != -1) {\n\t\tpathname = pathname.replace(\"/../\",\"\"); //fix for path traversal bug\n\t}\n```\nso now if we pass ` http://localhost:8080/../?a` as the url the `pathname` becomes empty\nwhich will cause skipping this condition :\n```javascript\n\t\tif (pathname == \"/\") {\n\t\t\tfor(var i=0;i<defaults.length;i++) {\n\t\t\t\tif (fs.existsSync(process.cwd() + '/' + defaults[i])) {\n\t\t\t\t\tpathname = '/' + defaults[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pathname == '/') {\n\t\t\t\treturn404(res, pathname);\n\t\t\t\tconsole.log(pathname);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n```\nwith this in mind now we can proceed to the buggy snippet :\n```javascript\n\t\tabspath = process.cwd() + pathname;\n\t\tconsole.log('REQUEST: ', req.method, pathname);\n\n\t\tif (fs.existsSync(abspath)) {\n\t\t\tconsole.log(\"in condition\");\n\t\t\tfs.readFile(abspath, function(err, data) {\n\t\t\t\tconsole.log(\"in condition1\");\n\t\t\t\tvar ext = pathname.slice(pathname.indexOf(\".\"));\n\t\t\t\tvar mtype = getMimeType(ext);\n\t\t\t\tres.writeHead(200, {'Content-Type': mtype});\n\t\t\t\tconsole.log(abspath, data);\n\t\t\t\tres.write(data);\n\t\t\t\tres.end();\n\t\t\t});\n\t\t}\n``` \nhere `abspath` becomes `<project_dir>` which cannot be read by `readFile` because it's a directory not a file causing the value of `data` to be `undefined` which will cause an error when trying to `res.write(data);` as `res.write()` function expects its parameter to be a string or buffer but it's `undefined` in this case.\n\n## Fix :\nappend a `/` to `pathname` if it becomes empty after sanitizing\n\n## Impact\n\nDenial of service due to shutting down the server",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-10-03T08:22:12.330Z",
  "allow_singular_disclosure_after": -137739721.09865877,
  "singular_disclosure_allowed": true,
  "vote_count": 11,
  "voters": [
    "sameerphad72",
    "bl4de",
    "brodie_codie",
    "deb0con",
    "mostafamamdoh",
    "witchking_h1",
    "chelitaboo83",
    "countpaisley",
    "stabled",
    "seanyasno",
    "and 1 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 14637,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "http-live-simulator",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
