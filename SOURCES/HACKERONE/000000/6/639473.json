{
  "id": 639473,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82Mzk0NzM=",
  "url": "https://hackerone.com/reports/639473",
  "title": "Ubuntu/Debian installation method allows key poisoning and code execution for network attacker",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-07-10T14:22:15.304Z",
  "submitted_at": "2019-07-10T14:22:15.304Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "hanno",
    "url": "/hanno",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/020/918/74da560ef66bf8cc239e219843444b441a7dfac6_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 8724,
    "url": "https://hackerone.com/mariadb",
    "handle": "mariadb",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/008/724/6a67872926e894490b4fdc36cd6a3f59e300616b_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/724/6a67872926e894490b4fdc36cd6a3f59e300616b_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "MariaDB",
      "twitter_handle": "mariadb_org",
      "website": "https://mariadb.org",
      "about": "MariaDB is a high performance, open source database that helps the world's busiest websites deliver more content, faster."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-01-21T14:18:00.363Z",
  "bug_reporter_agreed_on_going_public_at": "2020-01-21T13:30:43.468Z",
  "team_member_agreed_on_going_public_at": "2020-01-21T14:18:00.252Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The MariaDB installation instructions for apt-based distributions (Debian/Ubuntu) look like this:\nsudo apt-get install software-properties-common\nsudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8\nsudo add-apt-repository 'deb [arch=amd64] http://mirror.wtnet.de/mariadb/repo/10.4/ubuntu disco main'\n\nThe apt-key command is problematic and vulnerable to two different kinds of attacks.\n\nAttack 1: Key poisoning\n==================\n\nkeyserver.ubuntu.com is part of the SKS keyserver network and gets synced with other keyservers.\n\nRecently there have been attacks \"poisoning\" PGP keys on the keyservers. The principle is actually extremely simple: The keyservers operate on an \"append only\" principle, and everyone can add new signatures to an existing key. So one can make a key practically unusable by adding lots of signatures.\n\nMore background:\nhttps://dkg.fifthhorseman.net/blog/openpgp-certificate-flooding.html\nhttps://gist.github.com/rjhansen/67ab921ffb4084c865b3618d6955275f\n\nAn \"expoit\" has also been published, but this is more or less trivial:\nhttps://gist.github.com/yegortimoshenko/8d57c7892d4bcd50d11e69f71b1f80bf\n\nAn attacker can poison the release key . This will likely either lead to the key becoming unimportable or gpg becoming unusable or extremely slow.\n\nAttack 2: Key ID collission\n====================\n\nThe above command fetches the key via its 64 bit key id over an unauthenticated connection.\nThe shortened 64 bit key ids aren't safe from collisions, an attacker can create a different key with the same 64 bit key id (though this requires a large amount of computing power, but it's feasible). Only the full 160 bit key ids are safe.\n\nTherefore a network/mitm attacker can serve a user a bad key with the same key id and then a signed repository with rogue packages.\n\n\nSolution\n======\n\nTo avoid both scenarios I recommend fetching the key from a secure (HTTPS) place under your control. This is also what Debian recommends:\nhttps://wiki.debian.org/DebianRepository/UseThirdParty\n\n## Impact\n\nMake installation instructions unusable due to poisoned key or execute malicious code as a network attacker during installation.",
  "weakness": {
    "id": 32,
    "name": "Cryptographic Issues - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-02-20T13:30:43.526Z",
  "allow_singular_disclosure_after": -125625246.90812337,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "mheranco",
    "0xelkomy",
    "m7mdharoun",
    "exception",
    "s1lv3rb4ck",
    "root_hunterho",
    "parasiteop",
    "markbland",
    "ospf"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
