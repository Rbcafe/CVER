{
  "id": 674866,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC82NzQ4NjY=",
  "url": "https://hackerone.com/reports/674866",
  "title": "Conversation API Leaks Details Of UnAuthorized Conversations",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-08-16T06:40:48.969Z",
  "submitted_at": "2019-08-16T06:40:48.969Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mindingdata",
    "url": "/mindingdata",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 17443,
    "url": "https://hackerone.com/vanilla",
    "handle": "vanilla",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/443/2720e6aeb834de4fd40765a5cae34abb78eb66cd_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/443/2720e6aeb834de4fd40765a5cae34abb78eb66cd_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Vanilla",
      "twitter_handle": "vanilla",
      "website": "http://vanillaforums.com",
      "about": "Vanilla is a powerfully simple discussion forum you can easily customize to make as unique as your community."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-03-25T19:41:33.034Z",
  "bug_reporter_agreed_on_going_public_at": "2020-02-24T19:41:31.402Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n\nIf a user creates a conversations, and then leaves, all API calls and web access to that conversation is locked down. Except for one particular API call which allows you to see details about ongoing conversations you have since left as long as you created the conversation in the first place. \n\n## Steps to reproduce:\n\n1. Ensure that the \"member\" role has API Token access. \n2. Create a new user with this role, and send a conversation to anyone. \n3. Leave said conversation. \n4. On the web/API calls to read this conversation and message should fail. However you should still be able to do the following API call : \nhttps://vanilla.com:444/api/v2/conversations/?insertuserid=yourUserId&access_token=accessToken\nWhich leaks details like who has been added to the conversation after you left, extra messages etc. \n\n## Code Details\n\nI noticed that *most* calls to conversations run through the method `inConversation` which checks whether a user is *still* in the conversation, and if they have left they don't have access to it. But I assume this was too heavy to run in this particular API call because it returns a list. \n\nFor this particular API call if you don't pass in the `insertuserid` param, then it will indeed check the userconversation table and make sure you are still participating in the conversation. But if you pass in `insertuserid` it instead bypasses this check and just returns all conversations you started, irrespective if you are still in them.\n\n## Impact\n\nGain information about conversations they no longer have access to.",
  "bounty_amount": "150.0",
  "formatted_bounty": "$150",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-03-25T19:41:31.450Z",
  "allow_singular_disclosure_after": -122665518.59001009,
  "singular_disclosure_allowed": true,
  "vote_count": 4,
  "voters": [
    "ali",
    "term1nal",
    "geozav",
    "defectstar"
  ],
  "severity": {
    "rating": "medium",
    "score": 4.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 14811,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/vanilla/community",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
