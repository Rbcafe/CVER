{
  "id": 991718,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85OTE3MTg=",
  "url": "https://hackerone.com/reports/991718",
  "title": "hardcoded password stored in javascript of https://████.mil",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-09-26T00:29:16.498Z",
  "submitted_at": "2020-09-26T00:29:16.549Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "x3ph_",
    "url": "/x3ph_",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/nol2hdv91s5qdzoa6axpcnk2y7f5/bbbf913458c48565d99f975f7ab9fc18ad1e989aa4f8811c1209ed725333d1ec"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-11-02T21:44:35.411Z",
  "bug_reporter_agreed_on_going_public_at": "2020-10-27T14:06:40.279Z",
  "team_member_agreed_on_going_public_at": "2020-11-02T21:44:35.311Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\n\nI have discovered a cleartext password stored within a javascript. This password allows me to authentication to https://█████.mil.\n\n**Description:**\n\nI have discovered a cleartext password stored within a javascript. This password allows me to authentication to https://███████.mil.\n\n\nTo confirm this vulnerability we will first navigate to https://███████.mil, you are now prompted to type a password. We will provide an incorrect password such as 'Password'.\n\n██████████\n\n███\n\nWe can confirm the password is invalid. However, reviewing the javascript data for '██████.chunk.js' we can confirm the authentication is validated based on a hardcoded password '█████████!'.\n\n███████\n\nWe can now confirm if we can access the staging web app using hardcoded password.\n\n██████\n\n███████\n\n## Impact\n\nBy knowing the password, it is possible to understand your password policy and structure which will encourage bruteforcing and password spray attacks in your environment.\n\n## Step-by-step Reproduction Instructions\n\n1. Navigate to https://█████████.mil.\n2. Open your browser debugger by pressing F12.\n3. Click on Network and refresh the page.\n4. Open the javascript '██████████.chunk.js' and look for where the password is stored. You will see \"(n=prompt(\"Enter Password\",\"Password\"),o=\"██████;\" copy the password.\n5. Now close out your browser debugger and refresh the page and type the password in.\n6. You now have access to ████████.mil\n\n## Suggested Mitigation/Remediation Actions\n\nIf this staging web application needs to be password protected, you can refer to the following AWS documentation on how to properly setup basic authentication https://docs.aws.amazon.com/speke/latest/documentation/authentication.html.\n\nResources:\nhttps://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password\n\n## Impact\n\nBy knowing the password, it is possible to understand your password policy and structure which will encourage bruteforcing and password spray attacks in your environment.",
  "weakness": {
    "id": 23,
    "name": "Use of Hard-coded Password"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 4,
  "voters": [
    "foobar7",
    "dastan_9408",
    "iamcoolcat",
    "pronightowl"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
