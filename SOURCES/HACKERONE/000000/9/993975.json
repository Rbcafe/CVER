{
  "id": 993975,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85OTM5NzU=",
  "url": "https://hackerone.com/reports/993975",
  "title": "[zenn-cli] Path traversal on Windows allows the attacker to read arbitrary .md files",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2020-09-29T11:09:14.277Z",
  "submitted_at": "2020-09-29T11:09:14.384Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ryotak",
    "url": "/ryotak",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/Nb79aqy3v6SyMh8rwZZh43cu/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-10-29T19:33:06.837Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-09-29T19:33:00.417Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary\nI would like to report path traversal in `zenn-cli`.\nIt allows the attacker to read arbitrary `.md` files.\n\n# Module\n\n**module name:** `zenn-cli`\n**version:** `0.1.39`\n**npm page:** `https://www.npmjs.com/package/zenn-cli`\n\n## Module Description\n\nManage Zenn content locally üë©‚Äçüíª\n\n## Module Stats\n\n885 weekly downloads\n\n# Vulnerability\n\n## Vulnerability Description\n\nDue to improper sanitization in [this line](https://github.com/zenn-dev/zenn-editor/blob/master/packages/zenn-cli/utils/api/articles.ts#L32), it's possible to bypass sanitization via `\\` on Windows and allows the attacker to read arbitrary `.md` file from the victim's machine.\n\n## Steps To Reproduce:\n\n1. Create test directory: `mkdir zenn-test && zenn-test`\n2. Initialize npm project: `npm init --yes`\n3. Install `zenn-cli`: `npm install zenn-cli`\n4. Initialize `zenn-cli`: `npx zenn init`\n5. Create an article: `npx zenn new:article`\n6. Start preview server: `npx zenn preview`\n7. Open http://localhost:8000 in your browser.\n8. Click an article that you created in step 5.\n9. Find the URL in the following format from the Network tab of DevTools: `http://localhost:8000/_next/data/[Random String]/articles/[Slug of an article].json`\n10. Modify the URL you found above to the following and send request: `http://localhost:8000/_next/data/[Copy the random string from step 9]/articles/%5c..%5cREADME.json`\n11. You'll receive the content of the README.md that is in outside of `articles` directory.\n\n## Patch\n```\ndiff --git a/packages/zenn-cli/utils/api/articles.ts b/packages/zenn-cli/utils/api/articles.ts\nindex 294e7f3..06bfc7f 100644\n--- a/packages/zenn-cli/utils/api/articles.ts\n+++ b/packages/zenn-cli/utils/api/articles.ts\n@@ -29,7 +29,7 @@ export function getArticleBySlug(\n ): Article {\n   const fullPath = path.join(\n     articlesDirectory,\n-    `${slug.replace(/\\//g, \"\")}.md` // Prevent directory traversal\n+    `${slug.replace(/[/\\\\]/g, \"\")}.md` // Prevent directory traversal\n   );\n   let fileRaw;\n   try {\ndiff --git a/packages/zenn-cli/utils/api/books.ts b/packages/zenn-cli/utils/api/books.ts\nindex 25dca4c..b63ec70 100644\n--- a/packages/zenn-cli/utils/api/books.ts\n+++ b/packages/zenn-cli/utils/api/books.ts\n@@ -89,7 +89,7 @@ function getCoverDataUrl(fullDirPath: string): string | null {\n }\n \n export function getBookBySlug(slug: string, fields?: null | string[]): Book {\n-  const fullDirPath = path.join(booksDirectory, slug.replace(/\\//g, \"\")); // Prevent directory traversal\n+  const fullDirPath = path.join(booksDirectory, slug.replace(/[/\\\\]/g, \"\")); // Prevent directory traversal\n   const data = getConfigYamlData(fullDirPath);\n   if (!data) return null;\n \ndiff --git a/packages/zenn-cli/utils/api/chapters.ts b/packages/zenn-cli/utils/api/chapters.ts\nindex 91d878f..ae97ef6 100644\n--- a/packages/zenn-cli/utils/api/chapters.ts\n+++ b/packages/zenn-cli/utils/api/chapters.ts\n@@ -44,8 +44,8 @@ export function getChapter(\n   fields?: null | string[]\n ): Chapter {\n   const fullPath = path.join(\n-    getBookDirPath(bookSlug.replace(/\\//g, \"\")), // Prevent directory traversal\n-    `${position.replace(/\\//g, \"\")}.md`\n+    getBookDirPath(bookSlug.replace(/[/\\\\]/g, \"\")), // Prevent directory traversal\n+    `${position.replace(/[/\\\\]/g, \"\")}.md`\n   );\n   let fileRaw;\n   try {\n\n```\n\n\n## Supporting Material/References:\n\n{F1007381}\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N \n- I opened an issue in the related repository: N\n\n## Impact\n\nIt's possible to read arbitrary `.md` files from the victim's machine while the victim is running `zenn-cli`'s preview server.",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 1007366,
      "file_name": "fix.patch",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/cJokkD3Ve18W113GEMzgoPyv?response-content-disposition=attachment%3B%20filename%3D%22fix.patch%22%3B%20filename%2A%3DUTF-8%27%27fix.patch&response-content-type=text%2Fx-patch&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3I276FVZ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T135557Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBR%2Fcj4He1YNoxuqlCR8y8rqIukyINMyDPuGH4bBYx6SAiEA9rxAEFgc%2FY9ADMxq89WI%2F4YUHMXyjEPxPzJLolchOMcqsgUIdhADGgwwMTM2MTkyNzQ4NDkiDFBjNDAnQ2OT9fFEUCqPBdD%2BXXWBgaRxNEUUo6cEeoytD1eXvhIsF8BkIAolofhhkKHa%2FJ9rh00ejh6T8IepmFmzqyDA1to2vDIum2KthQ0U6K%2Fq21GMCUMZo7xXkyphPeZxTlJE8cbrBa9V7531H4caFbz7tu71hUjruj7poNeDwa5J2XkqEShNg6VTkYFYqW2p508BdQAm0fm%2BJSHq3faBYzcdc%2BIdgG0f6PUjEYh8ysP11Ro09SiXv3N3T6DptjJHKSv7KUv%2FZb54m8zxj0ho7JBJGg0PnntZNlzuUrPyB5o8m6NghY%2FGYTA8AM56YwOqBpjHb6CnraAhdaDe1bVoMVPvNpaoYIcwcd4aA5uVq%2F%2BMEFbgRAsaOaZwmVbJkgiy2He0wZ1y%2Bi038Z1fvfDUbGHaWHIvakM7EmAYLWhUjnVli%2B3NqZponfkOVtoUKkcIkHv%2FMcMGpAcK0LuL5c2PBD0kic3yPmgcNitophPyXa55qvUBwb0m1aYQTwhCX70%2B1MuBBNqQvAsVUygdhbSZflPVFLVYXYCw10pZBosqrbt33MeOhLAD8A8FNaf8XnRxoIDh3nC1b6UKs2zWAsQPsE7gNEmhUsXIocoqXYlZh%2FQZSSdnGUabitNEws3%2FzTErmpCZuC2pr4nC5OCy4AoCpAKYzhiaBnVjXyi1NhUFfB7kXutS3csu0Lk3ScNHi9nlMRK%2FSHZ%2BmmfQUxKvkUG6N76Rrx09p1D%2Brasm6BwCfo%2FSw7hRWxvXSZbCwxc3do9Mpm9IRFA7fgftyitVAMxs%2B8%2FYuoPx7yvUxg0bClyQ192xRI2lA%2B2Re%2FTICR8V2PH0zUKh00J8XQvEL4nx0dQPY1eX5ebqa0OrnmqUj5MM0BpBxhDPhte4fVZA92wwkMCtrgY6sQESsP34nDSGQ6%2FMJpkkUSZiwSB%2F4jJvcrOQGDnz8fYink0yrV9jUVthg%2F0T80d3eDYEK8OVRR2nDjVCUQg3IxtCiugMaPpFUdgVHqXf%2FGpaDapO5M8KW58NB4nk4LoOYgrk9ZTwWMl3jVREWlQWgRKb1D2x8jgp12%2B72xMOnvcfsjT5bTR2OBDEBsh2BamCCdP1z2L0lwJwCGwomgMutcDqcL1aIj%2F%2Fac5TUFnKnI3315E%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9f50fbb6f88be142f90c7d9eaa38aa60ce351173f5fb83042c256784d677dcdf",
      "file_size": 1787,
      "type": "text/x-patch",
      "moderated": null
    },
    {
      "id": 1007381,
      "file_name": "zenn.mp4",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/wq5KEf3sk6koqZ8xxHfgFHi7?response-content-disposition=attachment%3B%20filename%3D%22zenn.mp4%22%3B%20filename%2A%3DUTF-8%27%27zenn.mp4&response-content-type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3I276FVZ%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T135557Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBR%2Fcj4He1YNoxuqlCR8y8rqIukyINMyDPuGH4bBYx6SAiEA9rxAEFgc%2FY9ADMxq89WI%2F4YUHMXyjEPxPzJLolchOMcqsgUIdhADGgwwMTM2MTkyNzQ4NDkiDFBjNDAnQ2OT9fFEUCqPBdD%2BXXWBgaRxNEUUo6cEeoytD1eXvhIsF8BkIAolofhhkKHa%2FJ9rh00ejh6T8IepmFmzqyDA1to2vDIum2KthQ0U6K%2Fq21GMCUMZo7xXkyphPeZxTlJE8cbrBa9V7531H4caFbz7tu71hUjruj7poNeDwa5J2XkqEShNg6VTkYFYqW2p508BdQAm0fm%2BJSHq3faBYzcdc%2BIdgG0f6PUjEYh8ysP11Ro09SiXv3N3T6DptjJHKSv7KUv%2FZb54m8zxj0ho7JBJGg0PnntZNlzuUrPyB5o8m6NghY%2FGYTA8AM56YwOqBpjHb6CnraAhdaDe1bVoMVPvNpaoYIcwcd4aA5uVq%2F%2BMEFbgRAsaOaZwmVbJkgiy2He0wZ1y%2Bi038Z1fvfDUbGHaWHIvakM7EmAYLWhUjnVli%2B3NqZponfkOVtoUKkcIkHv%2FMcMGpAcK0LuL5c2PBD0kic3yPmgcNitophPyXa55qvUBwb0m1aYQTwhCX70%2B1MuBBNqQvAsVUygdhbSZflPVFLVYXYCw10pZBosqrbt33MeOhLAD8A8FNaf8XnRxoIDh3nC1b6UKs2zWAsQPsE7gNEmhUsXIocoqXYlZh%2FQZSSdnGUabitNEws3%2FzTErmpCZuC2pr4nC5OCy4AoCpAKYzhiaBnVjXyi1NhUFfB7kXutS3csu0Lk3ScNHi9nlMRK%2FSHZ%2BmmfQUxKvkUG6N76Rrx09p1D%2Brasm6BwCfo%2FSw7hRWxvXSZbCwxc3do9Mpm9IRFA7fgftyitVAMxs%2B8%2FYuoPx7yvUxg0bClyQ192xRI2lA%2B2Re%2FTICR8V2PH0zUKh00J8XQvEL4nx0dQPY1eX5ebqa0OrnmqUj5MM0BpBxhDPhte4fVZA92wwkMCtrgY6sQESsP34nDSGQ6%2FMJpkkUSZiwSB%2F4jJvcrOQGDnz8fYink0yrV9jUVthg%2F0T80d3eDYEK8OVRR2nDjVCUQg3IxtCiugMaPpFUdgVHqXf%2FGpaDapO5M8KW58NB4nk4LoOYgrk9ZTwWMl3jVREWlQWgRKb1D2x8jgp12%2B72xMOnvcfsjT5bTR2OBDEBsh2BamCCdP1z2L0lwJwCGwomgMutcDqcL1aIj%2F%2Fac5TUFnKnI3315E%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1e41a6a48b902292afdfb35e6bde2bee69a7633c4785a62946c34fd46e4ab9d8",
      "file_size": 12704649,
      "type": "video/mp4",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2020-10-29T19:33:00.577Z",
  "allow_singular_disclosure_after": -103832577.38280599,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "gr4nd_m4st3r"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
