{
  "id": 369185,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNjkxODU=",
  "url": "https://hackerone.com/reports/369185",
  "title": "Unsafe handling of protocol handlers",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2018-06-20T14:09:09.983Z",
  "submitted_at": "2018-06-20T14:09:09.983Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "metnew",
    "url": "/metnew",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/038/544/baa5f77ccb2413a76bf96b3253ba88024ab50a33_original.jpeg/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15688,
    "url": "https://hackerone.com/brave",
    "handle": "brave",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/688/2aad5641af643ee4f4402896e4747293f6e9c5ca_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/688/2aad5641af643ee4f4402896e4747293f6e9c5ca_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Brave Software",
      "twitter_handle": "brave",
      "website": "https://brave.com",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2018-09-24T23:36:53.728Z",
  "bug_reporter_agreed_on_going_public_at": "2018-09-19T16:21:31.369Z",
  "team_member_agreed_on_going_public_at": "2018-09-24T23:36:53.613Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\n\nBrave browser (macOS) handles protocol handlers in unsafe way (and differently from other browsers).\nKey differences between protocol handlers handling in Brave and other browsers:\n\n### Open external app vs Open \"Terminal\" \n\nBrave only asks about opening external app. \nOther browsers (e.g. Chrome) asks about opening a specific app. \n\nTry to open a `ssh://` link in Chrome: browser opens a popup with a question similar to \"Do you want to open \"Terminal\"?\" \n\nOpening `ssh://` in Brave results in a popup with a content similar to : \"Do you want to open external app for ssh://\"\n\n> Sorry, I didn't remember actual popups' content + I've got RU version\n\n#### Impact\n\nUser doesn't know which app will be opened after allowing to open an external app.\nThat means it easier for attacker to trick user to open an external app in Brave compared to other browsers.\n\nThis applies to all protocol handlers in Brave browser, not only `ssh://` or `telnet://`.\n\n### ssh:// and telnet:// without confirmation\n\nIn Chrome/Safari/FF, after opening Terminal using `ssh://` link, Terminal shows an alert with a text similar to \"Do you want to initiate ssh session with **example.com*?\".\n\nNext things worth noting:\n1. There is an additional confirmation dialog in Terminal while navigating to ssh:// through browser.\n1. Default answer in the confirmation dialog is negative. (\"Don't connect\")\n3. **example.com**: user sees exact host\n\nBrave browser initiates `ssh://` and `telnet://` sessions automatically after opening the external app (Terminal) without confirmation messages.\n\nIf browser handles `ssh://` URLs  by default, any iframe with `src=\"ssh://example.com\"` could automatically start ssh session without user's interaction.  Additionally, it's possible to silently initiate ssh connection, by running `alert()` on `window.onblur` event - Terminal isn't visible in this case.\n\nSame applies to `telnet://` too.\n\n## Version:\nBrave\t0.22.810\nV8\t6.7.288.43\nrev\t8f30eeb\nMuon\t7.0.6\nOS Release\t17.6.0\nUpdate Channel\tRelease\nOS Architecture\tx64\nOS Platform\tmacOS\nNode.js\t7.9.0\nBrave Sync\tv1.4.2\nlibchromiumcontent\t67.0.3396.71\n\n## Steps To Reproduce:\n\n1. Open exploit.html\n2. Click `ssh://google.com` link\n3. Allow opening an external app\n4. Terminal launched without additional alerts/warnings\n\n1. Open `exploit.html`\n2. Click `ssh://google.com` link\n3. Remember `ssh://` (set as default handler)\n4. Add iframe <-- Any iframe could automatically trigger ssh connection without confirmation\n\n## Impact\n\n1. No confirmation message for external apps. - definitely bad behavior. Brave handles all protocol handlers in this way, not only `ssh://` || `telnet://`\n\n2. SSH connection without confirmation - ssh sessions leak important user info: IP, username, etc. Also, it opens a wider attack surface.\n\n3. If `ssh://` is allowed to open by default (i.e. \"remembered\"): Any iframe could automatically trigger ssh session. It's possible to start ssh session without user's notice by calling `alert()` after navigation to `ssh://`\n\n4. Terminal doesn't alert hostname in confirmation dialog (because of no confirmation dialog), so it's possible to spoof host to which user connects. \n\nExample/Attack scenario for #4:\n1. link points to `ssh://abc.xyz` and the text of the link is \"Connect to google.com\". \n2. User clicks and initiates connection to abc.xyz. \n3. In most cases host will be visible in terminal tab's header. However, because ssh command isn't printed in terminal output while navigating through `ssh://` URLs, it's ease to not notice real host name and continue treat it as `google.com`.",
  "bounty_amount": "50.0",
  "formatted_bounty": "$50",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 310762,
      "file_name": "exploit.html",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/310/762/3d1fe029b56ac2867592af33f20339ea2d9b4764/exploit.html?response-content-disposition=attachment%3B%20filename%3D%22exploit.html%22%3B%20filename%2A%3DUTF-8%27%27exploit.html&response-content-type=application%2Foctet-stream&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTUOKVM5L%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T130620Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD%2Bt0omVOHrZ9OL9Trk%2BdFKhBv%2FQrKC65W11rjrMgC%2F6QIhANia%2FTyBcfeu0XFctw1a%2FJDDLBAa34%2BWU%2F53rhxkz%2BKhKrEFCHUQAxoMMDEzNjE5Mjc0ODQ5IgxUKMbWt1VTh5nJA5MqjgWpIiqILEweaNhgRF6m1s3guYn11lerqJNrnFjeROxUEJywbXRrt%2FcAshROQMcI4IP1FF5kzaP6N8mOGtMrRL%2FiPu4S3YpijdtIekdCS1Sn6Snt4Sh4hrILW%2Bb8ze6H%2F8%2BUjG3tsefJ2i7e6RAZ95Jy%2FsR7Gyo717mGo8tT2xBovHwjfmR5eCTxEwySxWEQvCnkU8sWiVU4TVsVyZojCQaslBXYJlwFTmuq95Ka7nfTvMgKz2HKR%2BHa7dIsA2obOMA1gq914%2BAgrDq45xv0U8MzkvK2tpK9dfMSBVfPWAFHxIt5sREveo4mZ2nlBAm%2BX77TaBAPdROjeHNp2e8Y8GU73sHmCxPEQ6RVEBNo1Cpqin5nayoOUqgSikVBZNppJWCf78ZqDFx6xAksvybCUspLPt8UiXeCwawB4vSOwq1RhpGympS%2F4X%2BAfeB4Och%2Bx%2BOR8nKDDKe3Y%2BeIUIzmLq7R63lPB%2BEoYre1R8%2Bf%2F%2BYGK3IVaxII1oWPg4zPRX6SOnrZtXGjWyAfZ%2F6lNEUsc6rYsPzapeuVSlq%2FRTHQ%2BbWGOkn3wxqxzOCLbZSltQ7LZsPVDrrri2fFwWrFwoheZZCDY0vSRv08hDQ%2Fkq3xDInCDWZMeu%2FK40kiRmv6ehFATji5N1OJbLemuPO%2BTwvrdcBn9fQS4BkDMFIrGhE%2FuOwv61gkyL1fOapjm3KOWa8BmzAuFidAmAy%2BVnosQJMh3ckcvSXiD8sLINTU%2FbSsdV7beCmMpyf6fP3p%2F7VcwiGBABGo294shnTdhd2P0IxsSt7anyRTek2yB5NqzUYBr8WXNft2l3V3HTxgS9tRQXGp0RJdLlzDT1qxWJvF2JoUm4vQH5Pwhirc51bptu0N99Iwn6%2BtrgY6sAElrGju%2FXz82pDWWGfZvz6UL%2Fm95ZWtM25B7Ca5iNmiTQUqK%2BPhqtvh3TLN14mj%2BOXWFTSoPWS4IHLzNFsgx2J0aY83%2FElbkWzC43VwT7caBSFcI5aYu4krRCov2TutbftS11vV1dOme5hlM9%2Bf%2FlUY4xpo4dgVYdlW83DxHU%2BAO74ifhWVTZa4oAIO7OK8ImejZkl87d9LyTXqXHcY75D4o2LMg4shUYHjgRj5VB%2BvcA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=fdab0bbd0bff804cdc1b204cf32ad883f0374e0589b4367694ba768a29b65926",
      "file_size": 537,
      "type": "text/html",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": null,
  "vote_count": 11,
  "voters": [
    "sameerphad72",
    "bl4de",
    "ali",
    "metnew",
    "eveeez",
    "japz",
    "cryptographer",
    "0x08",
    "upender-33",
    "jatacheers",
    "and 1 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 3.1,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 7933,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/brave/browser-laptop",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
