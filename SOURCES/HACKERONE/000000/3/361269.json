{
  "id": 361269,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNjEyNjk=",
  "url": "https://hackerone.com/reports/361269",
  "title": "Trusted daemon check fails when proxied through torsocks or proxychains",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2018-06-03T08:02:27.484Z",
  "submitted_at": "2018-06-03T08:02:27.484Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "equim",
    "url": "/equim",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/286/653/5962c47bc45ce4c12f14ae064d9f0553609ae1a0_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 7731,
    "url": "https://hackerone.com/monero",
    "handle": "monero",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/007/731/55634f7fcd917725c7a5771cc6e7c9b4d5fe0c22_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Monero",
      "twitter_handle": "monero",
      "website": "https://getmonero.org",
      "about": " Monero: the secure, private, untraceable cryptocurrency"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-08-02T00:26:29.075Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-07-06T07:17:35.705Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\nIf torsocks(1) or proxychains(1) is enforced when using Monero wallet with a remote node without explicit `--untrusted-daemon` arguments given, the application will assume the daemon is trusted.\n\n**Description:**\nBy default, the wallet checks if the daemon address can be trusted by calling `tools::is_local_address` when `--trust-daemon` is not set. However, if the process is proxied through torsocks(1) or proxychains(1), which resolves onion addresses into a loopback address that is handled by them internally, `is_local_address` will return `true` on such address, while the actual node should be considered untrusted.\n\nThis issue may sound trivial and I also noticed a new argument `--untrusted-daemon` has been added in commit [c4907d24cb32129ee52a53711547c5d54960c431](https://github.com/monero-project/monero/commit/c4907d24cb32129ee52a53711547c5d54960c431), but not all users using a remote node with torsocks or proxychains are aware of this. Essentially, we can't really tell if the address is really local, and current judgement of it doesn't make a sufficient condition that the daemon can be trusted.\n\n## Releases Affected:\n* Monero CLI wallet (@master)\n* Monero GUI wallet (@master)\n\n## Steps To Reproduce:\n1. Run the CLI wallet with `torsocks monero-wallet-cli --daemon-address zdhkwneu7lfaum2p.onion:18099`\n1. Authenticate the wallet and sync.\n1. Send command `rescan_bc`, which should be available only if the daemon is trusted.\n1. The command executed successfully.\n\n## Supporting Material/References:\nNone\n\n## Possible Solutions:\n1. Add an extra condition in src/common/util.cpp function is_local_address to judge if the daemon address ends with .onion or .i2p etc..\n1. Prompt the user explicitly if the daemon can be trusted.\n\n## Impact\n\nPossible private data disclosure to the untrusted remote node.",
  "weakness": {
    "id": 46,
    "name": "Privacy Violation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-08-05T07:17:35.782Z",
  "allow_singular_disclosure_after": -174376070.3220934,
  "singular_disclosure_allowed": true,
  "vote_count": 6,
  "voters": [
    "r3y",
    "eveeez",
    "cryptographer",
    "equim",
    "arham-siddiqui",
    "gwedd"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
