{
  "id": 273726,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzM3MjY=",
  "url": "https://hackerone.com/reports/273726",
  "title": "Information / sensitive data disclosure on some endpoints",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2017-10-02T09:31:58.011Z",
  "submitted_at": "2017-10-02T09:31:58.011Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "europa",
    "url": "/europa",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/yLAfkbEdjS5TTkov1RViumZ4/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 55,
    "url": "https://hackerone.com/wordpress",
    "handle": "wordpress",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/055/f114d1d31f904e3b903cd99a6cf566bb531f8401_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "WordPress",
      "twitter_handle": "wordpress",
      "website": "https://wordpress.org/",
      "about": "Beautiful sites of any kind."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-08-22T14:39:06.155Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2018-07-23T14:38:52.462Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello team!\nWhile doing a preliminary recon on *.wordpress.org I've come across a few sensitive files that should not be facing the public web; I'll leave you a list organized by criticality and some proof.\n\n\n### High priority\n[.travis.yml](https://codex.wordpress.org/.travis.yml) configuration file with credentials\n```\nphp maintenance/install.php testwiki admin\n--pass travis\n--dbname traviswiki\n--dbuser travis\n--dbpass \"\"\n--scriptpath \"/w\"\n```\n\n\n### Medium priority\n[.htaccess](https://munin-lax.wordpress.org/.htaccess) file for **munin-lax.wordpress.org**\n```\nAuthUserFile /usr/local/etc/munin-htpasswd\nAuthName \"Munin\"\nAuthType Basic\nrequire valid-user\n```\n\n### Low priority\none `.bash_history` file accessible from multiple production vhosts:\n```\nhttp://iphone.git.wordpress.org/.bash_history\nhttp://meta.git.wordpress.org/.bash_history\nhttp://wordpress.git.wordpress.org/.bash_history\nhttp://bbpress.git.wordpress.org/.bash_history\nhttp://buddypress.git.wordpress.org/.bash_history\nhttp://core.git.wordpress.org/.bash_history\nhttp://android.git.wordpress.org/.bash_history\nhttp://ios.git.wordpress.org/.bash_history\nhttp://wordcamp.git.wordpress.org/.bash_history\nhttp://develop.git.wordpress.org/.bash_history\nhttp://evelop.git.wordpress.org/.bash_history\n```\n\none ssh `known_hosts` file accessible from multiple production vhosts:\n```\nhttp://wordcamp.git.wordpress.org/.ssh/known_hosts\nhttp://ios.git.wordpress.org/.ssh/known_hosts\nhttp://android.git.wordpress.org/.ssh/known_hosts\nhttp://core.git.wordpress.org/.ssh/known_hosts\nhttp://buddypress.git.wordpress.org/.ssh/known_hosts\nhttp://bbpress.git.wordpress.org/.ssh/known_hosts\nhttp://wordpress.git.wordpress.org/.ssh/known_hosts\nhttp://meta.git.wordpress.org/.ssh/known_hosts\nhttp://iphone.git.wordpress.org/.ssh/known_hosts\nhttp://develop.git.wordpress.org/.ssh/known_hosts\nhttp://evelop.git.wordpress.org/.ssh/known_hosts\n```\n\n\n### Impact\nObviously there's no critical priority here—there could've been juicer stuff in the `.bash_history` but there wasn't; the publicly accessible `.htaccess` and `.travis.yml` might be serious as long as those credentials are really being used somewhere (and it seems to me the DBMS isn't facing the public internet anyway). The real impact is that finding such files always grabs the attention of a threat actor, which might give up not so easily influenced by the fact that there might be \"more\".\n\n\n### (minor) bonus round: host header injection on wordpress.org\nProbably *informational* but you might still want to look into that: **wordpress.org** is susceptible to \"host header injection\", you can read more about it [here](http://carlos.bueno.org/2008/06/host-header-injection.html) and [here](http://www.skeletonscribe.net/2013/05/practical-http-host-header-attacks.html). Essentially, depending on your internal configuration, this flaw ranges from a self-inflicted open-redirect (wow, such threat), to password reset request hijack, to cache poisoning.\n\n**PoC for the self-inflicted open-redirect (why though)**:\n\n```\n❯ curl -v -H \"Host: z.xss.ro\" \"https://wordpress.org/themes/search\"\n> GET /themes/search HTTP/2\n> Host: z.xss.ro\n> User-Agent: curl/7.55.1\n> Accept: */*\n> \n< HTTP/2 301 \n< server: nginx\n< date: Mon, 02 Oct 2017 09:12:59 GMT\n< content-type: text/html\n< content-length: 178\n< location: https://z.xss.ro/themes/search/\n< x-frame-options: SAMEORIGIN\n< x-nc: MISS lax 250\n< \n<html>\n<head><title>301 Moved Permanently</title></head>\n```\nthis is also going down on plain HTTP so maybe a MitM scenario is possible in an already compromised business environment / hosting partner but then again, it's pretty low priority.\n\nI obviously can't test the password reset scenario, you might want to test that as follows:\n\n1. go to wordpress.org and begin the procedure to reset your password\n2. intercept the request on Burp\n3. change the host header to evil.com\n4. send the request and check your e-mail\n\nif the threat is real, the password reset link will be generated with evil.com instead of wordpress.org; otherwise it's all good (which should be, as this doesn't work on wordpress.com)",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-08-22T14:38:52.567Z",
  "allow_singular_disclosure_after": -172879958.347845,
  "singular_disclosure_allowed": true,
  "vote_count": 29,
  "voters": [
    "jensec",
    "p1stachios",
    "europa",
    "sameerphad72",
    "spam404",
    "ali",
    "aryan2808",
    "emitrani",
    "chinskiy",
    "savitar0x01",
    "and 19 more..."
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
