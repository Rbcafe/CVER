{
  "id": 246794,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNDY3OTQ=",
  "url": "https://hackerone.com/reports/246794",
  "title": "XSS on \"widgets.shopifyapps.com\" via \"stripping\" attribute and \"shop\" parameter",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "none",
  "readable_substate": "Resolved",
  "created_at": "2017-07-07T07:06:08.957Z",
  "submitted_at": "2017-07-07T07:06:08.957Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "bored-engineer",
    "url": "/bored-engineer",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/xh0k94drzpd2d2z4bz9b1kbzngbh/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c?response-content-disposition=inline%3B%20filename%3D%22IMG_0330%20%25281%2529.jpg%22%3B%20filename%2A%3DUTF-8%27%27IMG_0330%2520%25281%2529.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYNWCPB7L%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T124552Z&X-Amz-Expires=2000&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDbZonlQ6XZgqcJy52%2BgLeu7rc%2BcmnwL48Jd3jP8q5%2FnAIgBqR93Cql4TkH3OcEpzuPURjNMviKVAaN%2BZ5EJ93CKHMqsQUIcBADGgwwMTM2MTkyNzQ4NDkiDC6ruR9Bo4NPZ6hGziqOBTlv9ZKHmz6ju1OkdxDfdYMkEOLdYBFwxFeSW3uoBTkUPGqDZadsGRlOm%2FzVtXFfSNIYP7AeaBzFIeS8LcBh%2BgxgmY5hETW2LeYwB%2F3XW2H67p6e7bnzldnlj2tuACFxnKA6rcmcUQTXn4qVKPw%2FsgBonpbjVSLH1G3MhuwcdUrgeFjI7JHFzHMgd7%2BYjdjZMeFC5A7DM0sT8KjQAqMCvmyYUuytyZlFtZt%2BmkPDyj8xPC2BnGzGd8ViwG0oSBCmgyULo8%2BibDGvrMmOjHPDqqUa51uudsuIw3xXCU7yEl54SJO8XPwko%2FUDfNLlPnB%2BsrExqEFkzOUbRn8wytJZJbdlm4PKX7p1sguljWzLGzMthBAcUaMx563jGqM6UBzNW8J7ZvQGt%2B1a3uE51BbOuuys1pnhOCpDb5JVA%2F%2FnzxJBkW450qNxs7qEyti1abXcL80lTaRmG99RCoVXy4Z1np7gmDfekfXlXCBl86B94t2Ng9rjTnc7plMi%2BnjT5NpYRtvlD1UpwqSlpHw2LxzvZHpnEAjgW8aVgyKPoE6tQwMw2sgb02Lt0IOaTIVI9DmdZbb5FIIz5u0W7gGoxWgQ5yaRk5osuY5nK4GSs4uwAAb6e9hPfxePBU%2B3OK%2BLDM2L0ULVBqQLonfTFD4q0hygJNmtMZ93jUiC1uw5seAKU9RQaFXprCUTfTFtdiGuqhtRvHnqNI2%2BYtGwEaoPk45%2FBZHKWdUiA6zzx2Vh1ViwuP2bYU1TfleKuf4XSDTRnsL25sxpXHdWEdzp36j4m8m4N7y9V%2BDLGJL0W5laKN4XaBIRNCwRfNALochyxg%2FRqoYPvilO9klb%2Fo58doCSMcQFz%2B2dImB8vsUlC4TfkCpPPjC7payuBjqxAUz7jVGh5dF5HDYPCV1aK6vLNtHQn48iZT2lveCprzWjOASVNejwySv8S0Qz3%2BorxxSB4hGPZkqz36geF8d9lQ8aLh18bVe6qUL5yM5i2yxVkHovo80Uf9FwD0IrvwxhBv2vzB%2BEuch1dctBkoyLtJS470n%2BuD%2F%2BwCLVUXoH1ljlX3lPqEb2nvs0Eo4v6pGR4x8y4bHoxAxkfJRPNJ4ut4mAE9vidBtOStAITUN8HDLywA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=01c83c9bb03b9ff9c369ec67c17c885fadffe98be4bf4df5c848a6a868c8cd35"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1382,
    "url": "https://hackerone.com/shopify",
    "handle": "shopify",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/fjjiC5585s8WoDGHv2M5okbJ/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Shopify",
      "twitter_handle": "",
      "website": "https://www.shopify.com",
      "about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2018-04-03T19:44:37.398Z",
  "bug_reporter_agreed_on_going_public_at": "2018-04-03T19:44:37.271Z",
  "team_member_agreed_on_going_public_at": "2018-04-03T18:12:57.907Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "# Description\nShopify allows developers to embed widgets (containing product info) on third-party websites via \"widgets.shopifyapps.com\". When the widget is rendered the `shop` attribute is not filtered allowing any website (not just Shopify shops) to be specified. By providing an attacker controlled domain and serving a specially crafted payload containing the `stripping` object attribute HTML escaping will be disabled resulting in XSS on \"widgets.shopifyapps.com\".\n\n# Technical Details\nThis issue occurs in [/assets/widgets/product/application.js](https://widgets.shopifyapps.com/assets/widgets/product/application.js). The `Framework.Models.Collection` class (used for fetching collections of objects) defines a special `parse` method which automatically escapes all strings. This escaping is provided by `Framework.Helpers.stripHTMLForObject` which looks like this (prettified):\n```js\nFramework.Helpers.stripHTMLForObject = function(obj) {\n  obj.stripping = true;\n  var idx, val;\n  for (idx in obj) {\n    if (obj.hasOwnProperty(idx)) {\n      var val = obj[inx]\n      if(\"string\" == typeof val) {\n        obj[idx] = Framework.Helpers.stripHTML(val) \n      } else {\n        if(null != val && \"object\" == typeof val && null == val.stripping) {\n          obj[idx] = this.stripHTMLForObject(val)\n        }\n     }\n   }\n   delete obj.stripping;\n   return obj;\n}\n``` \nThe `Framework.Helpers.stripHTML` function seems to be a implementation of the [Caja compiler](https://developers.google.com/caja/) which we can assume is safe, however by crafting a object with a `stripping` attribute HTML escaping will be disabled. An example product would look like this:\n```json\n{\n\t\"product\": {\n\t\t\"variants\": [{\n\t\t\t\"stripping\": false,\n\t\t\t\"title\": \"<option/><select/><img src=xx: onerror=alert('bored-engineer')>\"\n\t\t}, {}],\n\t\t\"options\": [],\n\t\t\"images\": [{}],\n\t\t\"image\": {}\n\t}\n}\n```\nI've hosted this file (and the other required `meta.json` file) on [attackerdoma.in](https://attackerdoma.in).\n\n# Proof of Concept\nOpen [widgets.shopifyapps.com/products/stripping-xss?shop=attackerdoma.in](https://widgets.shopifyapps.com/products/stripping-xss?shop=attackerdoma.in)\n\n# Exploitability\nOnce you locate the escaping issue it's relatively trivial to exploit and requires to user interaction as shown in the PoC.\n\n# Remediation\nThe application should not allow shops/servers to disable HTML escaping via the `stripping` attribute.",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 63,
    "name": "Cross-site Scripting (XSS) - DOM"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 31,
  "voters": [
    "jokebookservice1",
    "smither",
    "drsniper",
    "sp1d3rs",
    "riramar",
    "bl4de",
    "ta8ahi",
    "thisishrsh",
    "savitar0x01",
    "apapedulimu",
    "and 21 more..."
  ],
  "severity": {
    "rating": "none",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 10803,
    "asset_type": "OTHER",
    "asset_identifier": "Other",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
