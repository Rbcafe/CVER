{
  "id": 272979,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNzI5Nzk=",
  "url": "https://hackerone.com/reports/272979",
  "title": "2 vulnerabilities of arbitrary code in ████████  - CVE-2017-5929",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2017-09-29T13:32:55.299Z",
  "submitted_at": "2017-09-29T13:32:55.299Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ruffdraft",
    "url": "/ruffdraft",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2017-5929"
  ],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2019-10-08T18:40:54.565Z",
  "bug_reporter_agreed_on_going_public_at": "2017-10-18T17:57:30.048Z",
  "team_member_agreed_on_going_public_at": "2019-10-08T18:40:54.445Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\nGitHub repo: https://github.com/████████\n\nQOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components. \n\nHigh Severity\nArbitrary Code Execution\nVulnerable module: ch.qos.logback:logback-core \nIntroduced through: com.github.dblock.waffle:waffle-distro@1.8.1 \nDetailed paths\nIntroduced through: ███@█████████#a746bb4ecce1cb252a301c08be0daffa480c9747 › com.github.dblock.waffle:waffle-distro@1.8.1 › ch.qos.logback:logback-core@1.1.3\nIntroduced through: ██████@███#a746bb4ecce1cb252a301c08be0daffa480c9747 › com.github.dblock.waffle:waffle-distro@1.8.1 › ch.qos.logback:logback-classic@1.1.3 › ch.qos.logback:logback-core@1.1.3\n\nand\n\nHigh Severity\nArbitrary Code Execution\nVulnerable module: ch.qos.logback:logback-classic \nIntroduced through: com.github.dblock.waffle:waffle-distro@1.8.1 \nDetailed paths\nIntroduced through: ████@█████#a746bb4ecce1cb252a301c08be0daffa480c9747 › com.github.dblock.waffle:waffle-distro@1.8.1 › ch.qos.logback:logback-classic@1.1.3\n\n\n**Description:**\nch.qos.logback:logback-core and ch.qos.logback:logback-classic  Affected versions of this package are vulnerable Arbitrary Code Execution. A configuration can be turned on to allow remote logging through interfaces that accept untrusted serialized data. Authenticated attackers on the adjacent network can exploit this vulnerability to run arbitrary code through the deserialization of custom gadget chains.\n\n## Impact\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like Remote Method Invocation (RMI), Java Management Extension (JMX), Java Messaging System (JMS), Action Message Format (AMF), Java Server Faces (JSF) ViewState, etc.\nDeserialization of untrusted data (CWE-502), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution. \nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a popular library (Apache Commons Collection). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n## Step-by-step Reproduction Instructions\n\n1. Run known POC CVE online\n\n## Product, Version, and Configuration (If applicable)\nch.qos.logback:logback-core@1.1.3\nch.qos.logback:logback-classic@1.1.3\n\n## Suggested Mitigation/Remediation Actions\nupdate to latest version",
  "weakness": {
    "id": 52,
    "name": "Deserialization of Untrusted Data"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 2,
  "voters": [
    "khizer47",
    "adithya_raj"
  ],
  "severity": {
    "rating": "critical",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
