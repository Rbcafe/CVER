{
  "id": 202362,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDIzNjI=",
  "url": "https://hackerone.com/reports/202362",
  "title": "Null pointer dereference in mrb_random_initialize",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "none",
  "readable_substate": "Resolved",
  "created_at": "2017-01-31T14:26:03.652Z",
  "submitted_at": "2017-01-31T14:26:03.652Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "eboda",
    "url": "/eboda",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/014/247/a6446792be4fa0fc962bcba2811ef801ddff87be_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-02-07T07:57:31.445Z",
  "bug_reporter_agreed_on_going_public_at": "2017-02-07T07:57:31.412Z",
  "team_member_agreed_on_going_public_at": "2017-02-07T01:26:18.907Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Sorry I was not quite sure about the scope. This bug is not triggerable in the sandbox, because it does not use the Random class, but it is triggerable in mruby with the following piece of code:\n\n```ruby\n$r = Random.new\na = Object.new\ndef a.to_int\n    $r.rand\nend\n\n$r.initialize a\n```\nThe data pointer of $r is set to NULL before parsing arguments in `mrb_random_init`. The srand() call will try to dereference it to get the mt_state and this results in a crash. \n\nThe problem lies in `mrbgems/mruby-random/src/random.c` and is similar to  #182274:\n```c\n128   t = (mt_state*)DATA_PTR(self);\n129   if (t) {\n130      mrb_free(mrb, t);\n131   }\n132   mrb_data_init(self, NULL, &mt_state_type);\n133   \n134   t = (mt_state *)mrb_malloc(mrb, sizeof(mt_state));\n135   t->mti = N + 1;\n136   \n137   seed = get_opt(mrb);        /* Move this up before line 127 */\n```\n\nPlease let me know if you are explicitly just looking for bugs affecting the sandbox, so I won't submit invalid reports. Thanks!",
  "bounty_amount": "100.0",
  "formatted_bounty": "$100",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-03-09T01:26:18.975Z",
  "allow_singular_disclosure_after": -218804857.26823163,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "icanthack",
    "mpz",
    "eveeez",
    "spetr0x",
    "0619"
  ],
  "severity": {
    "rating": "none",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
