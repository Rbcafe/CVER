{
  "id": 223999,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMjM5OTk=",
  "url": "https://hackerone.com/reports/223999",
  "title": "CSV export filter bypass leads to formula injection.",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2017-04-26T09:00:34.649Z",
  "submitted_at": "2017-04-26T09:00:34.649Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "edoverflow",
    "url": "/edoverflow",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/116/374/9a3cf4d62b2f507a0d33808aacbad863ec4455ac_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 19468,
    "url": "https://hackerone.com/weblate",
    "handle": "weblate",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/019/468/71eb3827ae9f2a388f27bd4b7eefd20bc3ac813c_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/019/468/71eb3827ae9f2a388f27bd4b7eefd20bc3ac813c_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Weblate",
      "twitter_handle": "WeblateOrg",
      "website": "https://weblate.org/",
      "about": "Weblate is a libre software web-based continuous localization system"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-05-17T15:19:18.397Z",
  "bug_reporter_agreed_on_going_public_at": "2017-05-17T15:19:18.359Z",
  "team_member_agreed_on_going_public_at": "2017-05-17T14:17:49.663Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Dear Weblate bug bounty team,\n\n# Summary\n---\n\nThe [new filter](https://github.com/WeblateOrg/weblate/commit/1216f65655ca4b3f32b9d59605eb4446d503bdbf) can be bypassed using: `%0A-3+3+cmd|' /C calc'!D2`.\n\n~~~python\ntext = \"%0A-3+3+cmd|' /C calc'!D2\"\ndef csv_filter_bypass():\n    if text and text[0] in ('=', '+', '-', '@'):\n        return \"'\" + text\nreturn text\n~~~\n\n# How can this be fixed?\n---\n\nYou need to escape and detect more characters as follows:\n\n~~~python\ntext = \"%0A-3+3+cmd|' /C calc'!D2\"\ndef csv_filter_fix():\n    if text and text[0] in ('=', '+', '-', '@', '|', '%'):\n        text = text.replace(\"|\", \"\\|\")\n        return \"'\" + text + \"'\"\nreturn text\n~~~\n\nYou can compare your results with the following demonstration:\n\n~~~python\ntext = \"%0A-3+3+cmd|' /C calc'!D2\"\n\ndef csv_filter_bypass():\n    if text and text[0] in ('=', '+', '-', '@'):\n        return \"'\" + text\n    return text\n\ndef csv_filter_fix():\n    if text and text[0] in ('=', '+', '-', '@', '|', '%'):\n        text = text.replace(\"|\", \"\\|\")\n        return \"'\" + text + \"'\"\n    return text\n\ncsv_filter_bypass()\ncsv_filter_fix()\n~~~\n\nBest regards,\nEd",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-06-16T14:17:49.689Z",
  "allow_singular_disclosure_after": -210205384.1648854,
  "singular_disclosure_allowed": true,
  "vote_count": 6,
  "voters": [
    "ysx",
    "eveeez",
    "khizer47",
    "sa1tama0",
    "hacklad",
    "spetr0x"
  ],
  "severity": {
    "rating": "medium",
    "score": 5.4,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
