{
  "id": 262830,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNjI4MzA=",
  "url": "https://hackerone.com/reports/262830",
  "title": "Rate-limit protection get executed in the last stage of the registration process, allowing enumeration of existing account.",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2017-08-24T03:32:33.601Z",
  "submitted_at": "2017-08-24T03:32:33.601Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "tolo7010",
    "url": "/tolo7010",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/137/533/339f440fdc61b6dfeb663c8216d249618b8fd451_original.gif/9a55e00ecd2cdf18a7f40678e6836e4cdc90bf95eb4b50c43f5fb775da40bb65"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 2672,
    "url": "https://hackerone.com/unikrn",
    "handle": "unikrn",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/002/672/c6c2b32746235b372285a9047457642b7b9bc6a1_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/672/c6c2b32746235b372285a9047457642b7b9bc6a1_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Unikrn",
      "twitter_handle": "unikrnco",
      "website": "https://unikrn.com",
      "about": "unikrn offers a world class comprehensive esports betting platform"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-05-03T04:47:17.572Z",
  "bug_reporter_agreed_on_going_public_at": "2018-04-10T01:14:04.563Z",
  "team_member_agreed_on_going_public_at": "2018-05-03T04:47:17.434Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Summary:\n======\nThis may be low risk impact but I need to suggest on improvement on your existing rate-limit protection on the registration page, It is an easy workaround and make the current protection more secure.\n\nDescription:\n========\nUnikrn increases the registration security by requiring user to enter a secured password and providing a rate limit on registration, after several attempt the server denies over-registration by returning \"Suspicious Activity - Multiple Accounts Detected. Please contact support at support@unikrn.com with further questions\". However the rate limit get executed in the last stage of the registration process, still allows the attacker to enumerate account on this page. \n\nSteps To Reproduce:\n==============\n1. Go to https://unikrn.com/ and click \"Sign up\"\n2. Fill in the registration form\n3. Upon submitting the form, use proxy (burp) to intercept the connection and send to repeater\n\nAfter the research - except the normal successfully registration, we can categorize the server responses into 3 cases (in the following log from burp repeater):\n\nRequest/Response Case 1 - Existing email with secured password, the server returns message \"Email address already registered\":\n\n[REQUEST]:\nPOST /apiv1/register HTTP/1.1\nHost: unikrn.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0\nAccept: application/json, text/plain, */*\nAccept-Language: en-US,en;q=0.5\nReferer: https://unikrn.com/\nContent-Type: application/json\nApplication-Version: v3.8.5-28-g570b4be\nContent-Length: 161\nCookie: [Long Cookie CUT]\nConnection: close\n\n{\"email_address\":\"hackerone1@gmail.com\",\"day\":\"1\",\"month\":\"1\",\"year\":\"1999\",\"state\":null,\"password\":\"a12345678\",\"password_confirm\":\"a12345678\",\"session_id\":null}\n\n[RESPONSE]:\nHTTP/1.1 200 OK\nDate: Thu, 24 Aug 2017 02:38:22 GMT\nContent-Type: application/json\nConnection: close\nAccess-Control-Max-Age: 86400\nCache-Control: no-store, no-cache, must-revalidate\nCI: M-production C-1 V-1.2.0\nContent-Security-Policy: default-src 'none'; frame-ancestors 'none'\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\nPragma: no-cache\nSet-Cookie: CW=ghocb7rti601hf8k9valkk6r0mq2fua2; expires=Sun, 03-Sep-2017 02:38:22 GMT; Max-Age=864000; path=/; domain=.unikrn.com; secure; HttpOnly\nStrict-Transport-Security: max-age=31536000; includeSubDomains; preload\nVary: Accept-Encoding\nVary: Origin\nX-XSS-Protection: 1; mode=block\nServer: cloudflare-nginx\nCF-RAY: 3932ef5ab9ab3198-SIN\nContent-Length: 174\n\n{\"error\":true,\"success\":false,\"msg\":\"Email address already registered.\",\"msg_trans\":\"Email address already registered.\",\"data\":null,\"code\":124,\"flds\":null,\"flds_errors\":null}\n\nRequest/Response Case 2 - Non-Existence email with secured password - after several attempts the server block the registration by sending the message \"Suspicious Activity - Multiple Accounts Detected. Please contact support at support@unikrn.com with further questions\".\n\n[REQUEST - header omitted]:\n\n{\"email_address\":\"hackerone9@gmail.com\",\"day\":\"1\",\"month\":\"1\",\"year\":\"1999\",\"state\":null,\"password\":\"a12345678\",\"password_confirm\":\"a12345678\",\"session_id\":null}\n\n[RESPONSE - header omitted]:\n\n{\"success\": false, \"error\": true, \"msg\": \"Suspicious Activity - Multiple Accounts Detected. Please contact support at support@unikrn.com with further questions.\", \"msg_trans\": \"Suspicious Activity - Multiple Accounts Detected. Please contact support at support@unikrn.com with further questions.\", \"code\": 0, \"flds\": null, \"data\": null}\n\nRequest/Response Case 3 - Non Existence with unsecured password - the server returns a message \"Password must be at least 8 characters long and contain one capital letter and one number\".\n\n[REQUEST - header omitted]\n\n{\"email_address\":\"hackerone9@gmail.com\",\"day\":\"1\",\"month\":\"1\",\"year\":\"1999\",\"state\":null,\"password\":\"12345678\",\"password_confirm\":\"12345678\",\"session_id\":null}\n\n[RESPONSE - header omitted]:\n\n{\"error\":true,\"success\":false,\"msg\":\"password_invalid\",\"msg_trans\":\"Password must be at least 8 characters long and contain one capital letter and one number.\",\"data\":null,\"code\":0,\"flds\":null,\"flds_errors\":null}\n\nAnalyze the registration process:\n=====================\nAs we can see from the server response, if we provide existing email the server responses \"Case 1\", if we provide non-existence email the server responses \"Case 2\" and \"Case 3\" just by the secured password condition: if we enter secured password Case 2 will be returned, else returns Case 3. From this we can analyze the registration process as:\n1. The user fill in the form and send data to the server\n2. The server receives request from the client and do the following task in order:\n- Check if email provided already in the database, if true -> return Case 1 and end the process. (Impact: user enumeration)\n- Check if password provided are secured (one char+numbers = 8 chars min), if false -> return Case 3 and end the process. (Impact: user enumeration)\n- [Rate-limit protection] Check if the attempt count reach limit, if true -> return Case 2 and end the process. (Impact: user enumeration)\n- If the above test pass, register the new user and return successful page.\n\nRecommendation:\n============\nthe rate-limit protection must be place on the first stage of processing, this is to disable user enumeration attack:\n1. The user fill in the form and send data to the server\n2. The server receives request from the client and do the following task in order:\n- [Rate-limit protection] Check if the attempt count reach limit, if true -> return Case 2 and end the process. (No user enumeration impact: not knowing whether the email are existing or not)\n- Check if email provided already in the database, if true -> return Case 1 and end the process. \n- Check if password provided are secured (one char+numbers = 8 chars min), if false -> return Case 3 and end the process. (Impact: user enumeration)\n- If the above test pass, register the new user and return successful page.\n\nOptional improvement:\n===============\n- There is no CSRF token / Captcha in the registration page, this make the enumeration process even easier.\n\nAs I say this may be low risk, but the fix is easy and increase more security on the existing protection scheme.\n\nRegards,\nTolo",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-05-10T01:14:04.645Z",
  "allow_singular_disclosure_after": -181913678.01761404,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "tolo7010",
    "savitar0x01",
    "apapedulimu",
    "albatraoz",
    "eveeez"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 453,
    "asset_type": "URL",
    "asset_identifier": "unikrn.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
