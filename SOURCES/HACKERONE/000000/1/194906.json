{
  "id": 194906,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTQ5MDY=",
  "url": "https://hackerone.com/reports/194906",
  "title": "Heap overflow due to off-by-one when expanding stack",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-12-31T02:16:16.664Z",
  "submitted_at": "2016-12-31T02:16:16.664Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "titanous",
    "url": "/titanous",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/azjqctii9pib979n798xtmyuj8nr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22ohno.png%22%3B%20filename%2A%3DUTF-8%27%27ohno.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXONP3G7Q%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T123145Z&X-Amz-Expires=1826&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIA2ZBVtmGFXj3HuPOBAltyOYEJfYXwVkH0ySkcAGpVd4AiEA%2FDbRJn8xJyLOBOEYKm2tFe1zOLHG4xfoF6jHA4ytsPsqsQUIcBADGgwwMTM2MTkyNzQ4NDkiDCK6PxvBpzf1F5KaJiqOBemZvO%2FLscUV1ZjOsz8brbXhANz7HIMOSB2RXJXYiR%2FlB9gmsfLsQROHda4MBDaGh8OJBO0EvuRoSEg5NRIOz8nDEI9y9Egt18ofl%2By1MTr6cUhanP8Z91XoBQNxUui3l2MGIL7qsJtc9RZmcAZ4NMNu%2FqFqCNKerQ%2FCWuyHlcNW0xaEex3CRS9KjSzXDAUXUV3PabIwLr%2FdfY8gGyPcg7IL%2BzmfI8wF4j01HVVyiwcpxAzQLvkJgUuBwREtv2NEf9pTV%2BsWpyd9L6oPddt7igVKBBWBG9Mm9OtI%2Ft6Y4%2FpVY76tX5vl3VnSWfzxI02vHfG9zVB4t1jHdu6EZunMXfiLBztG2kWPDJ9LoNe%2FniKzjuWbN3pDE4AwMPJi9tB7ufm53KrUmpJ42co3PJcblQK3US7XIdJTiPTirUR1MM9r0xPFTrxP%2BSFln%2BO%2FOx9GfWCgpN5%2FFKPdVvLxco7rykVi%2B6728eCejjpZLo5098xnVTSHUUTYVpFJyXHnvzJStYRxfb4%2B6C7YzTf7lL%2Bt5EBZNRi8F307nhMp1gUrCxPLZklUdsZE3sA%2FQ5UQy4kWL%2Foj%2B5Lxy0v1TB4sgsi1IqV7IBnKQS5LBayRq%2Bs82RBkeBuKeTFJgVr%2FtfExdSBXEXWPOVjELUJL%2B3U1I%2BpS0H0DMPNNMXCDByr6oImu68vX9qBe%2BfFaDewfP5kOL%2BQxv9yny4iZ5YHS1Ajy%2FK4EIytNES7%2FPGP9h66mlZY38U8vrv0U62zbd5ScMlOR13KWedEBDcN6Gm1BBKFTFyQ5sOkpFg9UVXbjkxeuBkAHNgpWeXzPdgtc96IvyqsT%2F04KdyTv9N7jCDn1Vzvc7ltf4C9ll7UgHke80JkTVRN2bDDipayuBjqxAS00qNM1Pcd2XdxW6A3MnUgI3wydtLPBjQ8eXQLVqnaDcuKP%2BCUhIz2JrMtccLBUiViw%2FcyUzKXbLNNLYkBaDppySqWKqeNrx0Bz1GD6Jlf8aZk%2BfmjLGxSjuF%2F%2B3Da2sQ7TPrCwzDxmQK1yA6ads9rL%2BLU6oRr9JYx18RckM75gJJiJtzAYBs2Sv0yMB9rTVnZbvxiEO5rsNv0fTWwKU4c0cUND%2FMZIDiJtywrsm47IHw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d6bf818ba338548012a05eb83d46fce018da1a107ddeb1646715c9eff68a1dfc"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-02-07T01:23:21.041Z",
  "bug_reporter_agreed_on_going_public_at": "2017-02-07T01:23:21.000Z",
  "team_member_agreed_on_going_public_at": "2017-02-07T01:23:00.006Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "This program triggers a heap buffer overflow while zeroing a new stack allocation due to an off-by-one while expanding the stack. It doesn't appear to be exploitable and the fix is extremely simple so I didn't try to simplify the failing test case too much:\n\n```ruby\nclass A\nyield ensure 0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g>>=0.g\nend.g>>=g>>=s0>>=e=_=0.g>>=0>p>>=sg>>=0..0>u>>=0..0>a>>=ab|=0..0>r>>=0>e0>>=i>>=0..0>r0>>=a00>ry>>=u0>>=0..0>x>>=0.g>>=0>0|Ã¼|=0..0>r00>>=y>>=t>>=up=sy>>=s00>>=0..0>ug>>=f>>=0>0>>0.g>>=0>a0>>=0.g>>=0>s>>=0..0>0.g>>=0>0.g>>=super\n```\n\nASAN report:\n\n```text\n=================================================================\n==7397==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x621000017900 at pc 0x0000004ae8ac bp 0x7fff42c9a9d0 sp 0x7fff42c9a180\nWRITE of size 16 at 0x621000017900 thread T0\n    #0 0x4ae8ab in __asan_memcpy (/vagrant/bin/mruby+0x4ae8ab)\n    #1 0x64b513 in stack_clear /vagrant/src/vm.c:68:15\n    #2 0x64b1ea in init_new_stack_space /vagrant/src/vm.c:127:5\n    #3 0x617dc0 in stack_extend /vagrant/src/vm.c:174:3\n    #4 0x61e214 in mrb_vm_run /vagrant/src/vm.c:770:3\n    #5 0x618344 in mrb_run /vagrant/src/vm.c:2481:10\n    #6 0x647f5b in ecall /vagrant/src/vm.c:297:3\n    #7 0x62f830 in mrb_vm_exec /vagrant/src/vm.c:1561:15\n    #8 0x61e2eb in mrb_vm_run /vagrant/src/vm.c:772:10\n    #9 0x64a628 in mrb_top_run /vagrant/src/vm.c:2491:12\n    #10 0x674229 in mrb_load_exec /vagrant/mrbgems/mruby-compiler/core/parse.y:5755:7\n    #11 0x674ec5 in mrb_load_file_cxt /vagrant/mrbgems/mruby-compiler/core/parse.y:5764:10\n    #12 0x4f3af5 in main /vagrant/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:232:11\n    #13 0x7f2d32996f44 in __libc_start_main /build/eglibc-oGUzwX/eglibc-2.19/csu/libc-start.c:287\n    #14 0x41a505 in _start (/vagrant/bin/mruby+0x41a505)\n\n0x621000017900 is located 0 bytes to the right of 4096-byte region [0x621000016900,0x621000017900)\nallocated by thread T0 here:\n    #0 0x4c4c0d in realloc (/vagrant/bin/mruby+0x4c4c0d)\n    #1 0x5bfde5 in mrb_default_allocf /vagrant/src/state.c:60:12\n    #2 0x550396 in mrb_realloc_simple /vagrant/src/gc.c:201:8\n    #3 0x5509e4 in mrb_realloc /vagrant/src/gc.c:215:8\n    #4 0x64ade2 in stack_extend_alloc /vagrant/src/vm.c:155:33\n    #5 0x617db1 in stack_extend /vagrant/src/vm.c:172:5\n    #6 0x61e214 in mrb_vm_run /vagrant/src/vm.c:770:3\n    #7 0x618344 in mrb_run /vagrant/src/vm.c:2481:10\n    #8 0x647f5b in ecall /vagrant/src/vm.c:297:3\n    #9 0x62f830 in mrb_vm_exec /vagrant/src/vm.c:1561:15\n    #10 0x61e2eb in mrb_vm_run /vagrant/src/vm.c:772:10\n    #11 0x64a628 in mrb_top_run /vagrant/src/vm.c:2491:12\n    #12 0x674229 in mrb_load_exec /vagrant/mrbgems/mruby-compiler/core/parse.y:5755:7\n    #13 0x674ec5 in mrb_load_file_cxt /vagrant/mrbgems/mruby-compiler/core/parse.y:5764:10\n    #14 0x4f3af5 in main /vagrant/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:232:11\n    #15 0x7f2d32996f44 in __libc_start_main /build/eglibc-oGUzwX/eglibc-2.19/csu/libc-start.c:287\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow (/vagrant/bin/mruby+0x4ae8ab) in __asan_memcpy\nShadow bytes around the buggy address:\n  0x0c427fffaed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c427fffaee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c427fffaef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c427fffaf00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c427fffaf10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c427fffaf20:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c427fffaf30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c427fffaf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c427fffaf50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c427fffaf60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c427fffaf70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==7397==ABORTING\n```\n\nPatch:\n\n```patch\nFrom 7a197ff7c87a4c1db1a686bad49c5d42f9044c12 Mon Sep 17 00:00:00 2001\nFrom: Jonathan Rudenberg <jonathan@titanous.com>\nDate: Fri, 30 Dec 2016 21:15:23 -0500\nSubject: [PATCH] Fix off-by-one when expanding stack with keep>0\n\n---\n src/vm.c | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/src/vm.c b/src/vm.c\nindex 368b75a9..051c3b83 100644\n--- a/src/vm.c\n+++ b/src/vm.c\n@@ -124,7 +124,7 @@ init_new_stack_space(mrb_state *mrb, int room, int keep)\n {\n   if (room > keep) {\n     /* do not leave uninitialized malloc region */\n-    stack_clear(&(mrb->c->stack[keep]), room - keep);\n+    stack_clear(&(mrb->c->stack[keep]), room - keep - 1);\n   }\n }\n \n-- \n2.11.0\n\n\n```",
  "bounty_amount": "800.0",
  "formatted_bounty": "$800",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-03-09T01:23:00.051Z",
  "allow_singular_disclosure_after": -218804925.66522008,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "icanthack",
    "titanous",
    "mpz",
    "eveeez",
    "spetr0x"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
