{
  "id": 155657,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTU2NTc=",
  "url": "https://hackerone.com/reports/155657",
  "title": "Arbitrary Code Injection in ownCloud’s Windows Client",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-07-31T19:00:09.481Z",
  "submitted_at": "2016-07-31T19:00:09.481Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "fbogner",
    "url": "/fbogner",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/097/209/c6a39a3f503e5915ea2ebf90fc4f5b2ca45ef78e_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 3059,
    "url": "https://hackerone.com/owncloud",
    "handle": "owncloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/003/059/d31dc64427bbbf2e428a0b0b97bce59b98d2ba0d_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/003/059/d31dc64427bbbf2e428a0b0b97bce59b98d2ba0d_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "ownCloud",
      "twitter_handle": "ownCloud",
      "website": "https://www.owncloud.com",
      "about": "ownCloud GmbH is the company behind the ownCloud Project - the most downloaded open source project for data and file sync, share and view."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-11-23T18:45:41.271Z",
  "bug_reporter_agreed_on_going_public_at": "2016-10-24T18:45:33.607Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The current ownCloud Windows Desktop client is prone to an arbitrary code injection vulnerability.\n\nThe underlying issue is that the ownCloud desktop client tries to load QT extensions from C:\\usr\\i686-w64-mingw32\\sys-root\\mingw\\lib\\qt5\\plugins.\n\nAs any authenticated user on Windows is allowed to create new folders within C:, the expected folder structure can be created.\n\nWhat that means is that a local attacker can create a malicious QT extensions that gets automatically loaded on the next launch of the ownCloud Desktop client.\n\nTo verify the issue I first tried to simply create a new QT imageformats plugin. However I failed! Have you ever tried to install QT? So I decided to simply modify an existing DLL.\n\nHence, I used Hopper to disassemble the qwindows.dll platform’s library to learn more about its entry points. With that knowledge I planned to modify the DLL so that it shows a simply message box. The necessary shellcode was created with Metasploit:\n\nmsfvenom -a x86 --platform windows -p windows/messagebox TEXT=\"DLL Loaded\" EXTIFUNC=process -f raw > shellcode\ncat shellcode |xxd -p\n\nI then overwrote some bytes after one of the previously identified DLL entry points with the shellcode.\n\nAfter placing the modified payload DLL into C:\\usr\\i686-w64-mingw32\\sys-root\\mingw\\lib\\qt5\\plugins\\platforms the shellcode got executed after launching the ownCloud desktop client.\n\nPlease see the attached PDF for some images documenting the process.\nFurthermore I created a private screen capture: https://owncloud.bogner.sh/s/Ik8AYJ9FfY5Rkyq",
  "weakness": {
    "id": 58,
    "name": "Command Injection - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 108748,
      "file_name": "Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/108/748/565e07f2044a4e5fc528185cc13379041ea120e6/Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf?response-content-disposition=attachment%3B%20filename%3D%22Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf%22%3B%20filename%2A%3DUTF-8%27%27Arbitrary_Code_Injection_in_ownCloud_s_Windows_Client___bogner.pdf&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQXONP3G7Q%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T121941Z&X-Amz-Expires=2550&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIA2ZBVtmGFXj3HuPOBAltyOYEJfYXwVkH0ySkcAGpVd4AiEA%2FDbRJn8xJyLOBOEYKm2tFe1zOLHG4xfoF6jHA4ytsPsqsQUIcBADGgwwMTM2MTkyNzQ4NDkiDCK6PxvBpzf1F5KaJiqOBemZvO%2FLscUV1ZjOsz8brbXhANz7HIMOSB2RXJXYiR%2FlB9gmsfLsQROHda4MBDaGh8OJBO0EvuRoSEg5NRIOz8nDEI9y9Egt18ofl%2By1MTr6cUhanP8Z91XoBQNxUui3l2MGIL7qsJtc9RZmcAZ4NMNu%2FqFqCNKerQ%2FCWuyHlcNW0xaEex3CRS9KjSzXDAUXUV3PabIwLr%2FdfY8gGyPcg7IL%2BzmfI8wF4j01HVVyiwcpxAzQLvkJgUuBwREtv2NEf9pTV%2BsWpyd9L6oPddt7igVKBBWBG9Mm9OtI%2Ft6Y4%2FpVY76tX5vl3VnSWfzxI02vHfG9zVB4t1jHdu6EZunMXfiLBztG2kWPDJ9LoNe%2FniKzjuWbN3pDE4AwMPJi9tB7ufm53KrUmpJ42co3PJcblQK3US7XIdJTiPTirUR1MM9r0xPFTrxP%2BSFln%2BO%2FOx9GfWCgpN5%2FFKPdVvLxco7rykVi%2B6728eCejjpZLo5098xnVTSHUUTYVpFJyXHnvzJStYRxfb4%2B6C7YzTf7lL%2Bt5EBZNRi8F307nhMp1gUrCxPLZklUdsZE3sA%2FQ5UQy4kWL%2Foj%2B5Lxy0v1TB4sgsi1IqV7IBnKQS5LBayRq%2Bs82RBkeBuKeTFJgVr%2FtfExdSBXEXWPOVjELUJL%2B3U1I%2BpS0H0DMPNNMXCDByr6oImu68vX9qBe%2BfFaDewfP5kOL%2BQxv9yny4iZ5YHS1Ajy%2FK4EIytNES7%2FPGP9h66mlZY38U8vrv0U62zbd5ScMlOR13KWedEBDcN6Gm1BBKFTFyQ5sOkpFg9UVXbjkxeuBkAHNgpWeXzPdgtc96IvyqsT%2F04KdyTv9N7jCDn1Vzvc7ltf4C9ll7UgHke80JkTVRN2bDDipayuBjqxAS00qNM1Pcd2XdxW6A3MnUgI3wydtLPBjQ8eXQLVqnaDcuKP%2BCUhIz2JrMtccLBUiViw%2FcyUzKXbLNNLYkBaDppySqWKqeNrx0Bz1GD6Jlf8aZk%2BfmjLGxSjuF%2F%2B3Da2sQ7TPrCwzDxmQK1yA6ads9rL%2BLU6oRr9JYx18RckM75gJJiJtzAYBs2Sv0yMB9rTVnZbvxiEO5rsNv0fTWwKU4c0cUND%2FMZIDiJtywrsm47IHw%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=92a07f56ef26874a66ab26576d0404e1e6328d3a296bab9ed4579a6e8bcd9285",
      "file_size": 2086093,
      "type": "application/pdf",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2016-11-23T18:45:33.646Z",
  "allow_singular_disclosure_after": -227900048.17045674,
  "singular_disclosure_allowed": true,
  "vote_count": 16,
  "voters": [
    "flashdisk",
    "rj01",
    "fbogner",
    "xsam",
    "pappan",
    "brye",
    "madrobot",
    "eveeez",
    "khizer47",
    "m16",
    "and 6 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
