{
  "id": 191689,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTE2ODk=",
  "url": "https://hackerone.com/reports/191689",
  "title": "Incorrect code generation when result of NODE_NEGATE is not used",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2016-12-16T13:39:39.239Z",
  "submitted_at": "2016-12-16T13:39:39.239Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "dkasak",
    "url": "/dkasak",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/122/858/df3e45a00fd0f5e53ef7dc7f9b12168cbde93200_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-01-12T00:37:02.807Z",
  "bug_reporter_agreed_on_going_public_at": "2017-01-12T00:37:02.763Z",
  "team_member_agreed_on_going_public_at": "2017-01-11T21:56:20.390Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Introduction\n============\n\nNot using the result of `NODE_NEGATE` leads to incorrect code generation which could possibly result in arbitrary bytecode generation. Currently it is possible to produce a crash through a SIGABRT via an `assert` failure.\n\nProof of concept\n================\n\nassert_failure.rb\n-------------\n\n    -0E00;0\n\n1. Run either:\n\n    a. `mruby assert_failure.rb`\n    b. `sandbox assert_failure.rb`\n\n2. Both cause a crash via an `assert` failure.\n\nDiscussion\n==========\n\nThe flaw was introduced in commit `d56a19cbf526190de036130fe3a5bf14a0705ee2`.\n\nThe problem is that `codegen` is called recursively on the argument of `NODE_NEGATE` without checking whether it is a valid node. This is problematic because `codegen` assumes that its `tree` argument is a valid node (i.e. that the node's type is stored under the `car` member, further nodes or data under the `cdr` member and that `filename_index` and `lineno` are set properly). This creates an opportunity for the attacker to control further code generation, though it might not be possible to place a valid node type in `car` with the current codebase. Nevertheless, `filename_index` *can* be controlled and this is what allows the POC to make the assertion on line 135 of `debug.c` fail:\n\n    ruby: ext/mruby_engine/mruby/src/debug.c:135: mrb_debug_info_append_file: Assertion `irep->filename' failed.\n    zsh: abort      mruby-engine/bin/sandbox assert_failure.rb\n\nRunning mruby with the following input in gdb:\n\n    -0.5555555555555555555;0\n\nAnd breaking on `parse.y:2885`, we can see that `filename_index` is set to 13621 (which is two '5' characters interpreted as an integer):\n\n    (gdb) x/16hd yyvsp[0].nd->cdr\n    0x79162c:       11824   13621   13621   13621   13621   13621   13621   13621\n    0x79163c:       13621   13621   53      0       52      0       0       0\n    (gdb) p yyvsp[0].nd->cdr->filename_index \n    $21 = 13621\n\nThen, breaking `codegen.c:1230`, we see that `tree->filename_index` is indeed set to 13621:\n\n    (gdb) p tree->filename_index\n    $22 = 13621\n\nThis eventually leads to `assert` to fail.\n\nSolution\n========\n\nTo fix the problem, we should ensure `tree->car` is a valid node before calling `codegen` on `tree` in the case of `NODE_NEGATE`.\n\nnegate_node.patch\n-----------------\n\n    diff --git a/mrbgems/mruby-compiler/core/codegen.c b/mrbgems/mruby-compiler/core/codegen.c\n    index 90bafb3..9d47cca 100644\n    --- a/mrbgems/mruby-compiler/core/codegen.c\n    +++ b/mrbgems/mruby-compiler/core/codegen.c\n    @@ -2232,7 +2232,9 @@ codegen(codegen_scope *s, node *tree, int val)\n        nt = (intptr_t)tree->car;\n        tree = tree->cdr;\n        if (!val) {\n    -        codegen(s, tree, NOVAL);\n    +        if (tree && (intptr_t)tree->car < NODE_LAST) {\n    +          codegen(s, tree, NOVAL);\n    +        }\n            break;\n        }\n        switch (nt) {\n\n--\nDenis Kasak\n",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 144130,
      "file_name": "assert_failure.rb",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/144/130/200d3b6b50a398142e12f71cc7e3f642abfaae8c/assert_failure.rb?response-content-disposition=attachment%3B%20filename%3D%22assert_failure.rb%22%3B%20filename%2A%3DUTF-8%27%27assert_failure.rb&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSHMH2JG6%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T123019Z&X-Amz-Expires=420&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIGZg1eLat8jYDu8ya39gYzlYHLKMMGOBerakTCivFOHfAiEA%2Bu8rTSPah8b0el3%2BS%2FpFwj4VtbM%2FFoDWeSjasMueeQUqsgUIbxADGgwwMTM2MTkyNzQ4NDkiDO%2B7PBDXCVoWHmbGyiqPBXsQMmX1xcmrqnlxF6nxE7BbslfpBP%2BYB7Dz2d5w4AF2fnczmhkr1cJfZ1wQ2hDVbMd5yE%2FwPDAbjXaOusFSzueQ6MRlfW%2FvZuEfbDtv8%2FE2YeH43nJH1Uv164UqRl8M8Vpf%2Bht266SWMAIpKMdZeP9dHL3c2Lb%2FT7%2BLL6TkdfamD2uVZsaa5njbmjr5bIzTJL7suC6pDkBTHkHYP7RDrmZsb68ztNhnQ%2FhF5%2FYW6JlWFjubRC7HPQFKDUBPZmsFR2YhgIYdBQTA6c%2BubLlluA6Q8uqhQU0j%2BRsJejozC3pcE0Cs9ZOgKhQ9MYoU5jr1oNtI7Np9OXeY0gMNtLJIK%2F8jfWmnD8FMV9KL0iZcnVTtzrY6j3oPiwtFfIljx7bgy7hbbf9rafbi30uc8wDaN08gFLYeib2Qgf6rC3suutYfZnWiDom69pyKh5pazkt90Jsn4MB6AC3vuaZ4Nk7B4GeGuDQHV9lqmdLmzcNVS1lvVGdNAbMpKCojixFWzIeBdaRCPVifTMRa2Tfn8KYYu%2F9B18cVeJIHikxS4TLr4YFNBsUnxtIX%2F4qnMfSYTpo1btQ0zei7TPr1%2BIQjVCldFlJyq%2BzTozG71G4YbfrSku7R0EOVfOmY2fw1BLK%2Bdyyl0HR5fiCjeA2roOKXNpXoXr2vFvw1%2Bna5GePjNuZkuCrRHv8TSD7Sb6AlGnQLxqOtxoUADwdZrthePfDcG5mSyiRiXWFsk3iTQCcYi6icViQPaLWhvEf14Z9gRZ0phJIoWuL5IEHRpxf5gaPvIS2ytDTU1FmzrWdwqv%2FMQsb%2FB%2FVgMJyIKxouhh5h%2Bm80zFunt0u9zsAcM3MZzBor1kVJeAjSrV5w2DyO4IM%2FlGuHh%2F8w15OsrgY6sQFVH5tUDXRPOjkahwbrWNRQbQlViBiuisF0oGGIUZSEM2emyhDTiKPd5NMjM0yePeIl%2BPxC4Dul%2F2On0NyXRRTTGrOIIl6Hy6Xv9vxQdDDYPJGcbS4J30GlwnahTG8BuM0KkchA2Wrwiy%2BJjPwi9JgZ9EIwHrxud41dg%2BdUjN4eH82KkANplyasAghysu3v1IW2Zck2vsJ%2FkBL4o45BwkwnHpOMCYfAgN4qXaf1GGzBmPY%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=36cf01f03989e01fa49ba0a4b5490e4c2cc36bc3658b3579c3705ad581432bfc",
      "file_size": 8,
      "type": "text/plain",
      "moderated": null
    },
    {
      "id": 144131,
      "file_name": "0001-Fix-code-generation-when-NODE_NEGATE-result-is-not-u.patch",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/144/131/b396c83028ce6fdff43e401e9b80362f8d891920/0001-Fix-code-generation-when-NODE_NEGATE-result-is-not-u.patch?response-content-disposition=attachment%3B%20filename%3D%220001-Fix-code-generation-when-NODE_NEGATE-result-is-not-u.patch%22%3B%20filename%2A%3DUTF-8%27%270001-Fix-code-generation-when-NODE_NEGATE-result-is-not-u.patch&response-content-type=text%2Fx-diff&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSHMH2JG6%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T123019Z&X-Amz-Expires=420&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIGZg1eLat8jYDu8ya39gYzlYHLKMMGOBerakTCivFOHfAiEA%2Bu8rTSPah8b0el3%2BS%2FpFwj4VtbM%2FFoDWeSjasMueeQUqsgUIbxADGgwwMTM2MTkyNzQ4NDkiDO%2B7PBDXCVoWHmbGyiqPBXsQMmX1xcmrqnlxF6nxE7BbslfpBP%2BYB7Dz2d5w4AF2fnczmhkr1cJfZ1wQ2hDVbMd5yE%2FwPDAbjXaOusFSzueQ6MRlfW%2FvZuEfbDtv8%2FE2YeH43nJH1Uv164UqRl8M8Vpf%2Bht266SWMAIpKMdZeP9dHL3c2Lb%2FT7%2BLL6TkdfamD2uVZsaa5njbmjr5bIzTJL7suC6pDkBTHkHYP7RDrmZsb68ztNhnQ%2FhF5%2FYW6JlWFjubRC7HPQFKDUBPZmsFR2YhgIYdBQTA6c%2BubLlluA6Q8uqhQU0j%2BRsJejozC3pcE0Cs9ZOgKhQ9MYoU5jr1oNtI7Np9OXeY0gMNtLJIK%2F8jfWmnD8FMV9KL0iZcnVTtzrY6j3oPiwtFfIljx7bgy7hbbf9rafbi30uc8wDaN08gFLYeib2Qgf6rC3suutYfZnWiDom69pyKh5pazkt90Jsn4MB6AC3vuaZ4Nk7B4GeGuDQHV9lqmdLmzcNVS1lvVGdNAbMpKCojixFWzIeBdaRCPVifTMRa2Tfn8KYYu%2F9B18cVeJIHikxS4TLr4YFNBsUnxtIX%2F4qnMfSYTpo1btQ0zei7TPr1%2BIQjVCldFlJyq%2BzTozG71G4YbfrSku7R0EOVfOmY2fw1BLK%2Bdyyl0HR5fiCjeA2roOKXNpXoXr2vFvw1%2Bna5GePjNuZkuCrRHv8TSD7Sb6AlGnQLxqOtxoUADwdZrthePfDcG5mSyiRiXWFsk3iTQCcYi6icViQPaLWhvEf14Z9gRZ0phJIoWuL5IEHRpxf5gaPvIS2ytDTU1FmzrWdwqv%2FMQsb%2FB%2FVgMJyIKxouhh5h%2Bm80zFunt0u9zsAcM3MZzBor1kVJeAjSrV5w2DyO4IM%2FlGuHh%2F8w15OsrgY6sQFVH5tUDXRPOjkahwbrWNRQbQlViBiuisF0oGGIUZSEM2emyhDTiKPd5NMjM0yePeIl%2BPxC4Dul%2F2On0NyXRRTTGrOIIl6Hy6Xv9vxQdDDYPJGcbS4J30GlwnahTG8BuM0KkchA2Wrwiy%2BJjPwi9JgZ9EIwHrxud41dg%2BdUjN4eH82KkANplyasAghysu3v1IW2Zck2vsJ%2FkBL4o45BwkwnHpOMCYfAgN4qXaf1GGzBmPY%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3c31883241be0500aa051bba7549c86a4750de140f8c99788e89bb202897256c",
      "file_size": 877,
      "type": "text/x-diff",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-02-10T21:56:20.435Z",
  "allow_singular_disclosure_after": -221063638.82250273,
  "singular_disclosure_allowed": true,
  "vote_count": 8,
  "voters": [
    "dkasak",
    "dgaletic",
    "michiel",
    "mpz",
    "eveeez",
    "khizer47",
    "japz",
    "spetr0x"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
