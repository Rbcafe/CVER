{
  "id": 127202,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMjcyMDI=",
  "url": "https://hackerone.com/reports/127202",
  "title": "Mobile Authentication Endpoint Credentials Brute-Force Vulnerability",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-03-31T22:20:36.249Z",
  "submitted_at": "2016-03-31T22:20:36.249Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "arneswinnen",
    "url": "/arneswinnen",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/061/086/26dedde13e2d4ec49acf71a95f522b54dd5e659c_original.JPG/cccd3716a6d2e06174d2a41492445cb1d4bf85b4611a755bc810b9246a24d951"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 17011,
    "url": "https://hackerone.com/newrelic",
    "handle": "newrelic",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "New Relic",
      "twitter_handle": "newrelic",
      "website": "https://newrelic.com",
      "about": "New Relic's Coordinated Disclosure Program"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-02-19T22:56:24.452Z",
  "bug_reporter_agreed_on_going_public_at": "2017-02-19T22:56:24.420Z",
  "team_member_agreed_on_going_public_at": "2017-02-18T01:40:21.727Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Dear,\n\nYour web authentication (login) endpoint, https://login.newrelic.com/login, currently properly protects against brute-force attacks. After a couple of 100 automated login attempts, a Captcha is required to login to the account under attack, even from a different IP address. Perfect, good job. I don't see that too often. \n\nHowever, your mobile authentication (login) endpoint currently does not have any protection against brute-force attacks. Login requests to https://login.newrelic.com/api/v1/tokens can be sent in a loop with different values for the \"password\" parameter, and no rate limiting/captcha/account lockout requiring out-of-band verification is present. This allows for brute-forcing of credentials, for example based on breached clear-text password databases of which there are many publicly available (https://wiki.skullsecurity.org/Passwords).\n\nA proof-of-concept python script can be found in attachment. This was invoked to brute-force the credentials of my New Relic test account, █████:Password1!, in a little more than 200 seconds. First, 10.000 wrong guesses are performed taken from a public dictionary (https://github.com/danielmiessler/SecLists/blob/master/Passwords/10k_most_common.txt), after which the 10.001th guess is the correct password and properly identified by the brute-force script. This was then used to login to the mobile app, which worked like a charm - no additional account verification step needed. Of course, a real mass exploitation attack would invoke multiple instances of this script and deploy more threads per instance. It could go at virtually unlimited speeds. \n\n```\n# cat 10k_most_common.txt | wc -l\n10001\n```\n\n```\n# tail 10k_most_common.txt \nhoes\nhowie\nhevnm4\nhugohugo\neighty\nepson\nevangeli\neeeee1\neyphed\nPassword1!\n```\n\n```\n# python newrelicmobilebrute.py ███████ 10k_most_common.txt 50\n[INFO] Creating 50 worker threads...\n[INFO] Total # passwords: 10001\n[INFO] Total # threads: 50\n71.20 pw/s [] 3% (356/10001)\n57.30 pw/s [=] 5% (573/10001)\n53.67 pw/s [=] 8% (805/10001)\n52.65 pw/s [==] 10% (1053/10001)\n50.84 pw/s [==] 12% (1271/10001)\n50.23 pw/s [===] 15% (1507/10001)\n50.03 pw/s [===] 17% (1751/10001)\n48.98 pw/s [===] 19% (1959/10001)\n49.56 pw/s [====] 22% (2230/10001)\n49.54 pw/s [====] 24% (2477/10001)\n49.89 pw/s [=====] 27% (2744/10001)\n49.32 pw/s [=====] 29% (2959/10001)\n49.85 pw/s [======] 32% (3240/10001)\n49.80 pw/s [======] 34% (3486/10001)\n49.37 pw/s [=======] 37% (3703/10001)\n49.56 pw/s [=======] 39% (3965/10001)\n49.47 pw/s [========] 42% (4205/10001)\n49.12 pw/s [========] 44% (4421/10001)\n49.43 pw/s [=========] 46% (4696/10001)\n49.57 pw/s [=========] 49% (4957/10001)\n49.74 pw/s [==========] 52% (5223/10001)\n49.77 pw/s [==========] 54% (5475/10001)\n49.74 pw/s [===========] 57% (5720/10001)\n49.96 pw/s [===========] 59% (5995/10001)\n49.85 pw/s [============] 62% (6231/10001)\n49.72 pw/s [============] 64% (6463/10001)\n49.95 pw/s [=============] 67% (6743/10001)\n49.76 pw/s [=============] 69% (6967/10001)\n49.70 pw/s [==============] 72% (7206/10001)\n49.68 pw/s [==============] 74% (7452/10001)\n49.54 pw/s [===============] 76% (7679/10001)\n49.68 pw/s [===============] 79% (7949/10001)\n49.75 pw/s [================] 82% (8209/10001)\n49.72 pw/s [================] 84% (8452/10001)\n49.78 pw/s [=================] 87% (8711/10001)\n49.68 pw/s [=================] 89% (8942/10001)\n49.90 pw/s [==================] 92% (9231/10001)\n49.87 pw/s [==================] 94% (9475/10001)\n49.73 pw/s [===================] 96% (9698/10001)\n49.83 pw/s [===================] 99% (9965/10001)\n[SUCCESS] Found the right password: Password1!\n48.79 pw/s [====================] 100% (10001/10001)\n[End] Total time: 207 seconds\n```\n\nOne example of a similar vulnerability that was exploited by blackhats in the past would be Apple's Celebgate scandal of January 2015, where celebrity passwords were brute-forced through an unprotected Apple authentication endpoint. In the case of New Relic, this could lead to the compromise of many accounts, since it is a well-known fact that people tend to choose similar passwords which turn up in dictionaries. \n\nFor more info, see http://www.imperva.com/docs/WP_Consumer_Password_Worst_Practices.pdf . A password analysis study of the 32-million clear-text password leak of the rockyou website breach reveals that by guessing the topmost 4655 passwords in this dump against all users, an attacker will gain access to around 20% of those (page 4). That would be a lot of New Relic accounts.\n\nRecommendation on the short-term: Enforce rate limiting on the mobile authentication endpoint based on IP address\nRecommendation on the mid-to-long term: Implement proper account lockout policy / Captcha protection after threshold on the authentication endpoint has been reached by any attacker.\n\nBest regards,\n\nArne Swinnen\nhttps://www.arneswinnen.net\n\n",
  "weakness": {
    "id": 27,
    "name": "Improper Authentication - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 82402,
      "file_name": "newrelicmobilebrute.py",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/082/402/6c734269f7aae36e0b22f2a3048099d187f3c7bb/newrelicmobilebrute.py?response-content-disposition=attachment%3B%20filename%3D%22newrelicmobilebrute.py%22%3B%20filename%2A%3DUTF-8%27%27newrelicmobilebrute.py&response-content-type=text%2Fx-java&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVK6HBRP7%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T120520Z&X-Amz-Expires=1991&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDsoBJx%2B4kwKN%2FWCaycvNOynx6crPPKIL%2BEAGIylt8fMAIhALe831Qq64MHj2Mc4oI5HTmICWF%2Bis27HMVDJjMR8iK%2FKrIFCHAQAxoMMDEzNjE5Mjc0ODQ5IgypI1m9MFcJXSl3lvAqjwVVB33LQh7HDzfem7Ao9ZxUuMYQUtaQsYdRUY%2F2hr5Ky9YlDorwJyiy4wHhgftzPtAaLxi0IKIz5%2FtUIJEwLUp9UAMU5V71uM8es0vGiZVS4udWmvfPjiQiNg44nYjExzcIrYMuIf%2FdMVGh7ytGy4Q3hpN8pZzyyvQneRgQYNYlJgv0kL07Z5qAQgMG%2BhQJh17%2FbIGHtuH2597CbQygh83BctSU51P9axo6qtXU0cemT6k9iG15t4jA%2FLNFUtGIjuIufrPdwM0zrS%2Bc%2F6W1SLEERO51I6NSS9sSjUxFNxkuBsjXU5DAKFrUOYWlBJvBcAVCT9fNb0%2Ba45oSQu5BrGVZViSSY8UCFLY0Xrcg%2Bvaqsep%2FApYwTmxxsYo2cs3xrUXZtuRnXE5MsH5EQO1ruwqzRMjvlBIClLJd1d215p9Z%2BlKdbWfrbW9vUNwrl7LDO9hRf5CawMSg4lQrWDeMK7svFeoYs8xzne4WNYaDjGH3gTfCsbJ0Q9Atplqduv7%2BGOL889H79tdUCDwyP2nkfuqmEPgKEodEP9Eva0klHgYQ%2FZVMQRF0C8OyOB492WM7KrVI%2FW%2FLxsonMF3mTIV%2FzK7ytVuq0b44exxMqt8UABXDOSTKy4AdBpxU46Jybp5Cak%2Bstk%2BC8aTkrjRSZKmUlRcZrxS4Oitf9%2FbXxlH0ZIHtr%2BEsMIjzuGF7XCQ00GHSJDHZVgi90OmOpcIzzIWgZdcysQWddOcII54f8PrnYNFhJtLPASEm81TGpdRIFz0oD%2FcY27e6iOK7GJaxLs0Ki89NSIeNfs8Bhsr%2BrnyEBiQE0BPjXCSlDyKXAtYmZxUd3Re%2B0%2FVQhoY3x3ZHC7%2F%2Blr47wtwAOyjCQYqWHpaUszSDMJ6brK4GOrABkkycl7ociIFa9xqO66KqZf95H4RpA1YVas5zhYo%2Bobqh1k3cAYK6A1EXLiCnDT5PSS%2F1ejTXbuU7Tpah6vxYYvGmB9H3Af2jMT9enGyUACIubvVr3uW9JTYqGv3o6Vp9RKWOKXs4F6gnFhjJsENY%2F9WGuHzDZPlrsrXolqaVtDqRQ1%2BEFbkxw8gl7uNfXz53JejvDvz93hw4Pm%2Fly7F5pGIHIBsKA%2Ff5OadydxsE3xc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=e844c154091740746bbe78d8ac281213415d4449a645ccd2263a1a6b77bb2a23",
      "file_size": 2874,
      "type": "text/x-java",
      "moderated": null
    },
    {
      "id": 82403,
      "file_name": "10k_most_common.txt",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/082/403/5aee429bec41246da393d3c7690670f530dac39c/10k_most_common.txt?response-content-disposition=attachment%3B%20filename%3D%2210k_most_common.txt%22%3B%20filename%2A%3DUTF-8%27%2710k_most_common.txt&response-content-type=text%2Fx-c%2B%2B&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVK6HBRP7%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T120520Z&X-Amz-Expires=1991&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDsoBJx%2B4kwKN%2FWCaycvNOynx6crPPKIL%2BEAGIylt8fMAIhALe831Qq64MHj2Mc4oI5HTmICWF%2Bis27HMVDJjMR8iK%2FKrIFCHAQAxoMMDEzNjE5Mjc0ODQ5IgypI1m9MFcJXSl3lvAqjwVVB33LQh7HDzfem7Ao9ZxUuMYQUtaQsYdRUY%2F2hr5Ky9YlDorwJyiy4wHhgftzPtAaLxi0IKIz5%2FtUIJEwLUp9UAMU5V71uM8es0vGiZVS4udWmvfPjiQiNg44nYjExzcIrYMuIf%2FdMVGh7ytGy4Q3hpN8pZzyyvQneRgQYNYlJgv0kL07Z5qAQgMG%2BhQJh17%2FbIGHtuH2597CbQygh83BctSU51P9axo6qtXU0cemT6k9iG15t4jA%2FLNFUtGIjuIufrPdwM0zrS%2Bc%2F6W1SLEERO51I6NSS9sSjUxFNxkuBsjXU5DAKFrUOYWlBJvBcAVCT9fNb0%2Ba45oSQu5BrGVZViSSY8UCFLY0Xrcg%2Bvaqsep%2FApYwTmxxsYo2cs3xrUXZtuRnXE5MsH5EQO1ruwqzRMjvlBIClLJd1d215p9Z%2BlKdbWfrbW9vUNwrl7LDO9hRf5CawMSg4lQrWDeMK7svFeoYs8xzne4WNYaDjGH3gTfCsbJ0Q9Atplqduv7%2BGOL889H79tdUCDwyP2nkfuqmEPgKEodEP9Eva0klHgYQ%2FZVMQRF0C8OyOB492WM7KrVI%2FW%2FLxsonMF3mTIV%2FzK7ytVuq0b44exxMqt8UABXDOSTKy4AdBpxU46Jybp5Cak%2Bstk%2BC8aTkrjRSZKmUlRcZrxS4Oitf9%2FbXxlH0ZIHtr%2BEsMIjzuGF7XCQ00GHSJDHZVgi90OmOpcIzzIWgZdcysQWddOcII54f8PrnYNFhJtLPASEm81TGpdRIFz0oD%2FcY27e6iOK7GJaxLs0Ki89NSIeNfs8Bhsr%2BrnyEBiQE0BPjXCSlDyKXAtYmZxUd3Re%2B0%2FVQhoY3x3ZHC7%2F%2Blr47wtwAOyjCQYqWHpaUszSDMJ6brK4GOrABkkycl7ociIFa9xqO66KqZf95H4RpA1YVas5zhYo%2Bobqh1k3cAYK6A1EXLiCnDT5PSS%2F1ejTXbuU7Tpah6vxYYvGmB9H3Af2jMT9enGyUACIubvVr3uW9JTYqGv3o6Vp9RKWOKXs4F6gnFhjJsENY%2F9WGuHzDZPlrsrXolqaVtDqRQ1%2BEFbkxw8gl7uNfXz53JejvDvz93hw4Pm%2Fly7F5pGIHIBsKA%2Ff5OadydxsE3xc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=75964493970082a3322775c1f9b371d29a04ff8965b4b73cf27a77ab700f07a7",
      "file_size": 83029,
      "type": "text/x-c++",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2017-03-20T01:40:21.776Z",
  "allow_singular_disclosure_after": -217851898.5397087,
  "singular_disclosure_allowed": true,
  "vote_count": 15,
  "voters": [
    "delimitry",
    "arneswinnen",
    "mashoud1122",
    "bogdantcaciuc",
    "bl4de",
    "geekboy",
    "brodie_codie",
    "malcolmx",
    "eveeez",
    "khizer47",
    "and 5 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
