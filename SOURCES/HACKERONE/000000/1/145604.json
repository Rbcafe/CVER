{
  "id": 145604,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNDU2MDQ=",
  "url": "https://hackerone.com/reports/145604",
  "title": "Avatar image upload and bypass  real image verification ",
  "state": "Closed",
  "substate": "informative",
  "readable_substate": "Informative",
  "created_at": "2016-06-18T01:50:10.608Z",
  "submitted_at": "2016-06-18T01:50:10.608Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "dremos",
    "url": "/dremos",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/018/998/3db17cec7563a3d33ed4fe7931996917e13998c8_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13291,
    "url": "https://hackerone.com/nextcloud",
    "handle": "nextcloud",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/tnqlkt8d6fcch8hj8brdjp8nw864/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Nextcloud",
      "twitter_handle": "nextclouders",
      "website": "https://nextcloud.com",
      "about": "Access, share and protect your files, calendars, contacts, communication & more at home and in your enterprise."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2017-01-15T22:07:23.197Z",
  "bug_reporter_agreed_on_going_public_at": "2017-01-15T22:07:23.165Z",
  "team_member_agreed_on_going_public_at": "2016-06-20T21:05:12.896Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi\n\nWe can bypass Avatar Upload image verification and extension  uploading a php file or any other extension binding a valide  jpeg image  , there is no risk for the moment because the avatar is renamed to avatar_upload on the remote server , but it ll be nice to secure this part of code .\n\nExample  \n---------------\nhere is the same file with two different extension : \n\nhttp://91.121.108.101/image1.jpg\nhttp://91.121.108.101/image1.php      <== execute php code inside the image \n\n1) download image1.jpg\n\n2) as you can see  if you open the file image1.jpg  file on notepad it hide php code ( phpinfo(); function in this case .\n\n3) rename image1.jpg to image1.php  , and try to upload it on the avatar upload form , it pass the verification  .\n\nThis verification is not enought in this  file :  /core/controller/avatarcontroller.php  \n\n\n\tif ($image->valid()) {\n\t\t\t\t$mimeType = $image->mimeType();\n\t\t\t\tif ($mimeType !== 'image/jpeg' && $mimeType !== 'image/png') {\n\t\t\t\t\treturn new DataResponse(\n\t\t\t\t\t\t['data' => ['message' => $this->l->t('Unknown filetype')]],\n\t\t\t\t\t\tHttp::STATUS_OK,\n\t\t\t\t\t\t$headers\n\t\t\t\t\t);\n\t\t\t\t}\n\n\n",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 4,
  "voters": [
    "dremos",
    "japz",
    "spetr0x",
    "savage20t"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
