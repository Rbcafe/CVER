{
  "id": 100509,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMDA1MDk=",
  "url": "https://hackerone.com/reports/100509",
  "title": "Pre-generation of 2FA secret/backup codes seems like an unnecessary risk",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2015-11-19T16:06:20.160Z",
  "submitted_at": "2015-11-19T16:06:20.160Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "danlec",
    "url": "/danlec",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/013/404/1fb35d139fbfcb566e2513ca6c92f2dfe6cde541_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2015-12-02T05:09:10.288Z",
  "bug_reporter_agreed_on_going_public_at": "2015-12-02T05:09:09.987Z",
  "team_member_agreed_on_going_public_at": "2015-12-02T04:51:17.341Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "If you manage to get a malicious script running in HackerOne, requesting `https://hackerone.com/settings/authentication/edit` and parsing out the two factor authentication form will yield either… \n\n- the 2FA secret key and backup codes that *will* be used if 2FA is enabled for the first time this session\n- the backup codes that *will* be used if 2FA is already being used and the codes are regenerated during this session\n\nWhile *activating* 2FA or *confirming* backup codes regeneration requires knowledge of the user's password/TOTP code, reading the values out from the DOM does not (again, provided that you've compromised the user's session and are running script in their domain)\n\nA theoretical attack might play out like this:\n\n- A victim clicks a link or something in HackerOne which triggers XSS (which seems unlikely, but …)\n- The XSS makes a request to `https://hackerone.com/settings/authentication/edit` to obtain the victim's potential 2FA secret and backup codes.  Possibly the attacker is able to abuse a password manager's behavior to obtain the victim's username/password at this point.\n- Because of the strange behavior that occurred when they clicked the link, the victim possibly closes and re-opens the window (in an attempt to stop whatever the script is doing) and then enables 2FA on their account\n- The attacker would now know the 2FA secret and backup codes that are currently being used for the victim's account\n\nWhile achieving this attack seems rather unlikely, it seems that it could be mitigated by not generating the 2FA values until the user is trying to enable 2FA or generate their codes and has provided their password (and then generating new codes each time, regardless of whether the process was cancelled previously)\n\n(Also, I was somewhat surprised to see that the `https://hackerone.com/settings/authentication/edit` form contained a 2FA secret/backup codes for users that aren't allowed to set up two factor authentication.)",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-01-01T04:51:17.782Z",
  "allow_singular_disclosure_after": -256201130.6358099,
  "singular_disclosure_allowed": true,
  "vote_count": 8,
  "voters": [
    "spam404",
    "ali",
    "shubham_srt",
    "r3y",
    "japz",
    "shivammusic",
    "0619",
    "dyabla"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
