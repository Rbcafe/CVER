{
  "id": 181210,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xODEyMTA=",
  "url": "https://hackerone.com/reports/181210",
  "title": "Incorrect detection of onion URLs",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-11-09T23:10:57.601Z",
  "submitted_at": "2016-11-09T23:10:57.601Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "e3amn2l",
    "url": "/e3amn2l",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 8539,
    "url": "https://hackerone.com/paragonie",
    "handle": "paragonie",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/539/72f76fed45e5220b47ba2f679371ebf9ccb19c70_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Paragon Initiative Enterprises",
      "twitter_handle": "ParagonIE",
      "website": "https://github.com/paragonie",
      "about": "Cryptography and Application Security Consultants - We Produce Various Open Source Libraries"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-11-13T00:43:42.723Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2016-11-13T00:35:42.848Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Several places have incorrect code to detect if URL point to .onion domain (tor hidden server):\n\nThe following regexes:\n```\n1. #^https://([^/:]+)\\.onion:(?:([0-9]+))#\n2. #^https?://([^/]+)\\.onion#\n```\n\nwhich is used in:\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L223\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L231\n\nwill pass for the following URLs which have example.com as domain and are valid for curl in php (was tested via curl_setopt($ch, CURLOPT_URL, $url))\n```\n1 => https://example.com?.onion:443\n1 => https://example.com&.onion:443\n2 => http://example.com?.onion\n2 -> http://example.com&.onion\n```\n\nwhich is problematic because:\n1. The code in: will not force HTTPS if url passed the above regex. (thus incorrect check = HTTPS not forced for not .onion domain)\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Hail.php#L228-L229\n```\n                // Don't force HTTPS\n                unset($defaults['curl'][CURLOPT_SSLVERSION]);\n```\n\n2. the second regex allow http url (thus incorrect check = HTTP for not .onion domain is vulnerable to MITM)\n3. potential of code reuse by people who read the code and assume it's safe.\n\nThe following code just search for .onion in $url, for example https://domain.onionweb.com/ will pass the check but isn't .onion website.\n\nin:\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L50\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L154\nhttps://github.com/paragonie/airship/blob/0e9289553cdc538556d362faaee63be6cc534a0c/src/Engine/Continuum/Channel.php#L239\nhttps://github.com/paragonie/airship/blob/90a8317107ecfdf38be57f36e4a1a81e69280f24/src/Cabin/Bridge/Blueprint/ChannelUpdates.php#L117\nhttps://github.com/paragonie/airship/blob/58f96aa0e5002b60e74456502d9bfc9483d77b3d/src/Engine/Keyggdrasil/Peer.php#L82\n\n```\n            if (\\strpos($url, '.onion') !== false) {\n```\n\nfix:\n\t1. implement and use across the codebase function such as isUrlOnion($url) which return true if url point to onion domain, and use secure implementation, for example:\n\t\tconsider using something like:\n```\n\t\tfunction isUrlOnion($url) {\n\t\t\t$host = parse_url($url, PHP_URL_HOST);\n\t\t\tif($host != null) {\n\t\t\t\treturn substr_compare($url, '.onion', -strlen('.onion')) === 0;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n```",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-12-13T00:35:42.886Z",
  "allow_singular_disclosure_after": -226237879.6757502,
  "singular_disclosure_allowed": true,
  "vote_count": 5,
  "voters": [
    "eveeez",
    "sumit7",
    "koviri_jagdish",
    "vishnuraj",
    "spetr0x"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
