{
  "id": 157270,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNTcyNzA=",
  "url": "https://hackerone.com/reports/157270",
  "title": "CSRF vulnerability that allows an attacker to purge plugin metric data",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-08-06T22:47:20.418Z",
  "submitted_at": "2016-08-06T22:47:20.418Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "martijn",
    "url": "/martijn",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/5sJxxikBF7fwfkWs531JPtef/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 17011,
    "url": "https://hackerone.com/newrelic",
    "handle": "newrelic",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/3813a300hyp02ziarjcgo7ph6uxv/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "New Relic",
      "twitter_handle": "newrelic",
      "website": "https://newrelic.com",
      "about": "New Relic's Coordinated Disclosure Program"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-12-05T08:48:08.879Z",
  "bug_reporter_agreed_on_going_public_at": "2016-11-05T08:48:07.990Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "# Vulnerability details\nA (seemingly) minor CSRF vulnerability exists in the endpoint that purges plugin metric data. When an admin visits the Agent overview of its account, it will show a button for each plugin that allows the admin to purge the data. This button links to a `GET` requests that is vulnerable to a CSRF attack.\n\n# Proof of concept\nThe attack is not super likely to be successfully pulled off, given the fact that the attacker needs to know the account ID and the plugin ID. However, in theory, it's possible and guessable, since the IDs are auto incrementing. To get the combination of both correct with a brute force attach is pretty low in my mind, but it could be interesting to abuse this in a more targeted attack (for example when a \"normal user\" tricks another user into visiting a certain link that purges the cache).\n\nTo reproduce the issue, sign in as an account admin. Make sure the account has a plugin installed. Now go to https://rpm.newrelic.com/accounts/411552/agents, where `411552` is the account ID. Copy the agent ID from the \"Purge metric data\" and append it to the agent URL: https://rpm.newrelic.com/accounts/411552/agents/12345. Now prepare the exploit:\n\n```\n<img src=\"https://rpm.newrelic.com/accounts/411552/agents/12345\" />\n```\n\nStore the code example above in a file and serve it to the victim. It'll fire a `GET` request as the person that is currently signed into rpm.newrelic.com. If that user has access to the account and agent ID, it'll purge the metric data for that agent without any interaction (besides visiting the rogue site) of the victim.",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-12-05T08:48:08.016Z",
  "allow_singular_disclosure_after": -226899112.16991472,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "michiel",
    "leet-boy",
    "eveeez",
    "japz",
    "sumit7",
    "spetr0x",
    "martijn"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
