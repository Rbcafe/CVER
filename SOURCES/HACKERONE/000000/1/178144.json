{
  "id": 178144,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNzgxNDQ=",
  "url": "https://hackerone.com/reports/178144",
  "title": "imagecropauto out-of-bounds access",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2016-10-26T02:40:46.968Z",
  "submitted_at": "2016-10-26T02:40:46.968Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "fms",
    "url": "/fms",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVK6HBRP7%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T122601Z&X-Amz-Expires=750&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDsoBJx%2B4kwKN%2FWCaycvNOynx6crPPKIL%2BEAGIylt8fMAIhALe831Qq64MHj2Mc4oI5HTmICWF%2Bis27HMVDJjMR8iK%2FKrIFCHAQAxoMMDEzNjE5Mjc0ODQ5IgypI1m9MFcJXSl3lvAqjwVVB33LQh7HDzfem7Ao9ZxUuMYQUtaQsYdRUY%2F2hr5Ky9YlDorwJyiy4wHhgftzPtAaLxi0IKIz5%2FtUIJEwLUp9UAMU5V71uM8es0vGiZVS4udWmvfPjiQiNg44nYjExzcIrYMuIf%2FdMVGh7ytGy4Q3hpN8pZzyyvQneRgQYNYlJgv0kL07Z5qAQgMG%2BhQJh17%2FbIGHtuH2597CbQygh83BctSU51P9axo6qtXU0cemT6k9iG15t4jA%2FLNFUtGIjuIufrPdwM0zrS%2Bc%2F6W1SLEERO51I6NSS9sSjUxFNxkuBsjXU5DAKFrUOYWlBJvBcAVCT9fNb0%2Ba45oSQu5BrGVZViSSY8UCFLY0Xrcg%2Bvaqsep%2FApYwTmxxsYo2cs3xrUXZtuRnXE5MsH5EQO1ruwqzRMjvlBIClLJd1d215p9Z%2BlKdbWfrbW9vUNwrl7LDO9hRf5CawMSg4lQrWDeMK7svFeoYs8xzne4WNYaDjGH3gTfCsbJ0Q9Atplqduv7%2BGOL889H79tdUCDwyP2nkfuqmEPgKEodEP9Eva0klHgYQ%2FZVMQRF0C8OyOB492WM7KrVI%2FW%2FLxsonMF3mTIV%2FzK7ytVuq0b44exxMqt8UABXDOSTKy4AdBpxU46Jybp5Cak%2Bstk%2BC8aTkrjRSZKmUlRcZrxS4Oitf9%2FbXxlH0ZIHtr%2BEsMIjzuGF7XCQ00GHSJDHZVgi90OmOpcIzzIWgZdcysQWddOcII54f8PrnYNFhJtLPASEm81TGpdRIFz0oD%2FcY27e6iOK7GJaxLs0Ki89NSIeNfs8Bhsr%2BrnyEBiQE0BPjXCSlDyKXAtYmZxUd3Re%2B0%2FVQhoY3x3ZHC7%2F%2Blr47wtwAOyjCQYqWHpaUszSDMJ6brK4GOrABkkycl7ociIFa9xqO66KqZf95H4RpA1YVas5zhYo%2Bobqh1k3cAYK6A1EXLiCnDT5PSS%2F1ejTXbuU7Tpah6vxYYvGmB9H3Af2jMT9enGyUACIubvVr3uW9JTYqGv3o6Vp9RKWOKXs4F6gnFhjJsENY%2F9WGuHzDZPlrsrXolqaVtDqRQ1%2BEFbkxw8gl7uNfXz53JejvDvz93hw4Pm%2Fly7F5pGIHIBsKA%2Ff5OadydxsE3xc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=eef3fc38a833de63a28dede7088d1b25601d15089770cb1f8618827362dd35d7",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVK6HBRP7%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T122601Z&X-Amz-Expires=750&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDsoBJx%2B4kwKN%2FWCaycvNOynx6crPPKIL%2BEAGIylt8fMAIhALe831Qq64MHj2Mc4oI5HTmICWF%2Bis27HMVDJjMR8iK%2FKrIFCHAQAxoMMDEzNjE5Mjc0ODQ5IgypI1m9MFcJXSl3lvAqjwVVB33LQh7HDzfem7Ao9ZxUuMYQUtaQsYdRUY%2F2hr5Ky9YlDorwJyiy4wHhgftzPtAaLxi0IKIz5%2FtUIJEwLUp9UAMU5V71uM8es0vGiZVS4udWmvfPjiQiNg44nYjExzcIrYMuIf%2FdMVGh7ytGy4Q3hpN8pZzyyvQneRgQYNYlJgv0kL07Z5qAQgMG%2BhQJh17%2FbIGHtuH2597CbQygh83BctSU51P9axo6qtXU0cemT6k9iG15t4jA%2FLNFUtGIjuIufrPdwM0zrS%2Bc%2F6W1SLEERO51I6NSS9sSjUxFNxkuBsjXU5DAKFrUOYWlBJvBcAVCT9fNb0%2Ba45oSQu5BrGVZViSSY8UCFLY0Xrcg%2Bvaqsep%2FApYwTmxxsYo2cs3xrUXZtuRnXE5MsH5EQO1ruwqzRMjvlBIClLJd1d215p9Z%2BlKdbWfrbW9vUNwrl7LDO9hRf5CawMSg4lQrWDeMK7svFeoYs8xzne4WNYaDjGH3gTfCsbJ0Q9Atplqduv7%2BGOL889H79tdUCDwyP2nkfuqmEPgKEodEP9Eva0klHgYQ%2FZVMQRF0C8OyOB492WM7KrVI%2FW%2FLxsonMF3mTIV%2FzK7ytVuq0b44exxMqt8UABXDOSTKy4AdBpxU46Jybp5Cak%2Bstk%2BC8aTkrjRSZKmUlRcZrxS4Oitf9%2FbXxlH0ZIHtr%2BEsMIjzuGF7XCQ00GHSJDHZVgi90OmOpcIzzIWgZdcysQWddOcII54f8PrnYNFhJtLPASEm81TGpdRIFz0oD%2FcY27e6iOK7GJaxLs0Ki89NSIeNfs8Bhsr%2BrnyEBiQE0BPjXCSlDyKXAtYmZxUd3Re%2B0%2FVQhoY3x3ZHC7%2F%2Blr47wtwAOyjCQYqWHpaUszSDMJ6brK4GOrABkkycl7ociIFa9xqO66KqZf95H4RpA1YVas5zhYo%2Bobqh1k3cAYK6A1EXLiCnDT5PSS%2F1ejTXbuU7Tpah6vxYYvGmB9H3Af2jMT9enGyUACIubvVr3uW9JTYqGv3o6Vp9RKWOKXs4F6gnFhjJsENY%2F9WGuHzDZPlrsrXolqaVtDqRQ1%2BEFbkxw8gl7uNfXz53JejvDvz93hw4Pm%2Fly7F5pGIHIBsKA%2Ff5OadydxsE3xc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1338290181b2228b39507a061f4b28719ed5d0881b511eca12693a22abf28326"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-10-13T18:21:47.487Z",
  "bug_reporter_agreed_on_going_public_at": "2019-10-13T18:21:47.416Z",
  "team_member_agreed_on_going_public_at": "2019-10-13T09:21:34.765Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "\nUpstream Bug\n---\nhttps://bugs.php.net/bug.php?id=72494\n\n\nSummary\n---\nimagecropauto on IMG_CROP_THRESHOLD mode causes arbitrary read access and possible leak of information. The function imagecropauto doesn't check valid colors for non-truecolor images. This causes that gdImageRed/Green/Blue/Alpha macros read beyond that 255 allowed values, when it troes match colors inside the gdColorMatch function.\n\nDetails\n---\ncolor is only checked to be positive:\n\n```\nhttps://github.com/php/php-src/blob/master/ext/gd/gd.c#L4591\n\n\nPHP_FUNCTION(imagecropauto)\n{\n...\n\t\tcase GD_CROP_THRESHOLD:\n\t\t\tif (color < 0) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Color argument missing with threshold mode\");\n\t\t\t\tRETURN_FALSE;\n\t\t\t}\n\t\t\tim_crop = gdImageCropThreshold(im, color, (float) threshold);\n\t\t\tbreak;\n...\n```\n\ncolor is passed to gdColorMatch:\n\n```\nhttps://github.com/php/php-src/blob/master/ext/gd/libgd/gd_crop.c#L227\n\ngdImagePtr gdImageCropThreshold(gdImagePtr im, const unsigned int color, const float threshold)\n{\n...\n\tmatch = 1;\n\tfor (y = 0; match && y < height; y++) {\n\t\tfor (x = 0; match && x < width; x++) {\n\t\t\tmatch = (gdColorMatch(im, color, gdImageGetPixel(im, x,y), threshold)) > 0;\n\t\t}\n\t}\n...\n```\n\ncol1 (color) is now used with the gdImageRed/gdImageGreen/gdImageBlue/gdImageAlpha macros.\n\n\n```\nhttps://github.com/php/php-src/blob/master/ext/gd/libgd/gd_crop.c#L344\n\nstatic int gdColorMatch(gdImagePtr im, int col1, int col2, float threshold)\n{\n\tconst int dr = gdImageRed(im, col1) - gdImageRed(im, col2);\n\tconst int dg = gdImageGreen(im, col1) - gdImageGreen(im, col2);\n\tconst int db = gdImageBlue(im, col1) - gdImageBlue(im, col2);\n\tconst int da = gdImageAlpha(im, col1) - gdImageAlpha(im, col2);\n\tconst double dist = sqrt(dr * dr + dg * dg + db * db + da * da);\n\tconst double dist_perc = sqrt(dist / (255^2 + 255^2 + 255^2));\n\treturn (dist_perc <= threshold);\n\t//return (100.0 * dist / 195075) < threshold;\n}\n```\n\nIn these macros it is used as an index (c) for the red/green/blue/alpha arrays, we are able to read beyond the 255 items on these arrays.\n\n```\nhttps://github.com/php/php-src/blob/master/ext/gd/libgd/gd.h#L730\n\n#define gdImageColorsTotal(im) ((im)->colorsTotal)\n#define gdImageRed(im, c) ((im)->trueColor ? gdTrueColorGetRed(c) : \\\n\t(im)->red[(c)])\n#define gdImageGreen(im, c) ((im)->trueColor ? gdTrueColorGetGreen(c) : \\\n\t(im)->green[(c)])\n#define gdImageBlue(im, c) ((im)->trueColor ? gdTrueColorGetBlue(c) : \\\n\t(im)->blue[(c)])\n#define gdImageAlpha(im, c) ((im)->trueColor ? gdTrueColorGetAlpha(c) : \\\n\t(im)->alpha[(c)])\n```\n\nGDB output:\n```\n gdb -q --args /home/user/php/php-70/sapi/cli/php -n poc.php\nNo symbol table is loaded.  Use the \"file\" command.\nBreakpoint 1 (__asan_report_error) pending.\nReading symbols from /home/user/php/php-70/sapi/cli/php...done.\ngdb-peda$ b gd_crop.c:350\nBreakpoint 2 at 0x8190002: file /home/user/php/php-70/ext/gd/libgd/gd_crop.c, line 350.\ngdb-peda$ r\nStarting program: /home/user/php/php-70/sapi/cli/php -n poc.php\n[----------------------------------registers-----------------------------------]\nEAX: 0x0\nEBX: 0x8b47000 --> 0x8b46db8 --> 0x1\nECX: 0x60c\nEDX: 0x0\nESI: 0xf5a14020 --> 0xf5a7a118 --> 0x84b92de (<ZEND_DO_ICALL_SPEC_HANDLER>:     push   ebp)\nEDI: 0xf5a7a118 --> 0x84b92de (<ZEND_DO_ICALL_SPEC_HANDLER>:    push   ebp)\nEBP: 0xffff9f18 --> 0xffff9f78 --> 0xffff9fd8 --> 0xffffa008 --> 0xffffa028 --> 0xffffa068 (--> ...)\nESP: 0xffff9ee0 --> 0x4\nEIP: 0x8190002 (<gdColorMatch+366>:     mov    eax,DWORD PTR [ebp-0x28])\nEFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\n   0x818fffb <gdColorMatch+359>:        sub    edx,eax\n   0x818fffd <gdColorMatch+361>:        mov    eax,edx\n   0x818ffff <gdColorMatch+363>:        mov    DWORD PTR [ebp-0x1c],eax\n=> 0x8190002 <gdColorMatch+366>:        mov    eax,DWORD PTR [ebp-0x28]\n   0x8190005 <gdColorMatch+369>:        imul   eax,DWORD PTR [ebp-0x28]\n   0x8190009 <gdColorMatch+373>:        mov    edx,eax\n   0x819000b <gdColorMatch+375>:        mov    eax,DWORD PTR [ebp-0x24]\n   0x819000e <gdColorMatch+378>:        imul   eax,DWORD PTR [ebp-0x24]\n[------------------------------------stack-------------------------------------]\n0000| 0xffff9ee0 --> 0x4\n0004| 0xffff9ee4 --> 0x1\n0008| 0xffff9ee8 --> 0x4\n0012| 0xffff9eec --> 0x0\n0016| 0xffff9ef0 --> 0x0\n0020| 0xffff9ef4 --> 0x0\n0024| 0xffff9ef8 --> 0x0\n0028| 0xffff9efc --> 0x0\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\n\nBreakpoint 2, gdColorMatch (im=0xf5a6c000, col1=0x539, col2=0x0, threshold=0) at /home/user/php/php-70/ext/gd/libgd/gd_crop.c:350\n350             const double dist = sqrt(dr * dr + dg * dg + db * db + da * da);\ngdb-peda$ p/d col1\n$1 = 1337\ngdb-peda$ p &im->red\n$4 = (int (*)[256]) 0xf5a6c010  ## im->red bottom limit\n\ngdb-peda$ p &im->red[255]\n$6 = (int *) 0xf5a6c40c         ## im->red top limit\n       \ngdb-peda$ p &im->red[col1]\n$3 = (int *) 0xf5a6d4f4         ## Out of bounds\n\n```\n\nPatch\n--\n```\nhttp://git.php.net/?p=php-src.git;a=commit;h=1d69028d2f15216d128b5a6e606f763ef09d4991\n```\n\nFixed for PHP 5.6.25, PHP 7.0.10\n--\nhttp://php.net/ChangeLog-5.php\nhttp://php.net/ChangeLog-7.php#7.0.10\n",
  "bounty_amount": "500.0",
  "formatted_bounty": "$500",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-11-12T09:21:34.859Z",
  "allow_singular_disclosure_after": -134276666.45151606,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "spetr0x",
    "oznef"
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
