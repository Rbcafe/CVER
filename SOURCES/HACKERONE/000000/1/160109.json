{
  "id": 160109,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8xNjAxMDk=",
  "url": "https://hackerone.com/reports/160109",
  "title": "Brute force login and bypass locked account restrictions via iOS app",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2016-08-17T16:25:03.772Z",
  "submitted_at": "2016-08-17T16:25:03.772Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "cablej",
    "url": "/cablej",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/042/859/7fdafea90092a305ae2cb6cec7d43461783abf0c_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35527,
    "url": "https://hackerone.com/instacart",
    "handle": "instacart",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/o3gb7jh208og9ikm1jqbsj1461p5/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/o3gb7jh208og9ikm1jqbsj1461p5/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Instacart",
      "twitter_handle": "instacart",
      "website": "https://instacart.com",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2016-09-19T19:01:38.566Z",
  "bug_reporter_agreed_on_going_public_at": "2016-08-27T16:24:12.420Z",
  "team_member_agreed_on_going_public_at": "2016-09-19T19:01:38.429Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "When logging in to an account on the website, a user's account gets locked out after ~15 tries to prevent an attacker from brute forcing access to the account.\n\nThese same restrictions do not apply to the mobile sign-in endpoint (a POST request to `https://www.instacart.com/oauth/token`), which allows an attacker to brute force login of any user's account (I have attempted logging into my account ~50 times, with no restrictions).\n\nIn addition, if an account has already been locked from too many sign-ins on the website, an attacker can still log in using the app's endpoint.\n\nPOC:\n\n1. Configure a mobile proxy, such as BurpSuite.\n2. Make a login request in the Instacart app.\n3. Repeat this request to brute force any account's password.\n\nAs an example, I found a list of the most common 100 passwords and added my own password somewhere in the list. All invalid passwords returned a 401 error, while the correct password returned a 200 error.\n\nSuggested fix:\n\nApply the same rate limiting and locking-out to mobile login as web login.",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-09-26T16:24:12.534Z",
  "allow_singular_disclosure_after": -232919815.57451034,
  "singular_disclosure_allowed": true,
  "vote_count": 9,
  "voters": [
    "rook1337",
    "cablej",
    "shubham_srt",
    "eveeez",
    "need_new_username_103",
    "jens",
    "spetr0x",
    "dyabla",
    "apurva021"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
