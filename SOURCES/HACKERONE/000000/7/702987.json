{
  "id": 702987,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MDI5ODc=",
  "url": "https://hackerone.com/reports/702987",
  "title": "No redirect_uri in the db for web-internal clientKey leads to one-click DoS on gitter.im",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2019-09-27T13:50:27.438Z",
  "submitted_at": "2019-09-27T13:50:27.438Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "gregxsunday",
    "url": "/gregxsunday",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/xsfxirw1bkrfvlhobhmq7nrleanp/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 264,
    "url": "https://hackerone.com/gitlab",
    "handle": "gitlab",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/f0hovtq73f9ap815a0r1w42bocp4/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "GitLab",
      "twitter_handle": "gitlab",
      "website": "https://about.gitlab.com",
      "about": "A single application for the entire software development lifecycle."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-05-15T17:07:57.575Z",
  "bug_reporter_agreed_on_going_public_at": "2019-10-21T11:42:21.874Z",
  "team_member_agreed_on_going_public_at": "2020-05-15T17:07:57.323Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "### Summary\nIn the *oauthclients* collection of the default gitter installation, there's no value *registeredRedirectUri* in the database for *web-internal* clientKey. The request to\n```\n/login/oauth/authorize?response_type=code&client_id=web-internal&redirect_uri=http://whatever\n```\ncauses the app to crash when trying to parse the *client.registeredRedirectUri*, which in this situation becomes the value *undefined*.\n### Steps to reproduce\n\n1. deploy the standard installation of the gitter application\n2. make the GET request to \n```\nhttp://localhost:5000/login/oauth/authorize?response_type=code&client_id=web-internal&redirect_uri=http://whatever\n```\n\n### Impact\n\nThe application crashes and does not wake up on its own.\n```\n2019-09-27T13:01:09.013Z - error: Uncaught exceptionTypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined forcing shutdown\n[15:01:09] [nodemon] app crashed - waiting for file changes before starting...\n```\n### What is the current *bug* behavior?\n\nWhen the request to \n```\n/login/oauth/authorize?response_type=code&client_id=web-internal&redirect_uri=http://whatever\n```\nis made, the database lookup is being done:\n```\noauthService.findClientByClientKey(clientKey, function(err, client) {\n      if (err) {\n        return done(err);\n      }\n```\n*those are the lines 127-130 from server/web/oauth2.js*\nThe clientKey is *web-internal*, its record in the Mongo looks like this:\n```\n{\n    \"_id\": ObjectID(\"5d8453d62edc221c1e5a2f6c\"),\n    \"clientKey\": \"web-internal\",\n    \"clientSecret\": <clientSecret>,\n    \"name\": \"Web Client\",\n    \"tag\": \"web-app\"\n}\n```\nThe query returned something, so the following check is being passed:\n```\n      if (!client) {\n        return done(new OauthAuthorizationError('Provided clientKey does not exist.'));\n      }\n```\n*those are the lines 132-134 from server/web/oauth2.js*\nThen, in the 136th line there's parsing that is the root cause of the problem:\n```\n const urlData = url.parse(client.registeredRedirectUri);\n```\nas the *client.registeredRedirectUri* is undefined, it throws the *Uncaught exceptionTypeError*.\n```\n2019-09-27T13:01:09.011Z - error: ----------------------------------------------------------------\n2019-09-27T13:01:09.011Z - error: -- A VeryBadThing has happened.\n2019-09-27T13:01:09.011Z - error: ----------------------------------------------------------------\n2019-09-27T13:01:09.012Z - error: Uncaught exceptionTypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined \n{ message:\n   'The \"url\" argument must be of type string. Received type undefined',\n  name: 'TypeError [ERR_INVALID_ARG_TYPE]' }\n2019-09-27T13:01:09.012Z - error: TypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined\n```\n\n### What is the expected *correct* behavior?\n\nThe app should not crash on such error. To mitigate the issue you can\n1. simply catch the error\n2. add *registeredRedirectUri* to the database record. It can be done by adding a line to *scripts/dataupgrades/001-oauth-client/002-add-redirect-uri.sh* which currently looks like this:\n```\ndb.oauthclients.update(\n  { clientKey: 'web-internal' },\n  { clientKey: 'web-internal',\n    clientSecret: '$(generate_password)',\n    name: 'Web Client',\n    tag: 'web-app',\n  }, true /* upsert */);\n```\n\n### Relevant logs and/or screenshots\n\n```\n019-09-27T13:01:09.006Z - error: No error reporting is enabled so just logging to logger:  \n{ exception:\n   { message:\n      'The \"url\" argument must be of type string. Received type undefined',\n     stack:\n      'TypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined\\n    at Url.parse (url.js:154:11)\\n    at Object.urlParse [as parse] (url.js:148:13)\\n    at /home/gniedziela/projects/gitlab/gitter/webapp/server/web/oauth2.js:137:27\\n    at tryCatcher (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/util.js:16:23)\\n    at Promise.successAdapter [as _fulfillmentHandler0] (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/nodeify.js:23:30)\\n    at Promise._settlePromise (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/promise.js:566:21)\\n    at Promise._settlePromise0 (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/promise.js:614:10)\\n    at Promise._settlePromises (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/promise.js:693:18)\\n    at Async._drainQueue (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/async.js:133:16)\\n    at Async._drainQueues (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/async.js:143:10)\\n    at Immediate.Async.drainQueues (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/async.js:17:14)\\n    at runCallback (timers.js:705:18)\\n    at tryOnImmediate (timers.js:676:5)\\n    at processImmediate (timers.js:658:5)\\n    at process.topLevelDomainCallback (domain.js:126:23)',\n     name: 'TypeError [ERR_INVALID_ARG_TYPE]' },\n  meta:\n   { errorString:\n      'TypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined',\n     type: 'uncaught' },\n  tags:\n   { host: 'c7caee1658e769b17e9c1e0e254cb54939a3e982', job: 'web' } }\n2019-09-27T13:01:09.011Z - error: ----------------------------------------------------------------\n2019-09-27T13:01:09.011Z - error: -- A VeryBadThing has happened.\n2019-09-27T13:01:09.011Z - error: ----------------------------------------------------------------\n2019-09-27T13:01:09.012Z - error: Uncaught exceptionTypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined \n{ message:\n   'The \"url\" argument must be of type string. Received type undefined',\n  name: 'TypeError [ERR_INVALID_ARG_TYPE]' }\n2019-09-27T13:01:09.012Z - error: TypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined\n    at Url.parse (url.js:154:11)\n    at Object.urlParse [as parse] (url.js:148:13)\n    at /home/gniedziela/projects/gitlab/gitter/webapp/server/web/oauth2.js:137:27\n    at tryCatcher (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/util.js:16:23)\n    at Promise.successAdapter [as _fulfillmentHandler0] (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/nodeify.js:23:30)\n    at Promise._settlePromise (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/promise.js:566:21)\n    at Promise._settlePromise0 (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/promise.js:614:10)\n    at Promise._settlePromises (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/promise.js:693:18)\n    at Async._drainQueue (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/async.js:133:16)\n    at Async._drainQueues (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/async.js:143:10)\n    at Immediate.Async.drainQueues (/home/gniedziela/projects/gitlab/gitter/webapp/node_modules/bluebird/js/release/async.js:17:14)\n    at runCallback (timers.js:705:18)\n    at tryOnImmediate (timers.js:676:5)\n    at processImmediate (timers.js:658:5)\n    at process.topLevelDomainCallback (domain.js:126:23)\n2019-09-27T13:01:09.013Z - error: Uncaught exceptionTypeError [ERR_INVALID_ARG_TYPE]: The \"url\" argument must be of type string. Received type undefined forcing shutdown\n[15:01:09] [nodemon] app crashed - waiting for file changes before starting...\n```\n\n## Impact\n\nComplete Denial of Service of the Gitter installation.",
  "bounty_amount": "1000.0",
  "formatted_bounty": "$1,000",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 25,
  "voters": [
    "xchessy",
    "gregxsunday",
    "zy9ard3",
    "bl4de",
    "brahim_boufakri01",
    "ayoub0x1",
    "dimm3r",
    "dhakal_bibek",
    "sbharathi2002",
    "onorbayar",
    "and 15 more..."
  ],
  "severity": {
    "rating": "low",
    "author_type": "Team"
  },
  "structured_scope": {
    "databaseId": 18135,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.gitter.im",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
