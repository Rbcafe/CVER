{
  "id": 713975,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MTM5NzU=",
  "url": "https://hackerone.com/reports/713975",
  "title": "Only OpenSSL handles a CRL when passed in via CApath ",
  "state": "Closed",
  "substate": "informative",
  "severity_rating": "high",
  "readable_substate": "Informative",
  "created_at": "2019-10-14T14:51:22.948Z",
  "submitted_at": "2019-10-14T14:51:22.948Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "salvet",
    "url": "/salvet",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 35663,
    "url": "https://hackerone.com/curl",
    "handle": "curl",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/035/663/2faf4c279d437d64bfda6d23d62ce1833813a4d9_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "curl",
      "twitter_handle": "",
      "website": "https://curl.se",
      "about": "cURL is an Open Source project providing a library and command-line tool for doing internet transfers"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-01-08T09:09:22.411Z",
  "bug_reporter_agreed_on_going_public_at": "2021-01-08T09:09:22.368Z",
  "team_member_agreed_on_going_public_at": "2021-01-08T08:21:25.201Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "## Summary:\nCode in vtls/nss.c interprets CApath option differently than OpenSSL-using code,\nuser can be mislead to unsecure use of curl/libcurl easily. CApath directory\ncan contain CRL files in addition to CA certificate files and they are used\nfor certificate verification when curl calls OpenSSL. Code path using NSS blindly\nloads all files residing in CApath as CA certificates instead, which has two effects:\nfirst, the meaning of CRLs is ignored and revoked certificates can be accepted,\nsecond, NSS may find duplicate SN in corrupt 'CA certificate' during TLS handshake and break\nconnection to legitimate server (NSS does not perform full validation in load\nand search routines, ASN.1 templates used can mistakenly match both types of object).\nSuch use is not explicitly supported according to curl documentation strictly speaking\nbut I find current implementation very risky (I know security professionals who have fallen to this trap)\nand recommend adding validation/type detection for each file loaded\nfrom CApath (or using c_hash-style name extensions if any file with such extension\nis present, if full validation is deemed too complicated or as a quick fix helping most users).\n\n# Steps To Reproduce:\n  1. revoke a certificate, install resulting CRL in CApath, try with NSS-based curl\n  2. try connecting TLS server whose CA has self-signed certificate with SN=1 and CRL in CApath\n     (success can depend on order of directory entries)\n\n## Supporting Material/References:\n[list any additional material (e.g. screenshots, logs, etc.)]\n\n  * [attachment / reference]\n\n## Impact\n\nAn attacker can impersonate TLS server using revoked (presumably leaked) certificate.",
  "weakness": {
    "id": 28,
    "name": "Improper Certificate Validation"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 0,
  "voters": [],
  "severity": {
    "rating": "high",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 18844,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/curl/curl",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
