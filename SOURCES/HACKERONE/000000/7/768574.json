{
  "id": 768574,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83Njg1NzQ=",
  "url": "https://hackerone.com/reports/768574",
  "title": "Denial Of Service in Strapi Framework using argument injection",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2020-01-05T21:45:31.668Z",
  "submitted_at": "2020-01-05T21:45:31.668Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "princechaddha",
    "url": "/princechaddha",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/1JLyiMfauF1uuSS1Q5Hiytxi/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2020-8123"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-01-28T20:10:50.459Z",
  "bug_reporter_agreed_on_going_public_at": "2020-01-28T20:10:50.307Z",
  "team_member_agreed_on_going_public_at": "2020-01-27T13:48:59.370Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report Denial Of Service in Strapi Framework.It allows attacker to force restart the server using argument injection.\n\n# Module\n\n**module name:** strapi\n**version:** 3.0.0-beta.18.3 and earlier\n**npm page:** `https://www.npmjs.com/package/strapi`\n\n## Module Description\n\n> The Strapi HTTP layer sits on top of Koa. Its ensemble of small modules work together to provide simplicity, maintainability, and structural conventions to Node.js applications.\n\n## Module Stats\n\n[1] weekly downloads 8,508\n\n# Vulnerability\n\n## Vulnerability Description\n\n>  While reviewing source code i found that \"installPlugin\" and \"uninstallPlugin\" handler functions for the admin panel (https://github.com/strapi/strapi/blob/master/packages/strapi-admin/controllers/Admin.js) is using regex on line 70 & 110 i.e `/^[A-Za-z0-9_-]+$/` before passing user input to `execa()` on line 77 & 117 to prevent command injection but the regex allows `-` character.Using this attacker can pass valid arguments like \"-h\" \"-v\" \"--help\" which will add after the command `npm run strapi -- install <user-input>` & `npm run strapi -- uninstall <user-input>` and leads the serve to restart.\n\n## Steps To Reproduce:\n\n> Create a new strapi project and start the server by using yarn.\n> Login to admin panel by visiting http://172.16.129.155:1337/admin/\n> Goto http://172.16.129.155:1337/admin/marketplace & click on download while intercepting the request.\n> Change value of plugin to \"-h\",  \"--help\", \"-v\" or \"--version\"\n> Check console the server will restart everytime we send the request using valid strapi arguments. \n\n## Patch\n\n> Instead of `strapi.reload();` after executing the command there should be a check to validate if a valid plugin is installed or uninstalled.Many user uses `_` & `-` in plugin names so blacklisting the above 4 inputs will fix this issue instead of removing `_` & `-` from the regex\n\n# Wrap up\n\n> Select Y or N for the following statements:\n\n- I contacted the maintainer to let them know: [Y/N] N\n- I opened an issue in the related repository: [Y/N] N\n\n\n#####Also, It looks like an intented behaviour to restart server after uninstalling or installing a valid plugin but by just passing the valid arguments we can restart the server.\n\n## Impact\n\nAttacker can cause the server to restart even without installing or uninstalling a valid plugin.",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-02-26T13:48:59.462Z",
  "allow_singular_disclosure_after": -125106344.21391545,
  "singular_disclosure_allowed": true,
  "vote_count": 11,
  "voters": [
    "akshansh",
    "sameerphad72",
    "tess",
    "0xelkomy",
    "deb0con",
    "b9372d4605459ca97219795",
    "toothy",
    "kirat1313",
    "falcon_arrow13",
    "0xsalman",
    "and 1 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 2.7,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "high",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "none",
      "availability": "low"
    }
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
