{
  "id": 781175,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83ODExNzU=",
  "url": "https://hackerone.com/reports/781175",
  "title": "Unauthenticated users can obtain information about Checklist objects with unclaimed ChecklistCheck objects",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2020-01-22T23:01:46.826Z",
  "submitted_at": "2020-01-22T23:01:46.826Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "jobert",
    "url": "/jobert",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ht4b9SmcYNqmpbyCFXd7cxHB/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-03-20T17:04:05.075Z",
  "bug_reporter_agreed_on_going_public_at": "2020-03-20T17:03:19.741Z",
  "team_member_agreed_on_going_public_at": "2020-03-20T17:04:04.996Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The `Checklist` objects that can be queried through GraphQL are supposed to only be accessible by program members, the users who claimed or responded to a check belonging to a checklist, and HackerOne Pentesters. The `Checklist` object is also supposed to be in the `running` state (e.g. when the platform collects responses for the checks) for HackerOne Pentesters to access them. The authorization check is implemented as follows:\n\n```ruby\nclass ProtectedChecklist\n  include ::ProtectedAttribute::Protector\n\n  model { Checklist }\n\n  copy_roles(ProtectedTeam) do\n    Checklist.joins(:team)\n  end\n\n  property(:RUNNING_CHECKLIST) do\n    Checklist.running\n  end\n\n  role(:CLAIMER) { |requester| claimed_by_user(requester) }\n  role(:RESPONDER) { |requester| responded_by_user(requester) }\n\n  group(\n    has_feature(RUNNING_CHECKLIST) & (\n      has_role(PUBLIC) |\n      has_role(H1_PENTESTER) |\n      has_role(WHITELISTED_REPORTER) |\n      has_role(INVITATION_RECIPIENT_WITH_SATISFIED_REQUIREMENTS)\n    ) |\n    has_role(TEAM_MEMBER) |\n    has_role(CLAIMER) |\n    has_role(RESPONDER),\n  ) do\n    allow :checklist_check_responses\n    allow :checklist_checks\n    allow :expires_at\n    allow :id\n    allow :name\n    allow :team\n    allow :unclaimed_checklist_checks_count\n  end\nend\n\n```\n\nAt first sight, the authorization check seems to be implemented correctly. However, the `CLAIMER` role is leveraging the `claimed_by_user` scope, which is implemented as follows:\n\n```ruby\nscope :claimed_by_user, lambda { |user|\n    where(id: ChecklistCheck.where(user_id: user).select(:checklist_id))\n  }\n```\n\nInstead of an inner join, a query (`ChecklistCheck.where(user_id: user).select(:checklist_id)`) is used to fetch the checklist IDs that are claimed. Because not all checks are claimed, `user_id` can be set to `NULL` in the database. Because the HackerOne GraphQL endpoint can be queried as an anonymous user, this scope can be called with `nil`. This causes anonymous users to automatically get the `CLAIMER` role, thus exposing information about `Checklist` objects.\n\nThe other protectors correctly implement the `claimed_by_user` scope.\n\nAny relations defined on the `Checklist` model, such as `team`, `checklist_check_responses`, and `checklist_checks` are protected separately and are not accessible by anonymous users. The exposed information is limited to `Checklist` objects, which doesn't expose any customer information.\n\nThe following query can be used to query a `Checklist` object. Make sure you're signed out when executing this query.\n\n```\nquery {\n  node(id: \"Z2lkOi8vaGFja2Vyb25lL0NoZWNrbGlzdC8x\") {\n    ... on Checklist {\n      name\n      expires_at\n    }\n  }\n}\n```\n\n## Impact\n\nAnonymous users can obtain information about checklists.",
  "weakness": {
    "id": 26,
    "name": "Improper Access Control - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-04-19T17:03:19.844Z",
  "allow_singular_disclosure_after": -120515561.45051415,
  "singular_disclosure_allowed": true,
  "vote_count": 57,
  "voters": [
    "mashoud1122",
    "rook1337",
    "sameerphad72",
    "tess",
    "ali",
    "m359ah",
    "gamliel",
    "kunal94",
    "haxta4ok00",
    "mtoy",
    "and 47 more..."
  ],
  "severity": {
    "rating": "medium",
    "score": 4.4,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 3,
    "asset_type": "URL",
    "asset_identifier": "hackerone.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
