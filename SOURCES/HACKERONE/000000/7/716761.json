{
  "id": 716761,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC83MTY3NjE=",
  "url": "https://hackerone.com/reports/716761",
  "title": "WAF bypass via double encoded non standard ASCII chars permitted a reflected XSS on response page not found pages - (629745 bypass)",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2019-10-17T22:16:54.926Z",
  "submitted_at": "2019-10-17T22:16:54.926Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "laszaro",
    "url": "/laszaro",
    "profile_picture_urls": {
      "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 1989,
    "url": "https://hackerone.com/starbucks",
    "handle": "starbucks",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/001/989/c9aa38cf3b1a91daa085d31e23d23f34cd1874df_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/001/989/c9aa38cf3b1a91daa085d31e23d23f34cd1874df_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Starbucks",
      "twitter_handle": "Starbucks",
      "website": "http://www.starbucks.com",
      "about": "OUR MISSION WITH EVERY CUP, WITH EVERY CONVERSATION, WITH EVERY COMMUNITY– WE NURTURE THE LIMITLESS POSSIBILITIES OF HUMAN CONNECTION"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-01-29T17:33:19.699Z",
  "bug_reporter_agreed_on_going_public_at": "2020-01-17T18:57:43.444Z",
  "team_member_agreed_on_going_public_at": "2020-01-29T17:33:19.574Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** Report [629745](https://hackerone.com/reports/629745) not properly resolved: \"Many Starbucks websites are vulnerable to cross-site scripting on 404 pages because double quotes lack sanitizing in hidden input tags, which leads to JavaScript execution\".\n\n**Description:**\nReport 629745 caught my attention, so I began testing the WAF to see if I could find any other issues. After a while I found out that the previously reported issue was not properly resolved as I was able to bypass the double encoding filter.\n\nThe original payload on the report was something like this:\n```\nhttps://www.starbucks.com.br/testing%2522%2520accesskey='x'%2520onclick='confirm%601%60'\n```\nand it got resolved. But you can bypass the filter with this:\n```\nhttps://www.starbucks.com.br/testing%2522%80%2520accesskey='x'%2520onclick='confirm%601%60'\n```\nNotice the `%80` between `%2522` and `%2520`. In fact, you can replace the `%80` with any hex value __beyond `%7f`__  and the payload still works (there's a couple of exceptions throwing \"Bad Request\" errors:  `%81`, `%8d`, `%8f`, `%90`, and `%9d`), but values in the range `%00-%7f` get properly filtered out (throwing custom \"Server Error\" pages and 404 pages, 301 and 302 redirect pages, and default 400 Bad Request errors, depending on the value)\n\nSo, this payload works:\n```\nhttps://www.starbucks.com.br/testing%2522%FF%2520accesskey='x'%2520onclick='confirm%601%60'\n```\nbut this one doesn't:\n```\nhttps://www.starbucks.com.br/testing%2522%7F%2520accesskey='x'%2520onclick='confirm%601%60'\n```\n\nThere is a similar behaviour if you put the double-hex digit first.\nThis payload breaks the filter:\n```\nhttps://www.starbucks.com.br/testing%80%2522%2520accesskey='x'%2520onclick='confirm%601%60'\n```\nbut this one doesn't:\n```\nhttps://www.starbucks.com.br/testing%7F%2522%2520accesskey='x'%2520onclick='confirm%601%60'\n```\n\n**Platform(s) Affected:** Firefox 69.0.3\n\n## Steps To Reproduce:\n\n  1. Visit this link on Firefox: \n\n```\nhttps://www.starbucks.com.br/testing%2522%80%2520accesskey='x'%2520onclick='confirm%601%60'\n```\n\n  2. Press CONTROL+ALT+X on Mac, or ALT+SHIFT+X on Windows\n\n## Recommendations for fix\nThe range of hex values `%80-%FF` is breaking the WAF filter, those values need to be filtered out just like the range `%00-%7F` is being filtered out.\n\n## Impact\n\nAs the original report said:\n\"JavaScript is against Starbucks users on multiple critical domains. JavaScript execution results in information theft and an attacker can perform unwanted actions on a victim's behalf\".",
  "weakness": {
    "id": 61,
    "name": "Cross-site Scripting (XSS) - Reflected"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-02-16T18:57:43.542Z",
  "allow_singular_disclosure_after": -125951521.51425599,
  "singular_disclosure_allowed": true,
  "vote_count": 56,
  "voters": [
    "shuvam321",
    "base_64",
    "stealthy",
    "sh1yo",
    "xsstestov",
    "sensoyard",
    "brodie_codie",
    "javo",
    "kiriknik",
    "mah3sec",
    "and 46 more..."
  ],
  "severity": {
    "rating": "low",
    "score": 3.8,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "high",
      "privileges_required": "none",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "low",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 13017,
    "asset_type": "URL",
    "asset_identifier": "www.starbucks.co.uk",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 19985,
      "category": "team",
      "content": "laszaro uncovered a bypass for report 629745 whereby the range of hex values %80-%FF was breaking the WAF filter which had not been accounted for in the original report.\n\n@laszaro — thank you for reporting this vulnerability and confirming the resolution.",
      "user": {
        "id": 706273,
        "username": "agedsumatra",
        "name": "agedSumatra",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2019-08-12T17:50:49.926Z",
        "url": "https://hackerone.com/agedsumatra",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/yjUg6PZmutR2o3qPxEP2MT1J/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/yjUg6PZmutR2o3qPxEP2MT1J/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/yjUg6PZmutR2o3qPxEP2MT1J/60f411638706d89ae3052af6fe8b88fa9a798e291deee40f6a22e81418d78d5f"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
