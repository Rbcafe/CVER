{
  "id": 411075,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MTEwNzU=",
  "url": "https://hackerone.com/reports/411075",
  "title": "Abusing \"Report as abuse\" functionality to delete any user's post.",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2018-09-18T13:14:58.687Z",
  "submitted_at": "2018-09-18T13:14:58.687Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "h1-squirtle",
    "url": "/h1-squirtle",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/9ariot3jlahochsh9r4c5hxg8e8u/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 17443,
    "url": "https://hackerone.com/vanilla",
    "handle": "vanilla",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/443/2720e6aeb834de4fd40765a5cae34abb78eb66cd_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/017/443/2720e6aeb834de4fd40765a5cae34abb78eb66cd_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "paused",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Vanilla",
      "twitter_handle": "vanilla",
      "website": "http://vanillaforums.com",
      "about": "Vanilla is a powerfully simple discussion forum you can easily customize to make as unique as your community."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-01-18T15:05:43.433Z",
  "bug_reporter_agreed_on_going_public_at": "2019-12-19T15:05:38.470Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi Team,\nGreetings!!\n\n**Description:**\nI would like to report a vulnerability that can be used to delete any user’s post by abusing “Report an abuse” function within application. After specific number of reports submitted to server, it automatically deletes that post of user.\nApplication has functionality where one user can report for abusive post or content of another user. An attacker can send multiple abuse report for the victim’s post from one account to delete user’s post. \n \n## Steps to reproduce:\n\n1. Login with attacker's credentials in browser and victim’s credentials in incognito mode of browser \n2. Post some text or other content through victim’s account on his own wall.\n3. Now open attacker’s account and goto victim’s wall or profile. You will see the content posted by victim. \n4. Set up any proxy intercepting tool with the browser (I’m using Burp Suite) and start intercepting requests\n7. Click on “Flag” of victim’s post and select “Abuse”. Capture this request in Burpsuite and send to Intruder tab\n8. Goto “Position” tab and select “clear”\n9. Now goto Payload tab and select “Payload type” as “Null Payloads”\n10. Under the payload options select “Continue indefinably”\n11. Now goto “Options” tab and set number of threads “100”\n12. Click on start attack. After 900 requests reload the page.\n13. If post is still exist, wait for more payloads to be executed.\n14. After specific number of successful payloads post will get deleted. \n15. You can verify with attacker’s as well as victim’s account also\n \n\nMitigations:\nApplication should also verify source of \"Abusive flags\". If requests are being submitted from one account, block the requests.\n\n## Impact\n\nAn attacker can use this vulnerability to delete any user’s post by sending multiple abuse flags to server. Server is not verifying report’s source as it only verifying report’s quantity, so attacker can send multiple reports from one account and get victim’s post deleted. \nAttacker can delete multiple posts by abusing this vulnerability in reputed forums and posts which have got high attention or number of likes, LOLs and comments.",
  "bounty_amount": "300.0",
  "formatted_bounty": "$300",
  "weakness": {
    "id": 65,
    "name": "Business Logic Errors"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-01-18T15:05:38.538Z",
  "allow_singular_disclosure_after": -128469939.01878005,
  "singular_disclosure_allowed": true,
  "vote_count": 159,
  "voters": [
    "a_d_a_m",
    "djurado",
    "7odamoo",
    "base_64",
    "solaristiker1",
    "balerion",
    "str0k1rch",
    "sameerphad72",
    "tess",
    "spam404",
    "and 149 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 8.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "none",
      "scope": "unchanged",
      "confidentiality": "none",
      "integrity": "high",
      "availability": "none"
    }
  },
  "structured_scope": {
    "databaseId": 2102,
    "asset_type": "WILDCARD",
    "asset_identifier": "*.vanillacommunities.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
