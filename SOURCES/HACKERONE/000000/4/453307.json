{
  "id": 453307,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NTMzMDc=",
  "url": "https://hackerone.com/reports/453307",
  "title": "HTML Injection + XSS Vulnerability - https://████████/ | Proof of Concept [PoC]",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2018-11-30T20:57:40.114Z",
  "submitted_at": "2018-11-30T20:57:40.114Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ismailtsdelen",
    "url": "/ismailtsdelen",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/235/209/811e06bd1afd0af3c1fdae6d10e0f892b12487d4_original.jpeg/ede8cd84a64d5392a2bb88ecb598721116469c27c015c2caa77148f11e211d58"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2021-03-11T20:36:57.717Z",
  "bug_reporter_agreed_on_going_public_at": "2021-03-11T12:55:54.647Z",
  "team_member_agreed_on_going_public_at": "2021-03-11T20:36:57.581Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello U.S. Dept Of Defense Security Team,\n\nMy name is Ismail Tasdelen. As a security researcher. I found a html injection and xss vulnerability.\n\nUrl address : https://█████████/\n\nHTML Injection + XSS Payload = html+injection+xss\"><h1><marquee>Ismail Tasdelen</marquee></h1><img src=x onerror=alert(\"ismailtasdelen\")> \n\nDescripton :\n\nThe server reads data directly from the HTTP request and reflects it back in the HTTP response. Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content to a vulnerable web application, which is then reflected back to the victim and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or e-mailed directly to the victim. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces a victim to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the victim, the content is executed by the victim's browser.\n\nReferences : \n* https://cwe.mitre.org/data/definitions/79.html\n* https://portswigger.net/web-security/cross-site-scripting\n\nStep by step :\n\n* https://██████████/ got to.\n* Run HTML Injection + XSS Payload in the search field.\n\nThanks\n\n## Impact\n\nImpact of XSS vulnerabilities :\n\nAn attacker who exploits a cross-site scripting vulnerability is typically able to:\n\n  *  Impersonate or masquerade as the victim user.\n  * Carry out any action that the user is able to perform.\n  * Read any data that the user is able to access.\n  * Capture the user's login credentials.\n  * Perform virtual defacement of the web site.\n  * Inject trojan functionality into the web site.\n\nThe actual impact of the attack generally depends on the nature of the application, its functionality and data, and the status of the compromised user. For example:\n\n* In a brochureware application, where all users are anonymous and all information is public, the impact will often be minimal.\n* In an application holding sensitive data, such as banking transactions, emails, or healthcare records, the impact will usually be serious.\n* If the compromised user has elevated privileges within the application, then the impact will generally be critical, allowing the attacker to take full control of the vulnerable application and compromise all users and their data.",
  "weakness": {
    "id": 61,
    "name": "Cross-site Scripting (XSS) - Reflected"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 5,
  "voters": [
    "th4nu_0x0",
    "salahhasoneh",
    "dastan_9408",
    "luislessey",
    "ismailtsdelen"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
