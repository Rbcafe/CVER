{
  "id": 496326,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80OTYzMjY=",
  "url": "https://hackerone.com/reports/496326",
  "title": "█████████ - Insecure download cookie generation allows bypass of CAC authentication, access to deleted and locked files",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "critical",
  "readable_substate": "Resolved",
  "created_at": "2019-02-15T01:56:00.274Z",
  "submitted_at": "2019-02-15T01:56:00.274Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "cablej_dds",
    "url": "/cablej_dds",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/297/403/7f80f45b8c434ad0da25b685ea053058c6d0a1ce_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 16064,
    "url": "https://hackerone.com/deptofdefense",
    "handle": "deptofdefense",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/016/064/46cd0286b1fa224aaa2cb9dfaaca9fa22b5b80b2_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "U.S. Dept Of Defense",
      "twitter_handle": "DC3VDP",
      "website": "https://bit.ly/3ntULtN",
      "about": ""
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": true,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2020-05-11T16:47:33.285Z",
  "bug_reporter_agreed_on_going_public_at": "2019-12-07T21:14:06.953Z",
  "team_member_agreed_on_going_public_at": "2020-05-11T16:47:33.207Z",
  "comments_closed?": true,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Summary:**\n\nTo download a file, ████ directs users to `/██████████/Download.aspx` and sets a cookie authenticating the download. The cookie looks like this:\n\n```\npickup=Subject=&PackageID=MTU4NDgzMTU=███\n```\n\nIf an attacker can generate this cookie, this allows downloading a file. As it turns out, the generation of the cookie is fairly straightforward and requires no server-side key, only a file ID and its associated password. The components are:\n\n1. The file ID, base 64 encoded, followed by a dash\n2. The SHA512 hash of the plaintext file ID, base 64 encoded\n3. The secret key of the package (as sent in the email), base 64 encoded, followed by a dash\n4. The SHA2512 hash of the secret key, base 64 encoded\n\nBy generating a cookie using this format, an attacker can accomplish the following:\n\n1. Bypass CAC-enforced files.\n2. Bypass deleted files (tested when a user deletes their package). Untested if this allows accessing historical files.\n3. Bypass \"locked\" files that have already been downloaded.\n\nFor instance, after attempting to download a deleted package on █████, █████ displays the following error:\n\n> The package Is no longer available For download. The file(s) has been permanently deleted from ███████. You will have To contact the sender And ask them To upload the file(s) again. \n\nHowever, this is not true. By making a crafted request to `/█████████/Download.aspx` given the above cookies, a user can still download deleted files. This may also apply to past files, meaning that all previous uploaded files may not be deleted. I will test this when files I have submitted expire.\n\n## Impact\n\nSignificant bypasses to █████████ security controls, including:\n\n- Bypass CAC protections\n- Download files that ███ says have been deleted from the file system\n- Download locked files that have already been downloaded\n\nIt is unclear at the moment if this also applies to files that have expired after a set period of time. I will retest when files I have uploaded have expired.\n\n## Step-by-step Reproduction Instructions\n\n1. Visit https://███████/██████/pickupfiles.aspx?id=15849581, a file I uploaded and deleted.\n2. Try the password `█████████`. Observe that an error is displayed that the file is deleted.\n3. As described above, generate the following cookie, based on the file ID and password.\n\n```\npickup=Subject=&PackageID=MTU4NDk1ODE=█████████\n```\n\n4. Make the following GET request with the cookie:\n\n```\nGET /████████/Download.aspx?PackageID=15849581&FileName=dog.jpg HTTP/1.1\nHost: ███████\nConnection: close\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\nReferer: https://█████/██████████/pickupfiles.aspx?id=15849581\nAccept-Language: en-US,en;q=0.9\nCookie:  pickup=Subject=&PackageID=MTU4NDk1ODE=████\n\n```\n\n5. Observe that the file is returned, demonstrating that it has not been deleted.\n\nThis also has been tested with CAC-enforced files and files that are \"locked\" due to already having been downloaded.\n\n## Impact\n\n.",
  "weakness": {
    "id": 32,
    "name": "Cryptographic Issues - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": null,
  "vote_count": 3,
  "voters": [
    "macasun",
    "sa1tama0",
    "krame"
  ],
  "severity": {
    "rating": "critical",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
