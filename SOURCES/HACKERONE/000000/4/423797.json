{
  "id": 423797,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80MjM3OTc=",
  "url": "https://hackerone.com/reports/423797",
  "title": "Passive stored XSS at broadcast room",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2018-10-14T19:44:18.147Z",
  "submitted_at": "2018-10-14T19:44:18.147Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "skavans",
    "url": "/skavans",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/014/089/00a08f6b566bcdfe82b2f0be62bdde605a030823_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 30475,
    "url": "https://hackerone.com/chaturbate",
    "handle": "chaturbate",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/030/475/178c32f60a890eb06ce5d698d44b3eafa35ccf8c_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/030/475/178c32f60a890eb06ce5d698d44b3eafa35ccf8c_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Chaturbate",
      "twitter_handle": "chaturbate",
      "website": "https://chaturbate.com",
      "about": "The largest online adult cam site"
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "no-content",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2018-11-06T08:11:21.087Z",
  "bug_reporter_agreed_on_going_public_at": "2018-11-01T12:47:26.946Z",
  "team_member_agreed_on_going_public_at": "2018-11-06T08:11:21.009Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "",
  "weakness": {
    "id": 62,
    "name": "Cross-site Scripting (XSS) - Stored"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2018-12-01T12:47:27.011Z",
  "allow_singular_disclosure_after": -164161527.56482857,
  "singular_disclosure_allowed": true,
  "vote_count": 73,
  "voters": [
    "foobar7",
    "bogdantcaciuc",
    "sameerphad72",
    "spam404",
    "ali",
    "mik317",
    "johndoe1492",
    "d3f4u17",
    "savitar0x01",
    "ateek",
    "and 63 more..."
  ],
  "severity": {
    "rating": "high",
    "score": 8.9,
    "author_type": "User",
    "metrics": {
      "attack_vector": "network",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "changed",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "low"
    }
  },
  "structured_scope": {
    "databaseId": 11722,
    "asset_type": "URL",
    "asset_identifier": "chaturbate.com",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "id": 11537,
      "category": "team",
      "content": "The hacker found that a specially crafted app names could insert a small amount of data into an A tag's href in the \"Broadcaster is running these apps: \" chat text. Because of the character limit this required multiple successive clicks on different app names, and in the example utilised the room subject. Due to this and that the broadcaster would be required to use specially crafted apps, the scope of attack is limited. We quickly resolved this issue.",
      "user": {
        "id": 301900,
        "username": "williammmllc",
        "name": "William",
        "bio": "",
        "cleared": false,
        "verified": false,
        "website": null,
        "location": "",
        "created_at": "2018-07-03T01:28:23.665Z",
        "url": "https://hackerone.com/williammmllc",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "company",
        "profile_picture_urls": {
          "small": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "medium": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png",
          "xtralarge": "/assets/avatars/default-25f7248a18bdf9e2dc8310319b148d66cff430fa0fade6c5f25fee1b8d7f27ed.png"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    },
    {
      "id": 11538,
      "category": "researcher",
      "content": "##Summary##\nHey team,\n\nI have discovered the passive stored XSS at broadcast room page.\nThe vulnerable component is the running application link at the chat header.\n\nJS function `start_defchat` contains object with many different parameters and the interesting one is `app_info_json`. This parameter contains information about applications running in the following format:\n```\nAPP1_NAME|APP1_DETAILS_LINK,APP2_NAME|APP2_DETAILS_LINK\n```\nThis parameter is used to construct the chat header part containing the information about broadcaster's running applications. Please look at the screenshot below:\n{F360611}.\nWhen the parameter is injected into the page source, the `|` symbol is unfiltered so an attacker can craft application with malicious name containing this symbol to forge the app link to the javascript protocol one. So crafting the app with name `something|javascript:alert()`, the following `app_info_json` parameter modification becomes possible:\n```\nsomething|javascript:alert()|APP1_DETAILS_LINK,APP2_NAME|APP2_DETAILS_LINK\n```\nIn the case above, the chat header is modified to contain the following DOM element:\n```html\n<p>You are running these apps: <a href=\"javascript:alert()\" target=\"_blank\">1</a></p>\n```\n\nThe problem is that the app name length is limited to 32 symbols, that is not enough to craft real world evil XSS-payload. It can be bypassed if the attacker puts the JS-code in some other HTML-element under his control and then just reads and executes it from the evil link. Nevertheless, I could not construct so small payload to even read and execute text of some element. So I have split the payload into two and used two applications to execute it. In this case, the victim should click two links one after another, that decreases the vulnerability risk a little. Though I have add the notification code in my app that writes every 10 seconds that you can earn free tokens if click at both links :)\n\n## Steps To Reproduce:\n\n  1. Change your room title to `alert('XSS by skavans at ' + document.domain)`\n  1. Create and run some dummy app/bot with name `1|javascript:b='#roomtitle';0`\n  1. Create and run second bot with name `2|javascript:eval($(b).text())`\n  1. Start broadcasting and open the room using another account (victim)\n  1. Click at link `1`, then at link `2`. The xss will fire after that.\n\n{F360624}\n\nP.S.: The XSS fires at latest Chrome and Safari under Mac OS and does not work at the latest Firefox because of `target=\"_blank\"` link's attribute. The Firefox opens new page after user clicks at such link so it is impossible to click at the second link.\n\nThe payload is now injected into the following password-protected room:\nhttps://chaturbate.com/b/h1tester1/ (password is `hackerone`).\n\n## Impact\n\nGet full control under victim's account.",
      "user": {
        "id": 14089,
        "username": "skavans",
        "name": "Anton Subbotin",
        "bio": "Swapped my office work for the bounty hunting ⚔️",
        "cleared": false,
        "verified": false,
        "website": "https://skavans.ru/en/",
        "location": "Russia",
        "created_at": "2014-11-14T23:02:26.903Z",
        "url": "https://hackerone.com/skavans",
        "hackerone_triager": false,
        "hackerone_employee": false,
        "user_type": "hacker",
        "profile_picture_urls": {
          "small": "https://profile-photos.hackerone-user-content.com/variants/000/014/089/00a08f6b566bcdfe82b2f0be62bdde605a030823_original.jpg/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
          "medium": "https://profile-photos.hackerone-user-content.com/variants/000/014/089/00a08f6b566bcdfe82b2f0be62bdde605a030823_original.jpg/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc",
          "xtralarge": "https://profile-photos.hackerone-user-content.com/variants/000/014/089/00a08f6b566bcdfe82b2f0be62bdde605a030823_original.jpg/114764ec8f01b1a3e153599212c9f011fb3b0bce3a4fdc1f9a3c551f8c94acf8"
        }
      },
      "can_view?": true,
      "can_create?": false,
      "attachments": []
    }
  ]
}
