{
  "id": 39658,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zOTY1OA==",
  "url": "https://hackerone.com/reports/39658",
  "title": "Reflected File Download",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2014-12-17T19:13:45.583Z",
  "submitted_at": "2014-12-17T19:13:45.583Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "0xdeadpool",
    "url": "/0xdeadpool",
    "profile_picture_urls": {
      "small": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/variants/e0rntmulnwirrz8mmrpr3lrb0686/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98?response-content-disposition=inline%3B%20filename%3D%22superhero-deadpool-comics-512.png%22%3B%20filename%2A%3DUTF-8%27%27superhero-deadpool-comics-512.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2MPOSDGS%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T113419Z&X-Amz-Expires=3091&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCBbMU%2B267qveSZjBTX7ems7plNjeRB6ghD4pLJYoxoNQIhAOB1OSi6O%2Fdo0XBpeF6JncYBFY%2B3LuUhN87iPIpANtG6KrIFCG8QAxoMMDEzNjE5Mjc0ODQ5IgyTVupFrPXFhTCscDcqjwX3tBGrIxV1zh7UC%2F4Jr3riyPw49dAeC5kRAlOtteJbZE7w38%2Bz4nQNyxwc0EDGaQF7ShQBfd%2BZUHPanKu9xreSHilAC48s6ipy0W6liWIA716VdwLzxs61TAwjVY5Dn5NcJX6Q3ESCcUgNOvCDp5WtNJIC8hjUvq%2FIfZNGgSU8EEE3ZhddGlH637YMsQmHoURN7ZdlmqOjTdTjp1ZmGwSf4gfCfxcBa7RWhKXxfMjNXP9W%2B7Q4lzx9iyRB9bAKQ4vzqfzKuIzUvErDi7g1BejVCAMSpc3neh6LHUPLL09kycCd7wAIkU7M%2B1YSEpwoAGZjPw1YxjIXbkUjkViJH7tHQuO4Y2MDuCX9kPdXFdl1iTN%2BQFQHzJUlJnpzreuX8gCvgxp69xs2UrjoNcSh%2FutYkUp8hxyzddNzX4DncxeeiM5bDDyE%2FiM9XoHAfxZIZotmhUdHCXdIwfJOxL0rm9j1SkozgxU5pKQ%2FMqFAw9ktT4uCJOpF4hQqSIO3Al5aEOuHYpsL%2FvTUa0CWR23BN5Oso%2FwqP4o%2BpqfE5SGocS58oIvDbg%2BUSZgbOd%2FASTpH0%2BdbT75BjpWMniqmLAdLfz%2B9HoKI4%2B%2Bu1VE9nn3tEdJdpoT8plVaCnWqo6gsxkH1xRgD3LIQnGiOB3VBJMae5D%2B3SINIj%2F02Ts9Sk9HfzDcHasyi33Rbfa2Z6Cybqm9RjGjM9NZxVc6VNJAbR65Dz9a86PbI1BXTro4UwUsRNpwkFO2dAcHb8%2BKZBxPXEAHTC%2BofM5%2BCgN25GFIFvtqv6dqg7qhR09%2B2yIbEFl3Jl0CO2tqOCuUg8fXONobnIcyzyJ5drnRry8Hja0ZBfbS5kAfZw6b00jsYTbyK27fWrclbMLiSrK4GOrABSlUIRQH7wV3jiBwm%2BeWqVFr0C9fXdkEWssmuTS38vAJfNkTBbi3JGXNRIeiEwLy8Ure25FlVwG2TP52pXfh0Nc96Cu8PlYAOMCGlg2RvQKToTUDyNjN%2FvhVk%2B2ldWDLLFAMrKgMam5Gdy5PJO6eVDmNGMuI5wUXvzyUPjR9cvsWGe75MDpFAn9K8YC%2FVr8w8lUemxqjYZSER8ZFwYOVS4G6%2BJQ0efx3tmFba4J9Wekc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cafb76ec04065c0018413019184353352644e9e4d838da03f5ddf62d91b2a1e9"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 13,
    "url": "https://hackerone.com/security",
    "handle": "security",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/013/fa942b9b1cbf4faf37482bf68458e1195aab9c02_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "HackerOne",
      "twitter_handle": "Hacker0x01",
      "website": "https://hackerone.com",
      "about": "Vulnerability disclosure should be safe, transparent, and rewarding."
    }
  },
  "has_bounty?": false,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": false,
  "disclosed_at": "2016-04-25T16:14:28.068Z",
  "bug_reporter_agreed_on_going_public_at": "2016-04-25T16:14:27.998Z",
  "team_member_agreed_on_going_public_at": "2016-04-25T02:14:53.487Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "**Info:**\r\nReflected File Download is a new web attack vector. It allows an attacker to craft a malicious file and present it to a victim, but there is no file present at the server. It was recently published at the BlackHat Eupore 2014 by Oren Hafif. Link to his presentation is given at the end.\r\n\r\n**Pre-requisite:** To affect a user, he/she must be in a team with the attacker.\r\n\r\nThe reason being that the flaw is connected to the `triggers` page which can only be accessed by team members. \r\n\r\n**Preparing the injected file**\r\n1.) We first need to create a new `trigger`.  We have 3 fields: `Criteria`, `Action` and `Options`\r\n2.) In `Criteria` we have a text box called `text`. Populate it with the following content:\r\n* * *\r\n    text\" || calc ||\r\n* * *\r\n3.) Fill the remaining boxes arbitrarily. Give any text. We have created a trigger.\r\n4.) If we go back to our triggers page we have an option to edit this particular trigger we created. The format is as follows:\r\n* * *\r\n    hackerone.com/<team_name>/triggers/<numeric_id>/edit\r\n* * *\r\n5.) Take this link, remove the `/edit` parameter.\r\n6.) Now if we access this link, we get a `404` saying something went wrong. But append `.bat` we will get a JSON response. Appending  `.` and any character will trigger a JSON response.\r\n\r\nNow we have a URL with a `.bat` extension. The JSON response contains `text\" || calc ||` somewhere in the middle of this JSON response. Now if we take this JSON response and paste it in a Command Prompt it would open up a calculator. We need to present this as a file. To do this we craft a page as follows:\r\n* * *\r\n    <html>\r\n    <a href=\"https://hackerone.com/<team_name>/triggers/<numeric-id>.bat\" download=\"anything.cmd\">Click to view other user's bugs</a>\r\n    </html>\r\n* * *\r\n\r\nNow once the victim clicks on the link, he is presented with a file download box. The file is shown to be from `Hackerone` itself. Upon executing the file a calculator pops up. We have numerous payloads other than `calc`. They have been discussed in the White paper of RFD. \r\n\r\n**Limitation:**\r\nThe issue works in Google Chrome and IE. Firefox will not prompt for a download and instead show the JSON response. It is because it does not recognize the `download` parameter in the `href` attribute.\r\n\r\n**Reference:**\r\n* * *\r\nblog.spiderlabs.com/2014/10/reflected-file-download-the-white-paper.html\r\n* * *\r\n\r\nHere is a link to Youtube demonstrating the issue. The video is unlisted.\r\n* * *\r\nhttps://www.youtube.com/watch?v=b_neIFxJ_Wg&feature=youtu.be\r\n* * *\r\n\r\nRegards,\r\nHysteria\r\n",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2016-05-25T02:14:59.431Z",
  "allow_singular_disclosure_after": -243681559.94315434,
  "singular_disclosure_allowed": true,
  "vote_count": 8,
  "voters": [
    "shubham_srt",
    "fdeleite",
    "dastan_9408",
    "r3y",
    "khizer47",
    "shivammusic",
    "dyabla",
    "arch25"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
