{
  "id": 35287,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC8zNTI4Nw==",
  "url": "https://hackerone.com/reports/35287",
  "title": "getting emails of users/removing them from victims account [using typical attack]",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2014-11-12T13:04:55.177Z",
  "submitted_at": "2014-11-12T13:04:55.177Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "akhil-reni",
    "url": "/akhil-reni",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/iEozx7qMYfY94dxhXMs6ctPM/9a55e00ecd2cdf18a7f40678e6836e4cdc90bf95eb4b50c43f5fb775da40bb65"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 61,
    "url": "https://hackerone.com/x",
    "handle": "x",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/3c7b305354c9073c106ae3d1701798defaaf5be844fb8fdfa49ca62f991a2c2c",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/ikx4ept298unt534kpz4am2bd4zs/f4a495c04fdb224bac8ec64587537e511aa8c4925e7955bee0a19e0ed7d891dc"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "X (Formerly Twitter)",
      "twitter_handle": "XSecurity",
      "website": "https://x.com",
      "about": "X helps you create and share ideas and information instantly, without barriers."
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2015-03-13T04:17:05.335Z",
  "bug_reporter_agreed_on_going_public_at": "2015-03-13T04:17:04.736Z",
  "team_member_agreed_on_going_public_at": "2015-03-12T19:41:06.521Z",
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hey Hi, \r\n\r\nI would like to explain a typical type of attack combined with a brute force attack leading to email disclosure. \r\nconditions : should be having email notifications ON .\r\n\r\nEvery time someone follows me , favs my tweet i get a notification on my email, and the footer of the email . click here if this email is not signed up.\r\n\r\nhttps://twitter.com/account/not_my_account/[account_name]/D26H5-DAH4C-141579\r\n\r\nEvery notification email has a different unique Code.\r\nBut the probability of getting the right is very LOW.\r\nBut when we send 1000 email notifications to the victim(by fav and un-fav continuously on a particular tweet )  \r\nthe probability decreases a bit, and when the email notifications are increased the probability of getting the right code gets HIGH!\r\n\r\nchances of getting the right code ‚àù number of notification emails.\r\n\r\nThis whole process can be simply automated using PHP or python, making it more easy.\r\n\r\nFaults in the system:\r\n\r\n1) a unique code is generated every time, 5 secs 5 notification emails = 5 different codes.\r\n      Fix suggested: The code generated should be the same for like next 1 hour\r\n\r\n2)  The code doesn't expire.  i dig'd into one of my old twitter notification emails and seen that the code is still active.\r\n        Fix suggested : Expire tokens ASAP!\r\n\r\n3)  Getting the right discloses the email. whenever i get the right code, the email is disclosed.\r\n              For example: for username @test entering the right code discloses\r\n              \"If you did not sign up for the Twitter account \"test\", please confirm so that we may remove your                  email address test@gmail.com from this account. \"\r\n      Fix suggested : use *** instead\r\nsomething like te****@gmail.com\r\n\r\n4) if a user removes an email , the code should immediately  get expired .\r\n    if we hit the right code it still discloses the old email.\r\nsomething like this:\r\n\"Your email has been removed.\r\nYour email (test@live.com) has been removed from the Twitter account \"test\".\r\n\r\nYou will no longer receive Twitter notifications intended for this account.\"\r\n\r\n\r\nThanks,\r\nKarthik\r\nwesecureapp",
  "weakness": {
    "id": 27,
    "name": "Improper Authentication - Generic"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [],
  "allow_singular_disclosure_at": "2015-04-11T19:41:07.311Z",
  "allow_singular_disclosure_after": -279042735.69924855,
  "singular_disclosure_allowed": true,
  "vote_count": 3,
  "voters": [
    "dudez",
    "eveeez",
    "shivammusic"
  ],
  "structured_scope": null,
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
